/* Generated by Yosys 0.15+70 (git sha1 48d7a6c47, clang 11.0.1-2 -fPIC -Os) */

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_block_A94B6_B7406" *)
(* src = "FPNewBlackbox.preprocessed.v:6591.1-6905.10" *)
module \$paramod$011e4d7ee08c34f246a38322dc9967d23ecc8081\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:6765.37-6765.53" *)
  wire _0_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire _1_;
  (* src = "FPNewBlackbox.preprocessed.v:6879.57-6879.71" *)
  wire [71:0] arbiter_output;
  (* src = "FPNewBlackbox.preprocessed.v:6662.14-6662.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:6638.13-6638.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:6648.19-6648.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6658.14-6658.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:6655.13-6655.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:6666.13-6666.21" *)
  wire [4:0] fmt_busy;
  (* src = "FPNewBlackbox.preprocessed.v:6663.13-6663.25" *)
  wire [4:0] fmt_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6665.13-6665.26" *)
  (* unused_bits = "1 2 3 4" *)
  wire [4:0] fmt_out_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6664.13-6664.26" *)
  wire [4:0] fmt_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:6667.63-6667.74" *)
  wire [359:0] fmt_outputs;
  (* src = "FPNewBlackbox.preprocessed.v:6764.10-6764.18" *)
  wire \gen_parallel_slices[0].active_format.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:6654.14-6654.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:6653.13-6653.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:6650.19-6650.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6641.50-6641.60" *)
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:6644.19-6644.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:6645.13-6645.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:6640.44-6640.54" *)
  input [127:0] operands_i;
  wire [127:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:6661.13-6661.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:6660.14-6660.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:6656.28-6656.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:6642.19-6642.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:6639.13-6639.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:6647.19-6647.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6657.20-6657.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:6652.47-6652.52" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:6659.48-6659.53" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:6651.13-6651.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6668.22-6668.58" *) _1_;
  assign \gen_parallel_slices[0].active_format.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6765.23-6765.54" *) _0_;
  assign _0_ = ! (* src = "FPNewBlackbox.preprocessed.v:6765.37-6765.53" *) dst_fmt_i;
  wire [4:0] _6_ = { 4'h0, fmt_in_ready[0] };
  assign _1_ = _6_[dst_fmt_i +: 1];
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6774.7-6794.6" *)
  \$paramod$31f70d71ae7f3f77f9dfca4666af744b0ecc7354\fpnew_opgroup_fmt_slice_E368D_75924  \gen_parallel_slices[0].active_format.i_fmt_slice  (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .extension_bit_o(fmt_outputs[2]),
    .flush_i(flush_i),
    .in_ready_o(fmt_in_ready[0]),
    .in_valid_i(\gen_parallel_slices[0].active_format.in_valid ),
    .is_boxed_i(is_boxed_i[1:0]),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(fmt_out_ready[0]),
    .out_valid_o(fmt_out_valid[0]),
    .result_o(fmt_outputs[71:8]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(fmt_outputs[7:3]),
    .tag_i(tag_i),
    .tag_o(fmt_outputs[1:0]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6888.4-6899.3" *)
  \$paramod$2d98b2ed91e87ed1e332161bf5d593baf43453be\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i({ 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd, fmt_outputs[71:0] }),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i({ 4'h0, fmt_out_valid[0] }),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign extension_bit_o = arbiter_output[2];
  assign fmt_busy = { 4'h0, busy_o };
  assign fmt_in_ready[4:1] = 4'h0;
  assign fmt_out_valid[4:1] = 4'h0;
  assign fmt_outputs[359:72] = 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd;
  assign result_o = arbiter_output[71:8];
  assign status_o = arbiter_output[7:3];
  assign tag_o = arbiter_output[1:0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_block_A94B6_B7406" *)
(* src = "FPNewBlackbox.preprocessed.v:6591.1-6905.10" *)
module \$paramod$137875584cfbb9157576550a1c10e93971484e05\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _00_;
  (* src = "FPNewBlackbox.preprocessed.v:6843.36-6843.80" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [1:0] _03_;
  (* src = "FPNewBlackbox.preprocessed.v:6843.50-6843.63" *)
  (* unused_bits = "31" *)
  wire [31:0] _04_;
  (* src = "FPNewBlackbox.preprocessed.v:6879.57-6879.71" *)
  wire [71:0] arbiter_output;
  (* src = "FPNewBlackbox.preprocessed.v:6662.14-6662.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:6638.13-6638.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:6648.19-6648.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6658.14-6658.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:6655.13-6655.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:6666.13-6666.21" *)
  wire [4:0] fmt_busy;
  (* src = "FPNewBlackbox.preprocessed.v:6663.13-6663.25" *)
  wire [4:0] fmt_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6665.13-6665.26" *)
  (* unused_bits = "1 2 3 4" *)
  wire [4:0] fmt_out_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6664.13-6664.26" *)
  wire [4:0] fmt_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:6667.63-6667.74" *)
  wire [359:0] fmt_outputs;
  (* src = "FPNewBlackbox.preprocessed.v:6842.9-6842.17" *)
  wire \gen_merged_slice.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:6654.14-6654.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:6653.13-6653.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:6650.19-6650.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6641.50-6641.60" *)
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:6644.19-6644.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:6645.13-6645.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:6640.44-6640.54" *)
  input [191:0] operands_i;
  wire [191:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:6661.13-6661.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:6660.14-6660.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:6656.28-6656.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:6642.19-6642.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:6639.13-6639.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:6647.19-6647.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6657.20-6657.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:6652.47-6652.52" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:6659.48-6659.53" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:6651.13-6651.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6668.22-6668.58" *) _02_;
  assign \gen_merged_slice.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6843.22-6843.81" *) _01_;
  assign _01_ = _03_ == (* src = "FPNewBlackbox.preprocessed.v:6843.36-6843.80" *) 2'h2;
  wire [4:0] _11_ = { 4'h0, fmt_in_ready[0] };
  assign _02_ = _11_[dst_fmt_i +: 1];
  wire [9:0] _12_ = 10'h2aa;
  assign _03_ = _12_[$signed({ _00_[31:1], 1'h0 }) +: 2];
  assign { _04_[31], _00_[31:1] } = 32'd4 - (* src = "FPNewBlackbox.preprocessed.v:6843.50-6843.63" *) dst_fmt_i;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6853.6-6876.5" *)
  \$paramod$ca1ccc60aacaa31ef41dedd0ed417009e3aa91a5\fpnew_opgroup_multifmt_slice_607F1_85D30  \gen_merged_slice.i_multifmt_slice  (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(fmt_outputs[2]),
    .flush_i(flush_i),
    .in_ready_o(fmt_in_ready[0]),
    .in_valid_i(\gen_merged_slice.in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i(is_boxed_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(fmt_out_ready[0]),
    .out_valid_o(fmt_out_valid[0]),
    .result_o(fmt_outputs[71:8]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(fmt_outputs[7:3]),
    .tag_i(tag_i),
    .tag_o(fmt_outputs[1:0]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6888.4-6899.3" *)
  \$paramod$2d98b2ed91e87ed1e332161bf5d593baf43453be\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i({ 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd, fmt_outputs[71:0] }),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i({ 4'h0, fmt_out_valid[0] }),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign _00_[0] = 1'h0;
  assign _04_[30:0] = _00_[31:1];
  assign extension_bit_o = arbiter_output[2];
  assign fmt_busy = { 4'h0, busy_o };
  assign fmt_in_ready[4:1] = 4'h0;
  assign fmt_out_valid[4:1] = 4'h0;
  assign fmt_outputs[359:72] = 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd;
  assign result_o = arbiter_output[71:8];
  assign status_o = arbiter_output[7:3];
  assign tag_o = arbiter_output[1:0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\rr_arb_tree_52163_F264E" *)
(* src = "FPNewBlackbox.preprocessed.v:1.1-178.10" *)
module \$paramod$2d98b2ed91e87ed1e332161bf5d593baf43453be\rr_arb_tree_52163_F264E (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  (* src = "FPNewBlackbox.preprocessed.v:128.5-135.8" *)
  wire [2:0] _00_;
  (* src = "FPNewBlackbox.preprocessed.v:148.38-148.88" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:148.38-148.88" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:168.40-168.91" *)
  wire _03_;
  (* src = "FPNewBlackbox.preprocessed.v:168.40-168.91" *)
  wire _04_;
  wire _05_;
  (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *)
  wire _06_;
  (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *)
  wire _07_;
  (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *)
  wire _08_;
  (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *)
  wire _09_;
  (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *)
  wire _10_;
  (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *)
  wire _11_;
  (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *)
  wire _12_;
  (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *)
  wire _13_;
  (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *)
  wire _14_;
  (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *)
  wire _15_;
  (* src = "FPNewBlackbox.preprocessed.v:123.21-123.35" *)
  wire _16_;
  (* src = "FPNewBlackbox.preprocessed.v:148.21-148.34" *)
  wire _17_;
  (* src = "FPNewBlackbox.preprocessed.v:148.21-148.34" *)
  wire _18_;
  (* src = "FPNewBlackbox.preprocessed.v:151.79-151.83" *)
  wire _19_;
  (* src = "FPNewBlackbox.preprocessed.v:151.79-151.83" *)
  wire _20_;
  (* src = "FPNewBlackbox.preprocessed.v:168.20-168.36" *)
  wire _21_;
  (* src = "FPNewBlackbox.preprocessed.v:168.20-168.36" *)
  wire _22_;
  (* src = "FPNewBlackbox.preprocessed.v:171.50-171.54" *)
  wire _23_;
  (* src = "FPNewBlackbox.preprocessed.v:171.50-171.54" *)
  wire _24_;
  (* src = "FPNewBlackbox.preprocessed.v:23.13-23.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:29.91-29.97" *)
  input [359:0] data_i;
  wire [359:0] data_i;
  (* src = "FPNewBlackbox.preprocessed.v:32.82-32.88" *)
  output [71:0] data_o;
  wire [71:0] data_o;
  (* src = "FPNewBlackbox.preprocessed.v:25.13-25.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:52.439-52.449" *)
  wire [503:0] \gen_arbiter.data_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:98.28-98.37" *)
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  (* src = "FPNewBlackbox.preprocessed.v:96.25-96.35" *)
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  (* src = "FPNewBlackbox.preprocessed.v:99.28-99.36" *)
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  (* src = "FPNewBlackbox.preprocessed.v:100.11-100.22" *)
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  (* src = "FPNewBlackbox.preprocessed.v:97.28-97.37" *)
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  (* src = "FPNewBlackbox.preprocessed.v:95.25-95.35" *)
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  (* src = "FPNewBlackbox.preprocessed.v:67.27-67.31" *)
  wire [2:0] \gen_arbiter.gen_int_rr.rr_d ;
  (* src = "FPNewBlackbox.preprocessed.v:142.11-142.14" *)
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:142.11-142.14" *)
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:142.11-142.14" *)
  wire \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:142.11-142.14" *)
  wire \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:53.34-53.43" *)
  (* unused_bits = "6" *)
  wire [6:0] \gen_arbiter.gnt_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:51.235-51.246" *)
  (* unused_bits = "5 8" *)
  wire [20:0] \gen_arbiter.index_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:56.23-56.28" *)
  wire [4:0] \gen_arbiter.req_d ;
  (* src = "FPNewBlackbox.preprocessed.v:54.34-54.43" *)
  wire [6:0] \gen_arbiter.req_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:55.25-55.29" *)
  reg [2:0] \gen_arbiter.rr_q ;
  (* src = "FPNewBlackbox.preprocessed.v:31.13-31.18" *)
  input gnt_i;
  wire gnt_i;
  (* src = "FPNewBlackbox.preprocessed.v:28.28-28.33" *)
  output [4:0] gnt_o;
  wire [4:0] gnt_o;
  (* src = "FPNewBlackbox.preprocessed.v:33.31-33.36" *)
  output [2:0] idx_o;
  wire [2:0] idx_o;
  (* src = "FPNewBlackbox.preprocessed.v:27.27-27.32" *)
  input [4:0] req_i;
  wire [4:0] req_i;
  (* src = "FPNewBlackbox.preprocessed.v:30.14-30.19" *)
  output req_o;
  wire req_o;
  (* src = "FPNewBlackbox.preprocessed.v:26.30-26.34" *)
  input [2:0] rr_i;
  wire [2:0] rr_i;
  (* src = "FPNewBlackbox.preprocessed.v:24.13-24.19" *)
  input rst_ni;
  wire rst_ni;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:149$2522.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:149$2523.inp ;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2506.$result ;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2507.$result ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2516.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2517.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2518.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2519.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2520.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:35.30-35.33" *)
  wire [2:0] \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2521.inp ;
  assign _01_ = req_i[1] & (* src = "FPNewBlackbox.preprocessed.v:148.38-148.88" *) \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & (* src = "FPNewBlackbox.preprocessed.v:148.38-148.88" *) \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [3] & (* src = "FPNewBlackbox.preprocessed.v:151.30-151.83" *) _19_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [4] & (* src = "FPNewBlackbox.preprocessed.v:151.30-151.83" *) _20_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [3] & (* src = "FPNewBlackbox.preprocessed.v:152.36-152.94" *) \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [4] & (* src = "FPNewBlackbox.preprocessed.v:152.36-152.94" *) \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _03_ = req_i[4] & (* src = "FPNewBlackbox.preprocessed.v:168.40-168.91" *) \gen_arbiter.rr_q [2];
  assign _04_ = \gen_arbiter.req_nodes [4] & (* src = "FPNewBlackbox.preprocessed.v:168.40-168.91" *) \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & (* src = "FPNewBlackbox.preprocessed.v:171.32-171.54" *) _23_;
  assign \gen_arbiter.gnt_nodes [3] = \gen_arbiter.gnt_nodes [1] & (* src = "FPNewBlackbox.preprocessed.v:171.32-171.54" *) _24_;
  assign gnt_o[4] = \gen_arbiter.gnt_nodes [2] & (* src = "FPNewBlackbox.preprocessed.v:171.32-171.54" *) req_i[4];
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & (* src = "FPNewBlackbox.preprocessed.v:172.36-172.57" *) \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.gnt_nodes [4] = \gen_arbiter.gnt_nodes [1] & (* src = "FPNewBlackbox.preprocessed.v:172.36-172.57" *) \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:128.5-135.8" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 3'h0;
    else if (_05_) \gen_arbiter.rr_q  <= _00_;
  assign _05_ = | { _16_, flush_i };
  assign _06_ = 32'd0 > (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *) \gen_arbiter.rr_q ;
  assign _07_ = 32'd1 > (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *) \gen_arbiter.rr_q ;
  assign _08_ = 32'd2 > (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *) \gen_arbiter.rr_q ;
  assign _09_ = 32'd3 > (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *) \gen_arbiter.rr_q ;
  assign _10_ = 32'd4 > (* src = "FPNewBlackbox.preprocessed.v:104.31-104.39" *) \gen_arbiter.rr_q ;
  assign _11_ = 32'd0 <= (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *) \gen_arbiter.rr_q ;
  assign _12_ = 32'd1 <= (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *) \gen_arbiter.rr_q ;
  assign _13_ = 32'd2 <= (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *) \gen_arbiter.rr_q ;
  assign _14_ = 32'd3 <= (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *) \gen_arbiter.rr_q ;
  assign _15_ = 32'd4 <= (* src = "FPNewBlackbox.preprocessed.v:105.31-105.40" *) \gen_arbiter.rr_q ;
  assign _16_ = gnt_i && (* src = "FPNewBlackbox.preprocessed.v:123.21-123.35" *) req_o;
  assign _17_ = ~ (* src = "FPNewBlackbox.preprocessed.v:148.21-148.34" *) req_i[0];
  assign _18_ = ~ (* src = "FPNewBlackbox.preprocessed.v:148.21-148.34" *) req_i[2];
  assign _19_ = ~ (* src = "FPNewBlackbox.preprocessed.v:151.79-151.83" *) \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign _20_ = ~ (* src = "FPNewBlackbox.preprocessed.v:151.79-151.83" *) \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _21_ = ~ (* src = "FPNewBlackbox.preprocessed.v:168.20-168.36" *) \gen_arbiter.req_nodes [1];
  assign _22_ = ~ (* src = "FPNewBlackbox.preprocessed.v:168.20-168.36" *) \gen_arbiter.req_nodes [3];
  assign _23_ = ~ (* src = "FPNewBlackbox.preprocessed.v:171.50-171.54" *) \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign _24_ = ~ (* src = "FPNewBlackbox.preprocessed.v:171.50-171.54" *) \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [3] = req_i[0] | (* src = "FPNewBlackbox.preprocessed.v:147.33-147.66" *) req_i[1];
  assign \gen_arbiter.req_nodes [4] = req_i[2] | (* src = "FPNewBlackbox.preprocessed.v:147.33-147.66" *) req_i[3];
  assign \gen_arbiter.gen_levels[2].gen_level[0].sel  = _17_ | (* src = "FPNewBlackbox.preprocessed.v:148.21-148.89" *) _01_;
  assign \gen_arbiter.gen_levels[2].gen_level[1].sel  = _18_ | (* src = "FPNewBlackbox.preprocessed.v:148.21-148.89" *) _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | (* src = "FPNewBlackbox.preprocessed.v:167.32-167.69" *) req_i[4];
  assign \gen_arbiter.req_nodes [1] = \gen_arbiter.req_nodes [3] | (* src = "FPNewBlackbox.preprocessed.v:167.32-167.69" *) \gen_arbiter.req_nodes [4];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _21_ | (* src = "FPNewBlackbox.preprocessed.v:168.20-168.92" *) _03_;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _22_ | (* src = "FPNewBlackbox.preprocessed.v:168.20-168.92" *) _04_;
  assign _00_ = flush_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:131.15-131.22|FPNewBlackbox.preprocessed.v:131.11-134.20" *) 3'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _06_ ? (* src = "FPNewBlackbox.preprocessed.v:104.31-104.57" *) req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _07_ ? (* src = "FPNewBlackbox.preprocessed.v:104.31-104.57" *) req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _08_ ? (* src = "FPNewBlackbox.preprocessed.v:104.31-104.57" *) req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _09_ ? (* src = "FPNewBlackbox.preprocessed.v:104.31-104.57" *) req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [4] = _10_ ? (* src = "FPNewBlackbox.preprocessed.v:104.31-104.57" *) req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _11_ ? (* src = "FPNewBlackbox.preprocessed.v:105.31-105.58" *) req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _12_ ? (* src = "FPNewBlackbox.preprocessed.v:105.31-105.58" *) req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _13_ ? (* src = "FPNewBlackbox.preprocessed.v:105.31-105.58" *) req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _14_ ? (* src = "FPNewBlackbox.preprocessed.v:105.31-105.58" *) req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [4] = _15_ ? (* src = "FPNewBlackbox.preprocessed.v:105.31-105.58" *) req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? (* src = "FPNewBlackbox.preprocessed.v:122.25-122.60" *) \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _16_ ? (* src = "FPNewBlackbox.preprocessed.v:123.21-123.53" *) \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 3'hx;
  assign \gen_arbiter.data_nodes [287:216] = \gen_arbiter.gen_levels[2].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:150.220-150.507" *) data_i[143:72] : data_i[71:0];
  assign \gen_arbiter.data_nodes [359:288] = \gen_arbiter.gen_levels[2].gen_level[1].sel  ? (* src = "FPNewBlackbox.preprocessed.v:150.220-150.507" *) data_i[287:216] : data_i[215:144];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:169.120-169.1111" *) { 1'h1, \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2506.$result [1:0] } : { 1'h0, \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2507.$result [1:0] };
  assign { \gen_arbiter.index_nodes [5], \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2507.$result [1:0] } = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:169.120-169.1111" *) { 2'h1, \gen_arbiter.gen_levels[2].gen_level[1].sel  } : { 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel  };
  assign { \gen_arbiter.index_nodes [8], \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2506.$result [1:0] } = req_i[4] ? (* src = "FPNewBlackbox.preprocessed.v:169.120-169.1111" *) 3'h0 : 3'h2;
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:170.219-170.640" *) \gen_arbiter.data_nodes [215:144] : \gen_arbiter.data_nodes [143:72];
  assign \gen_arbiter.data_nodes [143:72] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:170.219-170.640" *) \gen_arbiter.data_nodes [359:288] : \gen_arbiter.data_nodes [287:216];
  assign \gen_arbiter.data_nodes [215:144] = req_i[4] ? (* src = "FPNewBlackbox.preprocessed.v:170.219-170.640" *) data_i[359:288] : 72'h000000000000000000;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:118.8-121.7" *)
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:110.8-114.7" *)
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign { \gen_arbiter.data_nodes [503:360], \gen_arbiter.data_nodes [71:0] } = { 72'h000000000000000000, data_i[359:288], data_o };
  assign { \gen_arbiter.gnt_nodes [5], \gen_arbiter.gnt_nodes [0] } = { gnt_o[4], gnt_i };
  assign { \gen_arbiter.index_nodes [20:9], \gen_arbiter.index_nodes [7:6], \gen_arbiter.index_nodes [4:0] } = { 8'h00, \gen_arbiter.gen_levels[2].gen_level[1].sel , 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel , \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2506.$result [1:0], \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2507.$result [1:0], idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign { \gen_arbiter.req_nodes [6:5], \gen_arbiter.req_nodes [2], \gen_arbiter.req_nodes [0] } = { 1'h0, req_i[4], req_i[4], req_o };
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:149$2522.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:149$2523.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2506.$result [2] = 1'h1;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2507.$result [2] = 1'h0;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2516.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2517.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2518.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2519.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2520.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$FPNewBlackbox.preprocessed.v:169$2521.inp  = 3'hx;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_fmt_slice_E368D_75924" *)
(* src = "FPNewBlackbox.preprocessed.v:6906.1-7136.10" *)
module \$paramod$31f70d71ae7f3f77f9dfca4666af744b0ecc7354\fpnew_opgroup_fmt_slice_E368D_75924 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:7106.28-7106.76" *)
  wire _00_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.82-7106.130" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.137-7106.185" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.192-7106.240" *)
  wire _03_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.28-7106.76" *)
  wire _04_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.82-7106.130" *)
  wire _05_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.137-7106.185" *)
  wire _06_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.192-7106.240" *)
  wire _07_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.513-7107.561" *)
  wire _08_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.407-7107.455" *)
  wire _09_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.301-7107.349" *)
  wire _10_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.195-7107.243" *)
  wire _11_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.513-7107.561" *)
  wire _12_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.407-7107.455" *)
  wire _13_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.301-7107.349" *)
  wire _14_;
  (* src = "FPNewBlackbox.preprocessed.v:7107.195-7107.243" *)
  wire _15_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.27-7106.131" *)
  wire _16_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.26-7106.186" *)
  wire _17_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.27-7106.131" *)
  wire _18_;
  (* src = "FPNewBlackbox.preprocessed.v:7106.26-7106.186" *)
  wire _19_;
  (* src = "FPNewBlackbox.preprocessed.v:6970.14-6970.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:6951.13-6951.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:6966.14-6966.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:6963.13-6963.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:7012.10-7012.18" *)
  wire \gen_num_lanes[0].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7015.43-7015.57" *)
  wire [63:0] \gen_num_lanes[0].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7016.27-7016.36" *)
  wire [31:0] \gen_num_lanes[0].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7017.16-7017.25" *)
  wire [4:0] \gen_num_lanes[0].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7014.10-7014.19" *)
  wire \gen_num_lanes[0].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7013.10-7013.19" *)
  wire \gen_num_lanes[0].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7021.25-7021.26" *)
  wire [31:0] \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7009.26-7009.38" *)
  wire [31:0] \gen_num_lanes[0].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7010.9-7010.19" *)
  wire \gen_num_lanes[0].local_sign ;
  (* src = "FPNewBlackbox.preprocessed.v:7012.10-7012.18" *)
  wire \gen_num_lanes[1].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7015.43-7015.57" *)
  wire [63:0] \gen_num_lanes[1].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7016.27-7016.36" *)
  wire [31:0] \gen_num_lanes[1].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7017.16-7017.25" *)
  wire [4:0] \gen_num_lanes[1].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7014.10-7014.19" *)
  wire \gen_num_lanes[1].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7013.10-7013.19" *)
  wire \gen_num_lanes[1].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7021.25-7021.26" *)
  wire [31:0] \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7009.26-7009.38" *)
  wire [31:0] \gen_num_lanes[1].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7010.9-7010.19" *)
  wire \gen_num_lanes[1].local_sign ;
  (* src = "FPNewBlackbox.preprocessed.v:6962.14-6962.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:6961.13-6961.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:6954.34-6954.44" *)
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:6996.25-6996.34" *)
  wire [1:0] lane_busy;
  (* src = "FPNewBlackbox.preprocessed.v:6993.32-6993.47" *)
  wire [19:0] lane_class_mask;
  (* src = "FPNewBlackbox.preprocessed.v:6992.25-6992.37" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_ext_bit;
  (* src = "FPNewBlackbox.preprocessed.v:6984.25-6984.38" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6997.25-6997.38" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_is_class;
  (* src = "FPNewBlackbox.preprocessed.v:6985.25-6985.39" *)
  wire [1:0] lane_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:6991.31-6991.42" *)
  wire [9:0] lane_status;
  (* src = "FPNewBlackbox.preprocessed.v:6994.63-6994.72" *)
  (* unused_bits = "2 3" *)
  wire [3:0] lane_tags;
  (* src = "FPNewBlackbox.preprocessed.v:6995.25-6995.39" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_vectorial;
  (* src = "FPNewBlackbox.preprocessed.v:6957.19-6957.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:6958.13-6958.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:6953.44-6953.54" *)
  input [127:0] operands_i;
  wire [127:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:6969.13-6969.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:6968.14-6968.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:7130.22-7130.23" *)
  wire [31:0] \output_processing.sv2v_autoblock_2.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7127.13-7127.24" *)
  wire [4:0] \output_processing.temp_status ;
  (* src = "FPNewBlackbox.preprocessed.v:6999.7-6999.22" *)
  wire result_is_class;
  (* src = "FPNewBlackbox.preprocessed.v:6998.7-6998.23" *)
  wire result_is_vector;
  (* src = "FPNewBlackbox.preprocessed.v:6964.28-6964.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:6955.19-6955.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:6952.13-6952.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:6989.21-6989.39" *)
  wire [63:0] slice_class_result;
  (* src = "FPNewBlackbox.preprocessed.v:6988.21-6988.41" *)
  wire [63:0] slice_regular_result;
  (* src = "FPNewBlackbox.preprocessed.v:6987.38-6987.50" *)
  wire [63:0] slice_result;
  (* src = "FPNewBlackbox.preprocessed.v:6990.21-6990.43" *)
  wire [63:0] slice_vec_class_result;
  (* src = "FPNewBlackbox.preprocessed.v:6965.19-6965.27" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:6960.55-6960.60" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:6967.56-6967.61" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:6986.7-6986.19" *)
  wire vectorial_op;
  (* src = "FPNewBlackbox.preprocessed.v:6959.13-6959.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign \gen_num_lanes[1].active_lane.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7018.23-7018.64" *) vectorial_op_i;
  assign \gen_num_lanes[1].active_lane.out_ready  = out_ready_i & (* src = "FPNewBlackbox.preprocessed.v:7091.24-7091.70" *) result_is_vector;
  assign lane_out_valid[1] = \gen_num_lanes[1].active_lane.out_valid  & (* src = "FPNewBlackbox.preprocessed.v:7092.35-7092.79" *) result_is_vector;
  assign _06_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7106.137-7106.185" *) 10'h004;
  assign _07_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7106.192-7106.240" *) 10'h008;
  assign _08_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.513-7107.561" *) 10'h080;
  assign _00_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.567-7107.615" *) 10'h001;
  assign _09_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.407-7107.455" *) 10'h040;
  assign _01_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.461-7107.509" *) 10'h002;
  assign _10_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.301-7107.349" *) 10'h020;
  assign _02_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.355-7107.403" *) 10'h004;
  assign _11_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.195-7107.243" *) 10'h010;
  assign _03_ = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.249-7107.297" *) 10'h008;
  assign slice_vec_class_result[4] = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.144-7107.192" *) 10'h100;
  assign slice_vec_class_result[5] = lane_class_mask[9:0] == (* src = "FPNewBlackbox.preprocessed.v:7107.94-7107.142" *) 10'h200;
  assign _12_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.513-7107.561" *) 10'h080;
  assign _04_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.567-7107.615" *) 10'h001;
  assign _13_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.407-7107.455" *) 10'h040;
  assign _05_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.461-7107.509" *) 10'h002;
  assign _14_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.301-7107.349" *) 10'h020;
  assign _15_ = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.195-7107.243" *) 10'h010;
  assign slice_vec_class_result[12] = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.144-7107.192" *) 10'h100;
  assign slice_vec_class_result[13] = lane_class_mask[19:10] == (* src = "FPNewBlackbox.preprocessed.v:7107.94-7107.142" *) 10'h200;
  assign _16_ = _00_ || (* src = "FPNewBlackbox.preprocessed.v:7106.27-7106.131" *) _01_;
  assign _17_ = _16_ || (* src = "FPNewBlackbox.preprocessed.v:7106.26-7106.186" *) _02_;
  assign \gen_num_lanes[0].local_sign  = _17_ || (* src = "FPNewBlackbox.preprocessed.v:7106.25-7106.241" *) _03_;
  assign _18_ = _04_ || (* src = "FPNewBlackbox.preprocessed.v:7106.27-7106.131" *) _05_;
  assign _19_ = _18_ || (* src = "FPNewBlackbox.preprocessed.v:7106.26-7106.186" *) _06_;
  assign \gen_num_lanes[1].local_sign  = _19_ || (* src = "FPNewBlackbox.preprocessed.v:7106.25-7106.241" *) _07_;
  assign slice_vec_class_result[0] = _08_ || (* src = "FPNewBlackbox.preprocessed.v:7107.512-7107.616" *) _00_;
  assign slice_vec_class_result[1] = _09_ || (* src = "FPNewBlackbox.preprocessed.v:7107.406-7107.510" *) _01_;
  assign slice_vec_class_result[2] = _10_ || (* src = "FPNewBlackbox.preprocessed.v:7107.300-7107.404" *) _02_;
  assign slice_vec_class_result[3] = _11_ || (* src = "FPNewBlackbox.preprocessed.v:7107.194-7107.298" *) _03_;
  assign slice_vec_class_result[8] = _12_ || (* src = "FPNewBlackbox.preprocessed.v:7107.512-7107.616" *) _04_;
  assign slice_vec_class_result[9] = _13_ || (* src = "FPNewBlackbox.preprocessed.v:7107.406-7107.510" *) _05_;
  assign slice_vec_class_result[10] = _14_ || (* src = "FPNewBlackbox.preprocessed.v:7107.300-7107.404" *) _06_;
  assign slice_vec_class_result[11] = _15_ || (* src = "FPNewBlackbox.preprocessed.v:7107.194-7107.298" *) _07_;
  assign slice_vec_class_result[6] = ~ (* src = "FPNewBlackbox.preprocessed.v:7107.81-7107.92" *) \gen_num_lanes[0].local_sign ;
  assign slice_vec_class_result[14] = ~ (* src = "FPNewBlackbox.preprocessed.v:7107.81-7107.92" *) \gen_num_lanes[1].local_sign ;
  assign status_o = lane_status[4:0] | (* src = "FPNewBlackbox.preprocessed.v:7132.19-7132.54" *) lane_status[9:5];
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:7124.18-7124.28" *) lane_busy;
  assign \gen_num_lanes[0].local_result  = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7093.28-7093.91" *) \gen_num_lanes[0].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign \gen_num_lanes[1].local_result  = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7093.28-7093.91" *) \gen_num_lanes[1].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign lane_status[4:0] = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7094.40-7094.86" *) \gen_num_lanes[0].active_lane.op_status  : 5'h00;
  assign lane_status[9:5] = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7094.40-7094.86" *) \gen_num_lanes[1].active_lane.op_status  : 5'h00;
  assign slice_class_result = result_is_vector ? (* src = "FPNewBlackbox.preprocessed.v:7120.31-7120.97" *) { 48'h000000000000, \gen_num_lanes[1].local_sign , slice_vec_class_result[14:8], \gen_num_lanes[0].local_sign , slice_vec_class_result[6:0] } : { 54'h00000000000000, lane_class_mask[9:0] };
  assign result_o = result_is_class ? (* src = "FPNewBlackbox.preprocessed.v:7121.21-7121.80" *) slice_class_result : { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7066.8-7089.7" *)
  \$paramod$6d8b9e1a9ce9a9fa6c378e58eae11f821dd49832\fpnew_noncomp_8EF6A_8033C  \gen_num_lanes[0].active_lane.genblk1.genblk1.lane_instance.i_noncomp  (
    .aux_i(vectorial_op_i),
    .aux_o(result_is_vector),
    .busy_o(lane_busy[0]),
    .class_mask_o(lane_class_mask[9:0]),
    .clk_i(clk_i),
    .extension_bit_o(extension_bit_o),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .is_boxed_i(is_boxed_i),
    .is_class_o(result_is_class),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i({ operands_i[95:64], operands_i[31:0] }),
    .out_ready_i(out_ready_i),
    .out_valid_o(\gen_num_lanes[0].active_lane.out_valid ),
    .result_o(\gen_num_lanes[0].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(\gen_num_lanes[0].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(tag_o)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7066.8-7089.7" *)
  \$paramod$6d8b9e1a9ce9a9fa6c378e58eae11f821dd49832\fpnew_noncomp_8EF6A_8033C  \gen_num_lanes[1].active_lane.genblk1.genblk1.lane_instance.i_noncomp  (
    .aux_i(vectorial_op_i),
    .aux_o(lane_vectorial[1]),
    .busy_o(lane_busy[1]),
    .class_mask_o(lane_class_mask[19:10]),
    .clk_i(clk_i),
    .extension_bit_o(lane_ext_bit[1]),
    .flush_i(flush_i),
    .in_ready_o(lane_in_ready[1]),
    .in_valid_i(\gen_num_lanes[1].active_lane.in_valid ),
    .is_boxed_i(is_boxed_i),
    .is_class_o(lane_is_class[1]),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i({ operands_i[127:96], operands_i[63:32] }),
    .out_ready_i(\gen_num_lanes[1].active_lane.out_ready ),
    .out_valid_o(\gen_num_lanes[1].active_lane.out_valid ),
    .result_o(\gen_num_lanes[1].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(\gen_num_lanes[1].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(lane_tags[3:2])
  );
  assign \gen_num_lanes[0].active_lane.in_valid  = in_valid_i;
  assign \gen_num_lanes[0].active_lane.local_operands  = { operands_i[95:64], operands_i[31:0] };
  assign \gen_num_lanes[0].active_lane.out_ready  = out_ready_i;
  assign \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd2;
  assign \gen_num_lanes[1].active_lane.local_operands  = { operands_i[127:96], operands_i[63:32] };
  assign \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd2;
  assign lane_ext_bit[0] = extension_bit_o;
  assign lane_in_ready[0] = in_ready_o;
  assign lane_is_class[0] = result_is_class;
  assign lane_out_valid[0] = \gen_num_lanes[0].active_lane.out_valid ;
  assign lane_tags[1:0] = tag_o;
  assign lane_vectorial[0] = result_is_vector;
  assign out_valid_o = \gen_num_lanes[0].active_lane.out_valid ;
  assign \output_processing.sv2v_autoblock_2.i  = 32'd2;
  assign \output_processing.temp_status  = status_o;
  assign slice_regular_result = { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign slice_result = { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign { slice_vec_class_result[63:15], slice_vec_class_result[7] } = { 48'h000000000000, \gen_num_lanes[1].local_sign , \gen_num_lanes[0].local_sign  };
  assign vectorial_op = vectorial_op_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\lzc" *)
(* src = "FPNewBlackbox.preprocessed.v:357.1-429.10" *)
module \$paramod$33927d67db2764900ac78ba84de6c8e59d432344\lzc (in_i, cnt_o, empty_o);
  (* src = "FPNewBlackbox.preprocessed.v:370.32-370.37" *)
  output [4:0] cnt_o;
  wire [4:0] cnt_o;
  (* src = "FPNewBlackbox.preprocessed.v:371.14-371.21" *)
  output empty_o;
  wire empty_o;
  (* src = "FPNewBlackbox.preprocessed.v:385.17-385.18" *)
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:382.22-382.28" *)
  wire [23:0] \gen_lzc.in_tmp ;
  (* src = "FPNewBlackbox.preprocessed.v:379.37-379.46" *)
  wire [119:0] \gen_lzc.index_lut ;
  (* src = "FPNewBlackbox.preprocessed.v:381.48-381.59" *)
  (* unused_bits = "155 156 157 158 159" *)
  wire [159:0] \gen_lzc.index_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:380.34-380.43" *)
  (* unused_bits = "31" *)
  wire [31:0] \gen_lzc.sel_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:369.27-369.31" *)
  input [23:0] in_i;
  wire [23:0] in_i;
  assign empty_o = ~ (* src = "FPNewBlackbox.preprocessed.v:426.49-426.62" *) \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [15] = in_i[23] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[22];
  assign \gen_lzc.sel_nodes [16] = in_i[21] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[20];
  assign \gen_lzc.sel_nodes [17] = in_i[19] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[18];
  assign \gen_lzc.sel_nodes [18] = in_i[17] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[16];
  assign \gen_lzc.sel_nodes [19] = in_i[15] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[14];
  assign \gen_lzc.sel_nodes [20] = in_i[13] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[12];
  assign \gen_lzc.sel_nodes [21] = in_i[11] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[10];
  assign \gen_lzc.sel_nodes [22] = in_i[9] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[8];
  assign \gen_lzc.sel_nodes [23] = in_i[7] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[6];
  assign \gen_lzc.sel_nodes [24] = in_i[5] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[4];
  assign \gen_lzc.sel_nodes [25] = in_i[3] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[2];
  assign \gen_lzc.sel_nodes [26] = in_i[1] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[0];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [2];
  assign \gen_lzc.sel_nodes [1] = \gen_lzc.sel_nodes [3] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [4];
  assign \gen_lzc.sel_nodes [3] = \gen_lzc.sel_nodes [7] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [8];
  assign \gen_lzc.sel_nodes [4] = \gen_lzc.sel_nodes [9] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [10];
  assign \gen_lzc.sel_nodes [2] = \gen_lzc.sel_nodes [11] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [12];
  assign \gen_lzc.sel_nodes [7] = \gen_lzc.sel_nodes [15] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [16];
  assign \gen_lzc.sel_nodes [8] = \gen_lzc.sel_nodes [17] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [18];
  assign \gen_lzc.sel_nodes [9] = \gen_lzc.sel_nodes [19] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [20];
  assign \gen_lzc.sel_nodes [10] = \gen_lzc.sel_nodes [21] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [22];
  assign \gen_lzc.sel_nodes [11] = \gen_lzc.sel_nodes [23] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [24];
  assign \gen_lzc.sel_nodes [12] = \gen_lzc.sel_nodes [25] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [26];
  assign \gen_lzc.index_nodes [79:75] = in_i[23] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h00 : 5'h01;
  assign \gen_lzc.index_nodes [84:80] = in_i[21] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h02 : 5'h03;
  assign \gen_lzc.index_nodes [89:85] = in_i[19] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h04 : 5'h05;
  assign \gen_lzc.index_nodes [94:90] = in_i[17] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h06 : 5'h07;
  assign \gen_lzc.index_nodes [99:95] = in_i[15] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h08 : 5'h09;
  assign \gen_lzc.index_nodes [104:100] = in_i[13] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h0a : 5'h0b;
  assign \gen_lzc.index_nodes [109:105] = in_i[11] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h0c : 5'h0d;
  assign \gen_lzc.index_nodes [114:110] = in_i[9] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h0e : 5'h0f;
  assign \gen_lzc.index_nodes [119:115] = in_i[7] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h10 : 5'h11;
  assign \gen_lzc.index_nodes [124:120] = in_i[5] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h12 : 5'h13;
  assign \gen_lzc.index_nodes [129:125] = in_i[3] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h14 : 5'h15;
  assign \gen_lzc.index_nodes [134:130] = in_i[1] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 5'h16 : 5'h17;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [9:5] : \gen_lzc.index_nodes [14:10];
  assign \gen_lzc.index_nodes [9:5] = \gen_lzc.sel_nodes [3] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [19:15] : \gen_lzc.index_nodes [24:20];
  assign \gen_lzc.index_nodes [14:10] = \gen_lzc.sel_nodes [2] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [29:25] : 5'h00;
  assign \gen_lzc.index_nodes [19:15] = \gen_lzc.sel_nodes [7] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [39:35] : \gen_lzc.index_nodes [44:40];
  assign \gen_lzc.index_nodes [24:20] = \gen_lzc.sel_nodes [9] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [49:45] : \gen_lzc.index_nodes [54:50];
  assign \gen_lzc.index_nodes [29:25] = \gen_lzc.sel_nodes [11] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [59:55] : \gen_lzc.index_nodes [64:60];
  assign \gen_lzc.index_nodes [39:35] = \gen_lzc.sel_nodes [15] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [79:75] : \gen_lzc.index_nodes [84:80];
  assign \gen_lzc.index_nodes [44:40] = \gen_lzc.sel_nodes [17] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [89:85] : \gen_lzc.index_nodes [94:90];
  assign \gen_lzc.index_nodes [49:45] = \gen_lzc.sel_nodes [19] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [99:95] : \gen_lzc.index_nodes [104:100];
  assign \gen_lzc.index_nodes [54:50] = \gen_lzc.sel_nodes [21] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [109:105] : \gen_lzc.index_nodes [114:110];
  assign \gen_lzc.index_nodes [59:55] = \gen_lzc.sel_nodes [23] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [119:115] : \gen_lzc.index_nodes [124:120];
  assign \gen_lzc.index_nodes [64:60] = \gen_lzc.sel_nodes [25] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [129:125] : \gen_lzc.index_nodes [134:130];
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd24;
  assign \gen_lzc.in_tmp  = { in_i[0], in_i[1], in_i[2], in_i[3], in_i[4], in_i[5], in_i[6], in_i[7], in_i[8], in_i[9], in_i[10], in_i[11], in_i[12], in_i[13], in_i[14], in_i[15], in_i[16], in_i[17], in_i[18], in_i[19], in_i[20], in_i[21], in_i[22], in_i[23] };
  assign \gen_lzc.index_lut  = 120'hbdab49ca307b9ac5a928398a418820;
  assign { \gen_lzc.index_nodes [154:135], \gen_lzc.index_nodes [74:65], \gen_lzc.index_nodes [34:30], \gen_lzc.index_nodes [4:0] } = { 35'h000000000, cnt_o };
  assign { \gen_lzc.sel_nodes [30:27], \gen_lzc.sel_nodes [14:13], \gen_lzc.sel_nodes [6:5] } = { 7'h00, \gen_lzc.sel_nodes [2] };
endmodule

(* dynports =  1  *)
(* hdlname = "\\lzc" *)
(* src = "FPNewBlackbox.preprocessed.v:357.1-429.10" *)
module \$paramod$3dc9b54c1a715af223bba72fd88f9cd46ba20ed0\lzc (in_i, cnt_o, empty_o);
  (* src = "FPNewBlackbox.preprocessed.v:370.32-370.37" *)
  output [5:0] cnt_o;
  wire [5:0] cnt_o;
  (* src = "FPNewBlackbox.preprocessed.v:371.14-371.21" *)
  output empty_o;
  wire empty_o;
  (* src = "FPNewBlackbox.preprocessed.v:385.17-385.18" *)
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:382.22-382.28" *)
  wire [50:0] \gen_lzc.in_tmp ;
  (* src = "FPNewBlackbox.preprocessed.v:379.37-379.46" *)
  wire [305:0] \gen_lzc.index_lut ;
  (* src = "FPNewBlackbox.preprocessed.v:381.48-381.59" *)
  (* unused_bits = "378 379 380 381 382 383" *)
  wire [383:0] \gen_lzc.index_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:380.34-380.43" *)
  (* unused_bits = "63" *)
  wire [63:0] \gen_lzc.sel_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:369.27-369.31" *)
  input [50:0] in_i;
  wire [50:0] in_i;
  assign empty_o = ~ (* src = "FPNewBlackbox.preprocessed.v:426.49-426.62" *) \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [31] = in_i[50] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[49];
  assign \gen_lzc.sel_nodes [32] = in_i[48] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[47];
  assign \gen_lzc.sel_nodes [33] = in_i[46] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[45];
  assign \gen_lzc.sel_nodes [34] = in_i[44] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[43];
  assign \gen_lzc.sel_nodes [35] = in_i[42] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[41];
  assign \gen_lzc.sel_nodes [36] = in_i[40] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[39];
  assign \gen_lzc.sel_nodes [37] = in_i[38] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[37];
  assign \gen_lzc.sel_nodes [38] = in_i[36] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[35];
  assign \gen_lzc.sel_nodes [39] = in_i[34] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[33];
  assign \gen_lzc.sel_nodes [40] = in_i[32] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[31];
  assign \gen_lzc.sel_nodes [41] = in_i[30] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[29];
  assign \gen_lzc.sel_nodes [42] = in_i[28] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[27];
  assign \gen_lzc.sel_nodes [43] = in_i[26] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[25];
  assign \gen_lzc.sel_nodes [44] = in_i[24] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[23];
  assign \gen_lzc.sel_nodes [45] = in_i[22] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[21];
  assign \gen_lzc.sel_nodes [46] = in_i[20] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[19];
  assign \gen_lzc.sel_nodes [47] = in_i[18] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[17];
  assign \gen_lzc.sel_nodes [48] = in_i[16] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[15];
  assign \gen_lzc.sel_nodes [49] = in_i[14] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[13];
  assign \gen_lzc.sel_nodes [50] = in_i[12] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[11];
  assign \gen_lzc.sel_nodes [51] = in_i[10] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[9];
  assign \gen_lzc.sel_nodes [52] = in_i[8] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[7];
  assign \gen_lzc.sel_nodes [53] = in_i[6] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[5];
  assign \gen_lzc.sel_nodes [54] = in_i[4] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[3];
  assign \gen_lzc.sel_nodes [55] = in_i[2] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[1];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [2];
  assign \gen_lzc.sel_nodes [1] = \gen_lzc.sel_nodes [3] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [4];
  assign \gen_lzc.sel_nodes [2] = \gen_lzc.sel_nodes [5] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [6];
  assign \gen_lzc.sel_nodes [3] = \gen_lzc.sel_nodes [7] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [8];
  assign \gen_lzc.sel_nodes [4] = \gen_lzc.sel_nodes [9] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [10];
  assign \gen_lzc.sel_nodes [5] = \gen_lzc.sel_nodes [11] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [12];
  assign \gen_lzc.sel_nodes [7] = \gen_lzc.sel_nodes [15] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [16];
  assign \gen_lzc.sel_nodes [8] = \gen_lzc.sel_nodes [17] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [18];
  assign \gen_lzc.sel_nodes [9] = \gen_lzc.sel_nodes [19] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [20];
  assign \gen_lzc.sel_nodes [10] = \gen_lzc.sel_nodes [21] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [22];
  assign \gen_lzc.sel_nodes [11] = \gen_lzc.sel_nodes [23] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [24];
  assign \gen_lzc.sel_nodes [12] = \gen_lzc.sel_nodes [25] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [26];
  assign \gen_lzc.sel_nodes [15] = \gen_lzc.sel_nodes [31] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [32];
  assign \gen_lzc.sel_nodes [16] = \gen_lzc.sel_nodes [33] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [34];
  assign \gen_lzc.sel_nodes [17] = \gen_lzc.sel_nodes [35] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [36];
  assign \gen_lzc.sel_nodes [18] = \gen_lzc.sel_nodes [37] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [38];
  assign \gen_lzc.sel_nodes [19] = \gen_lzc.sel_nodes [39] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [40];
  assign \gen_lzc.sel_nodes [20] = \gen_lzc.sel_nodes [41] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [42];
  assign \gen_lzc.sel_nodes [21] = \gen_lzc.sel_nodes [43] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [44];
  assign \gen_lzc.sel_nodes [22] = \gen_lzc.sel_nodes [45] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [46];
  assign \gen_lzc.sel_nodes [23] = \gen_lzc.sel_nodes [47] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [48];
  assign \gen_lzc.sel_nodes [24] = \gen_lzc.sel_nodes [49] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [50];
  assign \gen_lzc.sel_nodes [25] = \gen_lzc.sel_nodes [51] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [52];
  assign \gen_lzc.sel_nodes [26] = \gen_lzc.sel_nodes [53] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [54];
  assign \gen_lzc.sel_nodes [6] = \gen_lzc.sel_nodes [55] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) in_i[0];
  assign \gen_lzc.index_nodes [191:186] = in_i[50] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h00 : 6'h01;
  assign \gen_lzc.index_nodes [197:192] = in_i[48] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h02 : 6'h03;
  assign \gen_lzc.index_nodes [203:198] = in_i[46] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h04 : 6'h05;
  assign \gen_lzc.index_nodes [209:204] = in_i[44] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h06 : 6'h07;
  assign \gen_lzc.index_nodes [215:210] = in_i[42] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h08 : 6'h09;
  assign \gen_lzc.index_nodes [221:216] = in_i[40] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h0a : 6'h0b;
  assign \gen_lzc.index_nodes [227:222] = in_i[38] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h0c : 6'h0d;
  assign \gen_lzc.index_nodes [233:228] = in_i[36] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h0e : 6'h0f;
  assign \gen_lzc.index_nodes [239:234] = in_i[34] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h10 : 6'h11;
  assign \gen_lzc.index_nodes [245:240] = in_i[32] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h12 : 6'h13;
  assign \gen_lzc.index_nodes [251:246] = in_i[30] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h14 : 6'h15;
  assign \gen_lzc.index_nodes [257:252] = in_i[28] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h16 : 6'h17;
  assign \gen_lzc.index_nodes [263:258] = in_i[26] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h18 : 6'h19;
  assign \gen_lzc.index_nodes [269:264] = in_i[24] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h1a : 6'h1b;
  assign \gen_lzc.index_nodes [275:270] = in_i[22] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h1c : 6'h1d;
  assign \gen_lzc.index_nodes [281:276] = in_i[20] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h1e : 6'h1f;
  assign \gen_lzc.index_nodes [287:282] = in_i[18] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h20 : 6'h21;
  assign \gen_lzc.index_nodes [293:288] = in_i[16] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h22 : 6'h23;
  assign \gen_lzc.index_nodes [299:294] = in_i[14] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h24 : 6'h25;
  assign \gen_lzc.index_nodes [305:300] = in_i[12] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h26 : 6'h27;
  assign \gen_lzc.index_nodes [311:306] = in_i[10] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h28 : 6'h29;
  assign \gen_lzc.index_nodes [317:312] = in_i[8] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h2a : 6'h2b;
  assign \gen_lzc.index_nodes [323:318] = in_i[6] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h2c : 6'h2d;
  assign \gen_lzc.index_nodes [329:324] = in_i[4] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h2e : 6'h2f;
  assign \gen_lzc.index_nodes [335:330] = in_i[2] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h30 : 6'h31;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [11:6] : \gen_lzc.index_nodes [17:12];
  assign \gen_lzc.index_nodes [11:6] = \gen_lzc.sel_nodes [3] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [23:18] : \gen_lzc.index_nodes [29:24];
  assign \gen_lzc.index_nodes [17:12] = \gen_lzc.sel_nodes [5] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [35:30] : \gen_lzc.index_nodes [41:36];
  assign \gen_lzc.index_nodes [23:18] = \gen_lzc.sel_nodes [7] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [47:42] : \gen_lzc.index_nodes [53:48];
  assign \gen_lzc.index_nodes [29:24] = \gen_lzc.sel_nodes [9] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [59:54] : \gen_lzc.index_nodes [65:60];
  assign \gen_lzc.index_nodes [35:30] = \gen_lzc.sel_nodes [11] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [71:66] : \gen_lzc.index_nodes [77:72];
  assign \gen_lzc.index_nodes [41:36] = \gen_lzc.sel_nodes [6] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [83:78] : 6'h00;
  assign \gen_lzc.index_nodes [47:42] = \gen_lzc.sel_nodes [15] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [95:90] : \gen_lzc.index_nodes [101:96];
  assign \gen_lzc.index_nodes [53:48] = \gen_lzc.sel_nodes [17] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [107:102] : \gen_lzc.index_nodes [113:108];
  assign \gen_lzc.index_nodes [59:54] = \gen_lzc.sel_nodes [19] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [119:114] : \gen_lzc.index_nodes [125:120];
  assign \gen_lzc.index_nodes [65:60] = \gen_lzc.sel_nodes [21] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [131:126] : \gen_lzc.index_nodes [137:132];
  assign \gen_lzc.index_nodes [71:66] = \gen_lzc.sel_nodes [23] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [143:138] : \gen_lzc.index_nodes [149:144];
  assign \gen_lzc.index_nodes [77:72] = \gen_lzc.sel_nodes [25] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [155:150] : \gen_lzc.index_nodes [161:156];
  assign \gen_lzc.index_nodes [95:90] = \gen_lzc.sel_nodes [31] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [191:186] : \gen_lzc.index_nodes [197:192];
  assign \gen_lzc.index_nodes [101:96] = \gen_lzc.sel_nodes [33] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [203:198] : \gen_lzc.index_nodes [209:204];
  assign \gen_lzc.index_nodes [107:102] = \gen_lzc.sel_nodes [35] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [215:210] : \gen_lzc.index_nodes [221:216];
  assign \gen_lzc.index_nodes [113:108] = \gen_lzc.sel_nodes [37] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [227:222] : \gen_lzc.index_nodes [233:228];
  assign \gen_lzc.index_nodes [119:114] = \gen_lzc.sel_nodes [39] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [239:234] : \gen_lzc.index_nodes [245:240];
  assign \gen_lzc.index_nodes [125:120] = \gen_lzc.sel_nodes [41] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [251:246] : \gen_lzc.index_nodes [257:252];
  assign \gen_lzc.index_nodes [131:126] = \gen_lzc.sel_nodes [43] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [263:258] : \gen_lzc.index_nodes [269:264];
  assign \gen_lzc.index_nodes [137:132] = \gen_lzc.sel_nodes [45] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [275:270] : \gen_lzc.index_nodes [281:276];
  assign \gen_lzc.index_nodes [143:138] = \gen_lzc.sel_nodes [47] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [287:282] : \gen_lzc.index_nodes [293:288];
  assign \gen_lzc.index_nodes [149:144] = \gen_lzc.sel_nodes [49] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [299:294] : \gen_lzc.index_nodes [305:300];
  assign \gen_lzc.index_nodes [155:150] = \gen_lzc.sel_nodes [51] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [311:306] : \gen_lzc.index_nodes [317:312];
  assign \gen_lzc.index_nodes [161:156] = \gen_lzc.sel_nodes [53] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [323:318] : \gen_lzc.index_nodes [329:324];
  assign \gen_lzc.index_nodes [83:78] = \gen_lzc.sel_nodes [55] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [335:330] : 6'h32;
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd51;
  assign \gen_lzc.in_tmp  = { in_i[0], in_i[1], in_i[2], in_i[3], in_i[4], in_i[5], in_i[6], in_i[7], in_i[8], in_i[9], in_i[10], in_i[11], in_i[12], in_i[13], in_i[14], in_i[15], in_i[16], in_i[17], in_i[18], in_i[19], in_i[20], in_i[21], in_i[22], in_i[23], in_i[24], in_i[25], in_i[26], in_i[27], in_i[28], in_i[29], in_i[30], in_i[31], in_i[32], in_i[33], in_i[34], in_i[35], in_i[36], in_i[37], in_i[38], in_i[39], in_i[40], in_i[41], in_i[42], in_i[43], in_i[44], in_i[45], in_i[46], in_i[47], in_i[48], in_i[49], in_i[50] };
  assign \gen_lzc.index_lut  = 306'h32c70beeb6caeaa689e69648e28607de75c6da6585d65544d24503ce34c2ca2481c61440c2040;
  assign { \gen_lzc.index_nodes [377:336], \gen_lzc.index_nodes [185:162], \gen_lzc.index_nodes [89:84], \gen_lzc.index_nodes [5:0] } = { 60'h000000000c80000, \gen_lzc.index_nodes [83:78], 6'h00, cnt_o };
  assign { \gen_lzc.sel_nodes [62:56], \gen_lzc.sel_nodes [30:27], \gen_lzc.sel_nodes [14:13] } = { 6'h00, in_i[0], 3'h0, \gen_lzc.sel_nodes [6], 1'h0, \gen_lzc.sel_nodes [6] };
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_block_A94B6_B7406" *)
(* src = "FPNewBlackbox.preprocessed.v:6591.1-6905.10" *)
module \$paramod$4449765975abbec500ab1b847f7eccfced30623d\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _00_;
  (* src = "FPNewBlackbox.preprocessed.v:6843.36-6843.80" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [1:0] _03_;
  (* src = "FPNewBlackbox.preprocessed.v:6843.50-6843.63" *)
  (* unused_bits = "31" *)
  wire [31:0] _04_;
  (* src = "FPNewBlackbox.preprocessed.v:6879.57-6879.71" *)
  wire [71:0] arbiter_output;
  (* src = "FPNewBlackbox.preprocessed.v:6662.14-6662.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:6638.13-6638.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:6648.19-6648.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6658.14-6658.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:6655.13-6655.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:6666.13-6666.21" *)
  wire [4:0] fmt_busy;
  (* src = "FPNewBlackbox.preprocessed.v:6663.13-6663.25" *)
  wire [4:0] fmt_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6665.13-6665.26" *)
  (* unused_bits = "1 2 3 4" *)
  wire [4:0] fmt_out_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6664.13-6664.26" *)
  wire [4:0] fmt_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:6667.63-6667.74" *)
  wire [359:0] fmt_outputs;
  (* src = "FPNewBlackbox.preprocessed.v:6842.9-6842.17" *)
  wire \gen_merged_slice.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:6654.14-6654.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:6653.13-6653.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:6650.19-6650.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6641.50-6641.60" *)
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:6644.19-6644.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:6645.13-6645.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:6640.44-6640.54" *)
  input [127:0] operands_i;
  wire [127:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:6661.13-6661.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:6660.14-6660.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:6656.28-6656.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:6642.19-6642.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:6639.13-6639.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:6647.19-6647.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6657.20-6657.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:6652.47-6652.52" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:6659.48-6659.53" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:6651.13-6651.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6668.22-6668.58" *) _02_;
  assign \gen_merged_slice.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6843.22-6843.81" *) _01_;
  assign _01_ = _03_ == (* src = "FPNewBlackbox.preprocessed.v:6843.36-6843.80" *) 2'h2;
  wire [4:0] _11_ = { 4'h0, fmt_in_ready[0] };
  assign _02_ = _11_[dst_fmt_i +: 1];
  wire [9:0] _12_ = 10'h2aa;
  assign _03_ = _12_[$signed({ _00_[31:1], 1'h0 }) +: 2];
  assign { _04_[31], _00_[31:1] } = 32'd4 - (* src = "FPNewBlackbox.preprocessed.v:6843.50-6843.63" *) dst_fmt_i;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6853.6-6876.5" *)
  \$paramod$86b945c3a0ee812c04cca6fd8a26cb9de88b62d7\fpnew_opgroup_multifmt_slice_607F1_85D30  \gen_merged_slice.i_multifmt_slice  (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(fmt_outputs[2]),
    .flush_i(flush_i),
    .in_ready_o(fmt_in_ready[0]),
    .in_valid_i(\gen_merged_slice.in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i(is_boxed_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(fmt_out_ready[0]),
    .out_valid_o(fmt_out_valid[0]),
    .result_o(fmt_outputs[71:8]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(fmt_outputs[7:3]),
    .tag_i(tag_i),
    .tag_o(fmt_outputs[1:0]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6888.4-6899.3" *)
  \$paramod$2d98b2ed91e87ed1e332161bf5d593baf43453be\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i({ 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd, fmt_outputs[71:0] }),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i({ 4'h0, fmt_out_valid[0] }),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign _00_[0] = 1'h0;
  assign _04_[30:0] = _00_[31:1];
  assign extension_bit_o = arbiter_output[2];
  assign fmt_busy = { 4'h0, busy_o };
  assign fmt_in_ready[4:1] = 4'h0;
  assign fmt_out_valid[4:1] = 4'h0;
  assign fmt_outputs[359:72] = 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd;
  assign result_o = arbiter_output[71:8];
  assign status_o = arbiter_output[7:3];
  assign tag_o = arbiter_output[1:0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_classifier" *)
(* src = "FPNewBlackbox.preprocessed.v:4244.1-4313.10" *)
module \$paramod$62f5c6c40baf3ab700fec6049fa36a166c5bea61\fpnew_classifier (operands_i, is_boxed_i, info_o);
  (* src = "FPNewBlackbox.preprocessed.v:4296.29-4296.387" *)
  wire _00_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.394-4296.449" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.28-4298.386" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *)
  wire _03_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *)
  wire _04_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.16-4296.388" *)
  wire _05_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *)
  wire _06_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *)
  wire _07_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *)
  wire _08_;
  (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *)
  wire _09_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *)
  wire _10_;
  (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *)
  wire _11_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *)
  wire _12_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *)
  wire _13_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *)
  wire _14_;
  (* src = "FPNewBlackbox.preprocessed.v:4284.8-4284.16" *)
  wire \gen_num_values[0].is_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:4286.8-4286.14" *)
  wire \gen_num_values[0].is_inf ;
  (* src = "FPNewBlackbox.preprocessed.v:4287.8-4287.14" *)
  wire \gen_num_values[0].is_nan ;
  (* src = "FPNewBlackbox.preprocessed.v:4285.8-4285.17" *)
  wire \gen_num_values[0].is_normal ;
  (* src = "FPNewBlackbox.preprocessed.v:4289.8-4289.16" *)
  wire \gen_num_values[0].is_quiet ;
  (* src = "FPNewBlackbox.preprocessed.v:4288.8-4288.21" *)
  wire \gen_num_values[0].is_signalling ;
  (* src = "FPNewBlackbox.preprocessed.v:4291.8-4291.20" *)
  wire \gen_num_values[0].is_subnormal ;
  (* src = "FPNewBlackbox.preprocessed.v:4290.8-4290.15" *)
  wire \gen_num_values[0].is_zero ;
  (* src = "FPNewBlackbox.preprocessed.v:4283.44-4283.49" *)
  (* unused_bits = "31" *)
  wire [31:0] \gen_num_values[0].value ;
  (* src = "FPNewBlackbox.preprocessed.v:4265.39-4265.45" *)
  output [7:0] info_o;
  wire [7:0] info_o;
  (* src = "FPNewBlackbox.preprocessed.v:4264.33-4264.43" *)
  input is_boxed_i;
  wire is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:4263.43-4263.53" *)
  input [31:0] operands_i;
  wire [31:0] operands_i;
  assign _00_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.34-4297.392" *) operands_i[30:23];
  assign _01_ = ! (* src = "FPNewBlackbox.preprocessed.v:4298.392-4298.447" *) operands_i[22:0];
  assign _02_ = operands_i[30:23] == (* src = "FPNewBlackbox.preprocessed.v:4299.29-4299.387" *) 8'hff;
  assign _03_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *) operands_i[22];
  assign _04_ = is_boxed_i && (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *) _12_;
  assign \gen_num_values[0].is_normal  = _04_ && (* src = "FPNewBlackbox.preprocessed.v:4295.17-4295.755" *) _13_;
  assign \gen_num_values[0].is_zero  = _05_ && (* src = "FPNewBlackbox.preprocessed.v:4296.15-4296.450" *) _01_;
  assign _05_ = is_boxed_i && (* src = "FPNewBlackbox.preprocessed.v:4297.21-4297.393" *) _00_;
  assign \gen_num_values[0].is_subnormal  = _05_ && (* src = "FPNewBlackbox.preprocessed.v:4297.20-4297.406" *) _09_;
  assign _06_ = _02_ && (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *) _01_;
  assign \gen_num_values[0].is_inf  = is_boxed_i && (* src = "FPNewBlackbox.preprocessed.v:4298.14-4298.449" *) _06_;
  assign _07_ = _02_ && (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *) _14_;
  assign _08_ = is_boxed_i && (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *) \gen_num_values[0].is_nan ;
  assign \gen_num_values[0].is_signalling  = _08_ && (* src = "FPNewBlackbox.preprocessed.v:4300.21-4300.112" *) _03_;
  assign \gen_num_values[0].is_quiet  = \gen_num_values[0].is_nan  && (* src = "FPNewBlackbox.preprocessed.v:4301.16-4301.40" *) _11_;
  assign _09_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *) \gen_num_values[0].is_zero ;
  assign _10_ = ! (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *) is_boxed_i;
  assign _11_ = ! (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *) \gen_num_values[0].is_signalling ;
  assign \gen_num_values[0].is_nan  = _10_ || (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.450" *) _07_;
  assign _12_ = | (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *) operands_i[30:23];
  assign _13_ = operands_i[30:23] != (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *) 8'hff;
  assign _14_ = | (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *) operands_i[22:0];
  assign \gen_num_values[0].is_boxed  = is_boxed_i;
  assign \gen_num_values[0].value  = operands_i;
  assign info_o = { \gen_num_values[0].is_normal , \gen_num_values[0].is_subnormal , \gen_num_values[0].is_zero , \gen_num_values[0].is_inf , \gen_num_values[0].is_nan , \gen_num_values[0].is_signalling , \gen_num_values[0].is_quiet , is_boxed_i };
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_fma_FC83A_5615B" *)
(* src = "FPNewBlackbox.preprocessed.v:4688.1-5332.10" *)
module \$paramod$6d8b9e1a9ce9a9fa6c378e58eae11f821dd49832\fpnew_fma_FC83A_5615B (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, tag_i, aux_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, aux_o, out_valid_o, out_ready_i, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:4822.4-4826.120" *)
  wire _000_;
  (* src = "FPNewBlackbox.preprocessed.v:4969.2-4976.5" *)
  wire [6:0] _001_;
  (* src = "FPNewBlackbox.preprocessed.v:5210.2-5225.5" *)
  wire [9:0] _002_;
  (* src = "FPNewBlackbox.preprocessed.v:5210.2-5225.5" *)
  wire [24:0] _003_;
  (* src = "FPNewBlackbox.preprocessed.v:5193.2-5208.5" *)
  wire [6:0] _004_;
  (* src = "FPNewBlackbox.preprocessed.v:5193.2-5208.5" *)
  wire [9:0] _005_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire _006_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire [31:0] _007_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire _008_;
  (* src = "FPNewBlackbox.preprocessed.v:5210.2-5225.5" *)
  wire [50:0] _009_;
  (* src = "FPNewBlackbox.preprocessed.v:5210.2-5225.5" *)
  wire [9:0] _010_;
  (* src = "FPNewBlackbox.preprocessed.v:5210.2-5225.5" *)
  wire [24:0] _011_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire _012_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire [31:0] _013_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire _014_;
  (* src = "FPNewBlackbox.preprocessed.v:5210.2-5225.5" *)
  wire [50:0] _015_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire [31:0] _016_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire _017_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire [31:0] _018_;
  (* src = "FPNewBlackbox.preprocessed.v:4932.2-4953.5" *)
  wire [31:0] _019_;
  (* src = "FPNewBlackbox.preprocessed.v:4965.85-4965.107" *)
  wire [31:0] _020_;
  (* src = "FPNewBlackbox.preprocessed.v:4965.84-4965.121" *)
  wire [31:0] _021_;
  (* src = "FPNewBlackbox.preprocessed.v:4965.83-4965.134" *)
  wire [31:0] _022_;
  (* src = "FPNewBlackbox.preprocessed.v:5000.20-5000.52" *)
  wire [76:0] _023_;
  (* src = "FPNewBlackbox.preprocessed.v:5195.10-5195.59" *)
  wire [31:0] _024_;
  (* src = "FPNewBlackbox.preprocessed.v:5196.18-5196.59" *)
  (* unused_bits = "7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _025_;
  (* src = "FPNewBlackbox.preprocessed.v:5200.28-5200.78" *)
  (* unused_bits = "7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _026_;
  (* src = "FPNewBlackbox.preprocessed.v:5215.21-5215.44" *)
  (* unused_bits = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  (* src = "FPNewBlackbox.preprocessed.v:5003.49-5003.76" *)
  wire _033_;
  (* src = "FPNewBlackbox.preprocessed.v:5195.9-5195.65" *)
  wire _034_;
  (* src = "FPNewBlackbox.preprocessed.v:4967.31-4967.54" *)
  wire _035_;
  (* src = "FPNewBlackbox.preprocessed.v:5219.12-5219.35" *)
  wire _036_;
  (* src = "FPNewBlackbox.preprocessed.v:4970.7-4970.64" *)
  wire _037_;
  (* src = "FPNewBlackbox.preprocessed.v:4972.12-4972.62" *)
  wire _038_;
  (* src = "FPNewBlackbox.preprocessed.v:5194.8-5194.34" *)
  wire _039_;
  (* src = "FPNewBlackbox.preprocessed.v:5194.68-5194.94" *)
  wire _040_;
  (* src = "FPNewBlackbox.preprocessed.v:4936.8-4936.30" *)
  wire _041_;
  (* src = "FPNewBlackbox.preprocessed.v:4936.36-4936.58" *)
  wire _042_;
  (* src = "FPNewBlackbox.preprocessed.v:4946.9-4946.46" *)
  wire _043_;
  (* src = "FPNewBlackbox.preprocessed.v:4946.8-4946.72" *)
  wire _044_;
  (* src = "FPNewBlackbox.preprocessed.v:5002.16-5002.51" *)
  wire _045_;
  (* src = "FPNewBlackbox.preprocessed.v:5003.23-5003.77" *)
  wire _046_;
  (* src = "FPNewBlackbox.preprocessed.v:5194.40-5194.95" *)
  wire _047_;
  (* src = "FPNewBlackbox.preprocessed.v:5195.8-5195.81" *)
  wire _048_;
  (* src = "FPNewBlackbox.preprocessed.v:5195.70-5195.81" *)
  wire _049_;
  (* src = "FPNewBlackbox.preprocessed.v:4936.7-4936.59" *)
  wire _050_;
  (* src = "FPNewBlackbox.preprocessed.v:4946.10-4946.32" *)
  wire _051_;
  (* src = "FPNewBlackbox.preprocessed.v:4965.29-4965.51" *)
  wire _052_;
  (* src = "FPNewBlackbox.preprocessed.v:5194.7-5194.96" *)
  wire _053_;
  (* src = "FPNewBlackbox.preprocessed.v:5002.54-5002.62" *)
  wire [76:0] _054_;
  (* src = "FPNewBlackbox.preprocessed.v:4821.55-4821.79" *)
  wire _055_;
  (* src = "FPNewBlackbox.preprocessed.v:4900.69-4900.112" *)
  wire _056_;
  (* src = "FPNewBlackbox.preprocessed.v:4964.63-4964.73" *)
  wire _057_;
  (* src = "FPNewBlackbox.preprocessed.v:4994.51-4994.70" *)
  wire [75:0] _058_;
  (* src = "FPNewBlackbox.preprocessed.v:4995.51-4995.69" *)
  wire _059_;
  (* src = "FPNewBlackbox.preprocessed.v:5002.41-5002.51" *)
  wire _060_;
  (* src = "FPNewBlackbox.preprocessed.v:5265.30-5265.66" *)
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  (* src = "FPNewBlackbox.preprocessed.v:5226.29-5226.47" *)
  wire _066_;
  (* src = "FPNewBlackbox.preprocessed.v:5265.30-5265.48" *)
  wire _067_;
  (* src = "FPNewBlackbox.preprocessed.v:4965.82-4965.151" *)
  wire [31:0] _068_;
  (* src = "FPNewBlackbox.preprocessed.v:4973.29-4973.80" *)
  (* unused_bits = "7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _069_;
  (* src = "FPNewBlackbox.preprocessed.v:5195.11-5195.54" *)
  wire [31:0] _070_;
  (* src = "FPNewBlackbox.preprocessed.v:5221.21-5221.44" *)
  (* unused_bits = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _071_;
  (* src = "FPNewBlackbox.preprocessed.v:4826.52-4826.117" *)
  wire _072_;
  (* src = "FPNewBlackbox.preprocessed.v:4965.29-4965.152" *)
  (* unused_bits = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _073_;
  (* src = "FPNewBlackbox.preprocessed.v:5002.16-5002.72" *)
  (* unused_bits = "76" *)
  wire [76:0] _074_;
  (* src = "FPNewBlackbox.preprocessed.v:5003.88-5003.133" *)
  wire _075_;
  (* src = "FPNewBlackbox.preprocessed.v:5242.31-5242.112" *)
  (* unused_bits = "8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _076_;
  (* src = "FPNewBlackbox.preprocessed.v:4896.48-4896.124" *)
  wire _077_;
  (* src = "FPNewBlackbox.preprocessed.v:4987.36-4987.54" *)
  wire [75:0] addend_after_shift;
  (* src = "FPNewBlackbox.preprocessed.v:4968.33-4968.45" *)
  wire [6:0] addend_shamt;
  (* src = "FPNewBlackbox.preprocessed.v:5008.34-5008.48" *)
  wire [6:0] addend_shamt_q;
  (* src = "FPNewBlackbox.preprocessed.v:4990.36-4990.50" *)
  wire [75:0] addend_shifted;
  (* src = "FPNewBlackbox.preprocessed.v:4988.30-4988.48" *)
  wire [23:0] addend_sticky_bits;
  (* src = "FPNewBlackbox.preprocessed.v:4919.7-4919.22" *)
  wire any_operand_inf;
  (* src = "FPNewBlackbox.preprocessed.v:4920.7-4920.22" *)
  wire any_operand_nan;
  (* src = "FPNewBlackbox.preprocessed.v:4735.13-4735.18" *)
  input aux_i;
  wire aux_i;
  (* src = "FPNewBlackbox.preprocessed.v:4743.14-4743.19" *)
  output aux_o;
  wire aux_o;
  (* src = "FPNewBlackbox.preprocessed.v:4746.14-4746.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:4726.13-4726.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:4922.7-4922.28" *)
  wire effective_subtraction;
  (* src = "FPNewBlackbox.preprocessed.v:5004.7-5004.30" *)
  wire effective_subtraction_q;
  (* src = "FPNewBlackbox.preprocessed.v:4954.32-4954.42" *)
  wire [9:0] exponent_a;
  (* src = "FPNewBlackbox.preprocessed.v:4957.32-4957.47" *)
  wire [9:0] exponent_addend;
  (* src = "FPNewBlackbox.preprocessed.v:4955.32-4955.42" *)
  wire [9:0] exponent_b;
  (* src = "FPNewBlackbox.preprocessed.v:4956.32-4956.42" *)
  wire [9:0] exponent_c;
  (* src = "FPNewBlackbox.preprocessed.v:4959.32-4959.51" *)
  wire [9:0] exponent_difference;
  (* src = "FPNewBlackbox.preprocessed.v:5006.32-5006.53" *)
  wire [9:0] exponent_difference_q;
  (* src = "FPNewBlackbox.preprocessed.v:4958.32-4958.48" *)
  wire [9:0] exponent_product;
  (* src = "FPNewBlackbox.preprocessed.v:5005.32-5005.50" *)
  wire [9:0] exponent_product_q;
  (* src = "FPNewBlackbox.preprocessed.v:4741.14-4741.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:5182.31-5182.45" *)
  wire [9:0] final_exponent;
  (* src = "FPNewBlackbox.preprocessed.v:5179.25-5179.39" *)
  (* unused_bits = "24" *)
  wire [24:0] final_mantissa;
  (* src = "FPNewBlackbox.preprocessed.v:4999.7-4999.17" *)
  wire final_sign;
  (* src = "FPNewBlackbox.preprocessed.v:5011.7-5011.19" *)
  wire final_sign_q;
  (* src = "FPNewBlackbox.preprocessed.v:4738.13-4738.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:4820.9-4820.16" *)
  wire \gen_input_pipeline[0].reg_ena ;
  (* src = "FPNewBlackbox.preprocessed.v:4737.14-4737.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:4736.13-4736.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:4877.12-4877.18" *)
  (* unused_bits = "0 1" *)
  wire [7:0] info_a;
  (* src = "FPNewBlackbox.preprocessed.v:4878.12-4878.18" *)
  (* unused_bits = "0 1" *)
  wire [7:0] info_b;
  (* src = "FPNewBlackbox.preprocessed.v:4879.12-4879.18" *)
  (* unused_bits = "0 1 5 6" *)
  wire [7:0] info_c;
  (* src = "FPNewBlackbox.preprocessed.v:4865.14-4865.20" *)
  wire [23:0] info_q;
  (* src = "FPNewBlackbox.preprocessed.v:4991.7-4991.22" *)
  wire inject_carry_in;
  (* src = "FPNewBlackbox.preprocessed.v:4781.23-4781.37" *)
  wire [0:1] inp_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:4776.156-4776.175" *)
  wire [5:0] inp_pipe_is_boxed_q;
  (* src = "FPNewBlackbox.preprocessed.v:4779.23-4779.40" *)
  wire [0:1] inp_pipe_op_mod_q;
  (* src = "FPNewBlackbox.preprocessed.v:4778.220-4778.233" *)
  wire [7:0] inp_pipe_op_q;
  (* src = "FPNewBlackbox.preprocessed.v:4775.1006-4775.1025" *)
  wire [191:0] inp_pipe_operands_q;
  (* src = "FPNewBlackbox.preprocessed.v:4783.24-4783.38" *)
  wire [0:1] inp_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:4777.156-4777.175" *)
  wire [5:0] inp_pipe_rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:4780.316-4780.330" *)
  wire [3:0] inp_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:4782.23-4782.39" *)
  wire [0:1] inp_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:4729.19-4729.29" *)
  input [2:0] is_boxed_i;
  wire [2:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:5173.32-5173.50" *)
  wire [5:0] leading_zero_count;
  (* src = "FPNewBlackbox.preprocessed.v:5174.35-5174.57" *)
  wire [6:0] leading_zero_count_sgn;
  (* src = "FPNewBlackbox.preprocessed.v:5175.7-5175.17" *)
  wire lzc_zeroes;
  (* src = "FPNewBlackbox.preprocessed.v:4977.30-4977.40" *)
  wire [23:0] mantissa_a;
  (* src = "FPNewBlackbox.preprocessed.v:4978.30-4978.40" *)
  wire [23:0] mantissa_b;
  (* src = "FPNewBlackbox.preprocessed.v:4979.30-4979.40" *)
  wire [23:0] mantissa_c;
  (* src = "FPNewBlackbox.preprocessed.v:5020.224-5020.244" *)
  wire [6:0] mid_pipe_add_shamt_q;
  (* src = "FPNewBlackbox.preprocessed.v:5029.23-5029.37" *)
  wire mid_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:5016.23-5016.41" *)
  wire mid_pipe_eff_sub_q;
  (* src = "FPNewBlackbox.preprocessed.v:5018.195-5018.214" *)
  wire [9:0] mid_pipe_exp_diff_q;
  (* src = "FPNewBlackbox.preprocessed.v:5017.195-5017.214" *)
  wire [9:0] mid_pipe_exp_prod_q;
  (* src = "FPNewBlackbox.preprocessed.v:5023.23-5023.44" *)
  wire mid_pipe_final_sign_q;
  (* src = "FPNewBlackbox.preprocessed.v:5031.24-5031.38" *)
  wire mid_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:5025.23-5025.45" *)
  wire mid_pipe_res_is_spec_q;
  (* src = "FPNewBlackbox.preprocessed.v:5024.156-5024.175" *)
  wire [2:0] mid_pipe_rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:5026.260-5026.279" *)
  wire [31:0] mid_pipe_spec_res_q;
  (* src = "FPNewBlackbox.preprocessed.v:5027.156-5027.176" *)
  wire [4:0] mid_pipe_spec_stat_q;
  (* src = "FPNewBlackbox.preprocessed.v:5021.23-5021.40" *)
  wire mid_pipe_sticky_q;
  (* src = "FPNewBlackbox.preprocessed.v:5022.742-5022.756" *)
  wire [75:0] mid_pipe_sum_q;
  (* src = "FPNewBlackbox.preprocessed.v:5028.316-5028.330" *)
  wire [1:0] mid_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:5019.195-5019.214" *)
  wire [9:0] mid_pipe_tent_exp_q;
  (* src = "FPNewBlackbox.preprocessed.v:5030.23-5030.39" *)
  wire mid_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:5176.33-5176.43" *)
  wire [6:0] norm_shamt;
  (* src = "FPNewBlackbox.preprocessed.v:5177.31-5177.50" *)
  wire [9:0] normalized_exponent;
  (* src = "FPNewBlackbox.preprocessed.v:5233.7-5233.21" *)
  wire of_after_round;
  (* src = "FPNewBlackbox.preprocessed.v:5232.7-5232.22" *)
  wire of_before_round;
  (* src = "FPNewBlackbox.preprocessed.v:4732.19-4732.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:4733.13-4733.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:4874.42-4874.51" *)
  wire [31:0] operand_a;
  (* src = "FPNewBlackbox.preprocessed.v:4875.42-4875.51" *)
  wire [31:0] operand_b;
  (* src = "FPNewBlackbox.preprocessed.v:4876.42-4876.51" *)
  wire [31:0] operand_c;
  (* src = "FPNewBlackbox.preprocessed.v:4728.33-4728.43" *)
  input [95:0] operands_i;
  wire [95:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:5273.23-5273.37" *)
  wire out_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:5275.24-5275.38" *)
  wire out_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:5270.260-5270.277" *)
  wire [31:0] out_pipe_result_q;
  (* src = "FPNewBlackbox.preprocessed.v:5271.156-5271.173" *)
  wire [4:0] out_pipe_status_q;
  (* src = "FPNewBlackbox.preprocessed.v:5272.316-5272.330" *)
  wire [1:0] out_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:5274.23-5274.39" *)
  wire out_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:4745.13-4745.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:4744.14-4744.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:5230.37-5230.50" *)
  wire [30:0] pre_round_abs;
  (* src = "FPNewBlackbox.preprocessed.v:5228.24-5228.42" *)
  wire [7:0] pre_round_exponent;
  (* src = "FPNewBlackbox.preprocessed.v:5229.24-5229.42" *)
  wire [22:0] pre_round_mantissa;
  (* src = "FPNewBlackbox.preprocessed.v:5227.7-5227.21" *)
  wire pre_round_sign;
  (* src = "FPNewBlackbox.preprocessed.v:4980.36-4980.43" *)
  wire [47:0] product;
  (* src = "FPNewBlackbox.preprocessed.v:4981.36-4981.51" *)
  wire [75:0] product_shifted;
  (* src = "FPNewBlackbox.preprocessed.v:5258.21-5258.35" *)
  wire [31:0] regular_result;
  (* src = "FPNewBlackbox.preprocessed.v:5259.13-5259.27" *)
  wire [4:0] regular_status;
  (* src = "FPNewBlackbox.preprocessed.v:5266.43-5266.51" *)
  wire [31:0] result_d;
  (* src = "FPNewBlackbox.preprocessed.v:4931.6-4931.23" *)
  wire result_is_special;
  (* src = "FPNewBlackbox.preprocessed.v:5013.7-5013.26" *)
  wire result_is_special_q;
  (* src = "FPNewBlackbox.preprocessed.v:4739.28-4739.36" *)
  output [31:0] result_o;
  wire [31:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:5236.7-5236.18" *)
  (* unused_bits = "0" *)
  wire result_zero;
  (* src = "FPNewBlackbox.preprocessed.v:4730.19-4730.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:5012.13-5012.23" *)
  wire [2:0] rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:5231.13-5231.30" *)
  wire [1:0] round_sticky_bits;
  (* src = "FPNewBlackbox.preprocessed.v:5238.37-5238.48" *)
  wire [30:0] rounded_abs;
  (* src = "FPNewBlackbox.preprocessed.v:5237.7-5237.19" *)
  wire rounded_sign;
  (* src = "FPNewBlackbox.preprocessed.v:4727.13-4727.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:4921.7-4921.21" *)
  wire signalling_nan;
  (* src = "FPNewBlackbox.preprocessed.v:4929.42-4929.56" *)
  wire [31:0] special_result;
  (* src = "FPNewBlackbox.preprocessed.v:5014.43-5014.59" *)
  wire [31:0] special_result_q;
  (* src = "FPNewBlackbox.preprocessed.v:4930.12-4930.26" *)
  wire [4:0] special_status;
  (* src = "FPNewBlackbox.preprocessed.v:5015.13-5015.29" *)
  wire [4:0] special_status_q;
  (* src = "FPNewBlackbox.preprocessed.v:5267.13-5267.21" *)
  wire [4:0] status_d;
  (* src = "FPNewBlackbox.preprocessed.v:4740.20-4740.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:5181.7-5181.24" *)
  wire sticky_after_norm;
  (* src = "FPNewBlackbox.preprocessed.v:4989.7-4989.24" *)
  wire sticky_before_add;
  (* src = "FPNewBlackbox.preprocessed.v:5009.7-5009.26" *)
  wire sticky_before_add_q;
  (* src = "FPNewBlackbox.preprocessed.v:4998.36-4998.39" *)
  wire [75:0] sum;
  (* src = "FPNewBlackbox.preprocessed.v:4997.7-4997.16" *)
  wire sum_carry;
  (* src = "FPNewBlackbox.preprocessed.v:5172.31-5172.40" *)
  wire [50:0] sum_lower;
  (* src = "FPNewBlackbox.preprocessed.v:5010.36-5010.41" *)
  wire [75:0] sum_q;
  (* src = "FPNewBlackbox.preprocessed.v:4996.36-4996.43" *)
  wire [76:0] sum_raw;
  (* src = "FPNewBlackbox.preprocessed.v:5178.36-5178.47" *)
  wire [76:0] sum_shifted;
  (* src = "FPNewBlackbox.preprocessed.v:5180.35-5180.50" *)
  wire [50:0] sum_sticky_bits;
  (* src = "FPNewBlackbox.preprocessed.v:5038.25-5038.39" *)
  wire [10:1] sv2v_tmp_00793;
  (* src = "FPNewBlackbox.preprocessed.v:5276.43-5276.57" *)
  wire [32:1] sv2v_tmp_0252C;
  (* src = "FPNewBlackbox.preprocessed.v:5282.57-5282.71" *)
  wire [2:1] sv2v_tmp_192AB;
  (* src = "FPNewBlackbox.preprocessed.v:5288.13-5288.27" *)
  wire sv2v_tmp_25EE6;
  (* src = "FPNewBlackbox.preprocessed.v:5279.13-5279.27" *)
  wire [5:1] sv2v_tmp_2A843;
  (* src = "FPNewBlackbox.preprocessed.v:5035.25-5035.39" *)
  wire [10:1] sv2v_tmp_2D21E;
  (* src = "FPNewBlackbox.preprocessed.v:4799.57-4799.71" *)
  wire [2:1] sv2v_tmp_36387;
  (* src = "FPNewBlackbox.preprocessed.v:5062.43-5062.57" *)
  wire [32:1] sv2v_tmp_4A83E;
  (* src = "FPNewBlackbox.preprocessed.v:5032.13-5032.27" *)
  wire sv2v_tmp_56A72;
  (* src = "FPNewBlackbox.preprocessed.v:5068.57-5068.71" *)
  wire [2:1] sv2v_tmp_6DFE4;
  (* src = "FPNewBlackbox.preprocessed.v:5047.13-5047.27" *)
  wire sv2v_tmp_6F5F7;
  (* src = "FPNewBlackbox.preprocessed.v:4805.13-4805.27" *)
  wire sv2v_tmp_73AEA;
  (* src = "FPNewBlackbox.preprocessed.v:5059.13-5059.27" *)
  wire sv2v_tmp_7DEC5;
  (* src = "FPNewBlackbox.preprocessed.v:5044.34-5044.48" *)
  wire [7:1] sv2v_tmp_83404;
  (* src = "FPNewBlackbox.preprocessed.v:4802.13-4802.27" *)
  wire sv2v_tmp_8D189;
  (* src = "FPNewBlackbox.preprocessed.v:5285.13-5285.27" *)
  wire sv2v_tmp_9E262;
  (* src = "FPNewBlackbox.preprocessed.v:5056.13-5056.27" *)
  wire [3:1] sv2v_tmp_A74E2;
  (* src = "FPNewBlackbox.preprocessed.v:5041.25-5041.39" *)
  wire [10:1] sv2v_tmp_B4C85;
  (* src = "FPNewBlackbox.preprocessed.v:4784.21-4784.35" *)
  wire [96:1] sv2v_tmp_BC8B9;
  (* src = "FPNewBlackbox.preprocessed.v:5074.13-5074.27" *)
  wire sv2v_tmp_CB10A;
  (* src = "FPNewBlackbox.preprocessed.v:4793.13-4793.27" *)
  wire [4:1] sv2v_tmp_CBA8F;
  (* src = "FPNewBlackbox.preprocessed.v:5071.13-5071.27" *)
  wire sv2v_tmp_CDA0E;
  (* src = "FPNewBlackbox.preprocessed.v:5050.109-5050.123" *)
  wire [76:1] sv2v_tmp_CEAB3;
  (* src = "FPNewBlackbox.preprocessed.v:4796.13-4796.27" *)
  wire sv2v_tmp_D1C37;
  (* src = "FPNewBlackbox.preprocessed.v:5053.13-5053.27" *)
  wire sv2v_tmp_D7BD0;
  (* src = "FPNewBlackbox.preprocessed.v:4790.13-4790.27" *)
  wire [3:1] sv2v_tmp_E1339;
  (* src = "FPNewBlackbox.preprocessed.v:5065.13-5065.27" *)
  wire [5:1] sv2v_tmp_EC01B;
  (* src = "FPNewBlackbox.preprocessed.v:4787.13-4787.27" *)
  wire [3:1] sv2v_tmp_FE389;
  (* src = "FPNewBlackbox.preprocessed.v:4734.63-4734.68" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:4742.64-4742.69" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:4960.32-4960.50" *)
  wire [9:0] tentative_exponent;
  (* src = "FPNewBlackbox.preprocessed.v:5007.32-5007.52" *)
  wire [9:0] tentative_exponent_q;
  (* src = "FPNewBlackbox.preprocessed.v:4923.7-4923.21" *)
  wire tentative_sign;
  (* src = "FPNewBlackbox.preprocessed.v:5235.7-5235.21" *)
  wire uf_after_round;
  assign exponent_addend = $signed({ 2'h0, operand_c[30:23] }) + (* src = "FPNewBlackbox.preprocessed.v:4964.35-4964.75" *) $signed({ 9'h000, _057_ });
  assign _020_ = { 2'h0, exponent_a[7:0] } + (* src = "FPNewBlackbox.preprocessed.v:4965.85-4965.107" *) info_a[6];
  assign _021_ = _020_ + (* src = "FPNewBlackbox.preprocessed.v:4965.84-4965.121" *) { 2'h0, operand_b[30:23] };
  assign _022_ = _021_ + (* src = "FPNewBlackbox.preprocessed.v:4965.83-4965.134" *) info_b[6];
  assign _023_ = { 26'h0000000, product, 2'h0 } + (* src = "FPNewBlackbox.preprocessed.v:5000.20-5000.52" *) addend_shifted;
  assign sum_raw = _023_ + (* src = "FPNewBlackbox.preprocessed.v:5000.19-5000.71" *) inject_carry_in;
  assign _025_ = 32'd26 + (* src = "FPNewBlackbox.preprocessed.v:5196.18-5196.59" *) leading_zero_count;
  assign _024_ = $signed(_070_) + (* src = "FPNewBlackbox.preprocessed.v:5197.27-5197.76" *) $signed(32'd1);
  assign _026_ = $signed(32'd26) + (* src = "FPNewBlackbox.preprocessed.v:5200.28-5200.78" *) $signed(exponent_product);
  assign _027_ = $signed(normalized_exponent) + (* src = "FPNewBlackbox.preprocessed.v:5215.21-5215.44" *) $signed(32'd1);
  assign \gen_input_pipeline[0].reg_ena  = in_ready_o & (* src = "FPNewBlackbox.preprocessed.v:4827.21-4827.60" *) in_valid_i;
  assign inject_carry_in = effective_subtraction & (* src = "FPNewBlackbox.preprocessed.v:4995.27-4995.69" *) _059_;
  assign regular_status[1] = uf_after_round & (* src = "FPNewBlackbox.preprocessed.v:5264.29-5264.63" *) regular_status[0];
  reg [3:0] _091_;
  (* src = "FPNewBlackbox.preprocessed.v:4843.4-4847.334" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _091_ <= 4'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _091_ <= op_i;
  assign inp_pipe_op_q[3:0] = _091_;
  reg \inp_pipe_valid_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:4822.4-4826.120" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_valid_q_reg[0]  <= 1'h0;
    else if (_028_) \inp_pipe_valid_q_reg[0]  <= _000_;
  assign inp_pipe_valid_q[1] = \inp_pipe_valid_q_reg[0] ;
  reg [95:0] _093_;
  (* src = "FPNewBlackbox.preprocessed.v:4828.4-4832.2698" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _093_ <= 96'h000000000000000000000000;
    else if (\gen_input_pipeline[0].reg_ena ) _093_ <= operands_i;
  assign inp_pipe_operands_q[95:0] = _093_;
  reg \inp_pipe_op_mod_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:4848.4-4852.94" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_op_mod_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_op_mod_q_reg[0]  <= op_mod_i;
  assign inp_pipe_op_mod_q[1] = \inp_pipe_op_mod_q_reg[0] ;
  reg [2:0] _095_;
  (* src = "FPNewBlackbox.preprocessed.v:4833.4-4837.256" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _095_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _095_ <= is_boxed_i;
  assign inp_pipe_is_boxed_q[2:0] = _095_;
  reg [2:0] _096_;
  (* src = "FPNewBlackbox.preprocessed.v:4838.4-4842.256" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _096_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _096_ <= rnd_mode_i;
  assign inp_pipe_rnd_mode_q[2:0] = _096_;
  reg \inp_pipe_aux_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:4858.4-4862.85" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_aux_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_aux_q_reg[0]  <= aux_i;
  assign inp_pipe_aux_q[1] = \inp_pipe_aux_q_reg[0] ;
  reg [1:0] _098_;
  (* src = "FPNewBlackbox.preprocessed.v:4853.4-4857.481" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _098_ <= 2'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _098_ <= tag_i;
  assign inp_pipe_tag_q[1:0] = _098_;
  assign _028_ = | { in_ready_o, flush_i };
  assign _030_ = | { _065_, _062_ };
  assign _031_ = | { _065_, _064_, _063_, _062_ };
  assign _032_ = | { _065_, _064_, _063_ };
  assign _029_ = | { _065_, _064_, _062_ };
  assign _033_ = sum_raw[76] == (* src = "FPNewBlackbox.preprocessed.v:5003.49-5003.76" *) tentative_sign;
  assign uf_after_round = ! (* src = "FPNewBlackbox.preprocessed.v:5256.26-5256.226" *) rounded_abs[30:23];
  assign of_after_round = rounded_abs[30:23] == (* src = "FPNewBlackbox.preprocessed.v:5257.26-5257.226" *) 8'hff;
  assign _034_ = $signed(_024_) >= (* src = "FPNewBlackbox.preprocessed.v:5195.9-5195.65" *) $signed(32'd0);
  assign of_before_round = $signed(final_exponent) >= (* src = "FPNewBlackbox.preprocessed.v:5239.27-5239.66" *) $signed(32'd255);
  assign _035_ = $signed(exponent_difference) > (* src = "FPNewBlackbox.preprocessed.v:4967.31-4967.54" *) $signed(32'd0);
  assign _036_ = $signed(normalized_exponent) > (* src = "FPNewBlackbox.preprocessed.v:5219.12-5219.35" *) $signed(32'd1);
  assign _037_ = $signed(exponent_difference) <= (* src = "FPNewBlackbox.preprocessed.v:4970.7-4970.64" *) $signed(32'd4294967247);
  assign _038_ = $signed(exponent_difference) <= (* src = "FPNewBlackbox.preprocessed.v:4972.12-4972.62" *) $signed(32'd26);
  assign _039_ = $signed(exponent_difference) <= (* src = "FPNewBlackbox.preprocessed.v:5194.8-5194.34" *) $signed(32'd0);
  assign _040_ = $signed(exponent_difference) <= (* src = "FPNewBlackbox.preprocessed.v:5194.68-5194.94" *) $signed(32'd2);
  assign _041_ = info_a[4] && (* src = "FPNewBlackbox.preprocessed.v:4936.8-4936.30" *) info_b[5];
  assign _042_ = info_a[5] && (* src = "FPNewBlackbox.preprocessed.v:4936.36-4936.58" *) info_b[4];
  assign _043_ = _051_ && (* src = "FPNewBlackbox.preprocessed.v:4946.9-4946.46" *) info_c[4];
  assign _044_ = _043_ && (* src = "FPNewBlackbox.preprocessed.v:4946.8-4946.72" *) effective_subtraction;
  assign _045_ = effective_subtraction && (* src = "FPNewBlackbox.preprocessed.v:5002.16-5002.51" *) _060_;
  assign _046_ = effective_subtraction && (* src = "FPNewBlackbox.preprocessed.v:5003.23-5003.77" *) _033_;
  assign _047_ = effective_subtraction && (* src = "FPNewBlackbox.preprocessed.v:5194.40-5194.95" *) _040_;
  assign _048_ = _034_ && (* src = "FPNewBlackbox.preprocessed.v:5195.8-5195.81" *) _049_;
  assign _049_ = ! (* src = "FPNewBlackbox.preprocessed.v:5195.70-5195.81" *) lzc_zeroes;
  assign _050_ = _041_ || (* src = "FPNewBlackbox.preprocessed.v:4936.7-4936.59" *) _042_;
  assign _051_ = info_a[4] || (* src = "FPNewBlackbox.preprocessed.v:4948.13-4948.35" *) info_b[4];
  assign _052_ = info_a[5] || (* src = "FPNewBlackbox.preprocessed.v:4965.29-4965.51" *) info_b[5];
  assign _053_ = _039_ || (* src = "FPNewBlackbox.preprocessed.v:5194.7-5194.96" *) _047_;
  assign product = { info_a[7], mantissa_a[22:0] } * (* src = "FPNewBlackbox.preprocessed.v:4985.19-4985.42" *) { info_b[7], operand_b[22:0] };
  assign _054_ = - (* src = "FPNewBlackbox.preprocessed.v:5002.54-5002.62" *) sum_raw;
  assign _055_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4821.55-4821.79" *) inp_pipe_valid_q[1];
  assign _056_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4900.69-4900.112" *) inp_pipe_operands_q[31];
  assign _057_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4964.63-4964.73" *) info_c[7];
  assign _058_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4994.51-4994.70" *) addend_after_shift;
  assign _059_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4995.51-4995.69" *) sticky_before_add;
  assign _060_ = ~ (* src = "FPNewBlackbox.preprocessed.v:5002.41-5002.51" *) sum_raw[76];
  assign in_ready_o = out_ready_i | (* src = "FPNewBlackbox.preprocessed.v:4821.31-4821.79" *) _055_;
  assign sticky_after_norm = _066_ | (* src = "FPNewBlackbox.preprocessed.v:5226.29-5226.69" *) sticky_before_add;
  assign regular_status[2] = of_before_round | (* src = "FPNewBlackbox.preprocessed.v:5263.29-5263.61" *) of_after_round;
  assign _061_ = _067_ | (* src = "FPNewBlackbox.preprocessed.v:5265.30-5265.66" *) of_before_round;
  assign regular_status[0] = _061_ | (* src = "FPNewBlackbox.preprocessed.v:5265.29-5265.84" *) of_after_round;
  assign _011_ = _036_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5219.12-5219.35|FPNewBlackbox.preprocessed.v:5219.8-5224.27" *) sum_shifted[74:50] : { 1'h0, sum_shifted[74:51] };
  assign _015_ = _036_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5219.12-5219.35|FPNewBlackbox.preprocessed.v:5219.8-5224.27" *) { sum_shifted[49:0], 1'h0 } : sum_shifted[50:0];
  assign _010_ = _036_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5219.12-5219.35|FPNewBlackbox.preprocessed.v:5219.8-5224.27" *) _071_[9:0] : 10'h000;
  assign _002_ = sum_shifted[75] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5217.12-5217.49|FPNewBlackbox.preprocessed.v:5217.8-5224.27" *) normalized_exponent : _010_;
  assign _009_ = sum_shifted[75] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5217.12-5217.49|FPNewBlackbox.preprocessed.v:5217.8-5224.27" *) sum_shifted[50:0] : _015_;
  assign _003_ = sum_shifted[75] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5217.12-5217.49|FPNewBlackbox.preprocessed.v:5217.8-5224.27" *) { 1'h1, sum_shifted[74:51] } : _011_;
  assign final_mantissa = sum_shifted[76] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5213.7-5213.44|FPNewBlackbox.preprocessed.v:5213.3-5224.27" *) { 1'h1, sum_shifted[75:52] } : _003_;
  assign sum_sticky_bits = sum_shifted[76] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5213.7-5213.44|FPNewBlackbox.preprocessed.v:5213.3-5224.27" *) sum_shifted[51:1] : _009_;
  assign final_exponent = sum_shifted[76] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5213.7-5213.44|FPNewBlackbox.preprocessed.v:5213.3-5224.27" *) _027_[9:0] : _002_;
  assign _005_ = _048_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5195.8-5195.81|FPNewBlackbox.preprocessed.v:5195.4-5202.7" *) _024_[9:0] : 10'h000;
  assign _004_ = _048_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5195.8-5195.81|FPNewBlackbox.preprocessed.v:5195.4-5202.7" *) _025_[6:0] : _026_[6:0];
  assign normalized_exponent = _053_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5194.7-5194.96|FPNewBlackbox.preprocessed.v:5194.3-5207.6" *) _005_ : mid_pipe_tent_exp_q;
  assign norm_shamt = _053_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:5194.7-5194.96|FPNewBlackbox.preprocessed.v:5194.3-5207.6" *) _004_ : addend_shamt;
  assign _001_ = _038_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4972.12-4972.62|FPNewBlackbox.preprocessed.v:4972.8-4975.21" *) _069_[6:0] : 7'h00;
  assign addend_shamt = _037_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4970.7-4970.64|FPNewBlackbox.preprocessed.v:4970.3-4975.21" *) 7'h4c : _001_;
  assign _019_ = info_c[4] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4950.13-4950.22|FPNewBlackbox.preprocessed.v:4950.9-4951.115" *) { operand_c[31], 31'h7f800000 } : 32'd2143289344;
  assign _018_ = _051_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4948.13-4948.35|FPNewBlackbox.preprocessed.v:4948.9-4951.115" *) { tentative_sign, 31'h7f800000 } : _019_;
  assign _017_ = _044_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4946.8-4946.72|FPNewBlackbox.preprocessed.v:4946.4-4951.115" *) 1'h1 : 1'h0;
  assign _016_ = _044_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4946.8-4946.72|FPNewBlackbox.preprocessed.v:4946.4-4951.115" *) 32'd2143289344 : _018_;
  assign _014_ = any_operand_inf ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4944.12-4944.27|FPNewBlackbox.preprocessed.v:4944.8-4952.6" *) _017_ : 1'h0;
  assign _013_ = any_operand_inf ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4944.12-4944.27|FPNewBlackbox.preprocessed.v:4944.8-4952.6" *) _016_ : 32'd2143289344;
  assign _012_ = any_operand_inf ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4944.12-4944.27|FPNewBlackbox.preprocessed.v:4944.8-4952.6" *) 1'h1 : 1'h0;
  assign _008_ = any_operand_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4940.12-4940.27|FPNewBlackbox.preprocessed.v:4940.8-4952.6" *) signalling_nan : _014_;
  assign _006_ = any_operand_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4940.12-4940.27|FPNewBlackbox.preprocessed.v:4940.8-4952.6" *) 1'h1 : _012_;
  assign _007_ = any_operand_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4940.12-4940.27|FPNewBlackbox.preprocessed.v:4940.8-4952.6" *) 32'd2143289344 : _013_;
  assign special_status_q[4] = _050_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4936.7-4936.59|FPNewBlackbox.preprocessed.v:4936.3-4952.6" *) 1'h1 : _008_;
  assign result_is_special_q = _050_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4936.7-4936.59|FPNewBlackbox.preprocessed.v:4936.3-4952.6" *) 1'h1 : _006_;
  assign special_result_q = _050_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4936.7-4936.59|FPNewBlackbox.preprocessed.v:4936.3-4952.6" *) 32'd2143289344 : _007_;
  function [0:0] _169_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _169_ = b[0:0];
      3'b?1?:
        _169_ = b[1:1];
      3'b1??:
        _169_ = b[2:2];
      default:
        _169_ = a;
    endcase
  endfunction
  assign operand_a[31] = _169_(1'h1, { _056_, 1'h0, inp_pipe_operands_q[31] }, { _064_, _063_, _030_ });
  function [30:0] _170_;
    input [30:0] a;
    input [61:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _170_ = b[30:0];
      2'b1?:
        _170_ = b[61:31];
      default:
        _170_ = a;
    endcase
  endfunction
  assign { exponent_a[7:0], mantissa_a[22:0] } = _170_(31'h00800001, { 31'h3f800000, inp_pipe_operands_q[30:0] }, { _063_, _029_ });
  assign info_b = _031_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *) info_q[15:8] : 8'hff;
  function [7:0] _172_;
    input [7:0] a;
    input [15:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _172_ = b[7:0];
      2'b1?:
        _172_ = b[15:8];
      default:
        _172_ = a;
    endcase
  endfunction
  assign info_a = _172_(8'hff, { 8'h81, info_q[7:0] }, { _063_, _029_ });
  function [31:0] _173_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _173_ = b[31:0];
      2'b1?:
        _173_ = b[63:32];
      default:
        _173_ = a;
    endcase
  endfunction
  assign operand_c = _173_(32'd2155872257, { _077_, inp_pipe_operands_q[94:64], 32'h80000000 }, { _032_, _062_ });
  assign operand_b = _031_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *) inp_pipe_operands_q[63:32] : 32'd2155872257;
  function [7:0] _175_;
    input [7:0] a;
    input [15:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _175_ = b[7:0];
      2'b1?:
        _175_ = b[15:8];
      default:
        _175_ = a;
    endcase
  endfunction
  assign info_c = _175_(8'hff, { info_q[23:16], 8'h21 }, { _032_, _062_ });
  assign _062_ = inp_pipe_op_q[3:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *) 4'h3;
  assign _063_ = inp_pipe_op_q[3:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *) 4'h2;
  assign _064_ = inp_pipe_op_q[3:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *) 4'h1;
  assign _065_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4897.3-4917.10" *) inp_pipe_op_q[3:0];
  assign any_operand_inf = | (* src = "FPNewBlackbox.preprocessed.v:4924.27-4924.61" *) { info_c[4], info_b[4], info_a[4] };
  assign any_operand_nan = | (* src = "FPNewBlackbox.preprocessed.v:4925.27-4925.61" *) { info_c[3], info_b[3], info_a[3] };
  assign signalling_nan = | (* src = "FPNewBlackbox.preprocessed.v:4926.26-4926.60" *) { info_c[2], info_b[2], info_a[2] };
  assign sticky_before_add = | (* src = "FPNewBlackbox.preprocessed.v:4993.29-4993.48" *) addend_sticky_bits;
  assign _066_ = | (* src = "FPNewBlackbox.preprocessed.v:5226.29-5226.47" *) sum_sticky_bits;
  assign _067_ = | (* src = "FPNewBlackbox.preprocessed.v:5265.30-5265.48" *) round_sticky_bits;
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:5331.18-5331.73" *) { inp_pipe_valid_q[1], in_valid_i };
  assign sum_shifted = { sum_q[75:51], sum_lower } << (* src = "FPNewBlackbox.preprocessed.v:5209.23-5209.42" *) norm_shamt;
  assign { addend_after_shift, addend_sticky_bits } = { info_c[7], operand_c[22:0], 76'h0000000000000000000 } >> (* src = "FPNewBlackbox.preprocessed.v:4992.52-4992.110" *) addend_shamt;
  assign _068_ = _022_ - (* src = "FPNewBlackbox.preprocessed.v:4965.82-4965.151" *) 32'd127;
  assign exponent_difference = $signed(exponent_addend) - (* src = "FPNewBlackbox.preprocessed.v:4966.31-4966.65" *) $signed(exponent_product);
  assign _069_ = $signed(32'd27) - (* src = "FPNewBlackbox.preprocessed.v:4973.29-4973.80" *) $signed(exponent_difference);
  assign _070_ = $signed(exponent_product) - (* src = "FPNewBlackbox.preprocessed.v:5197.28-5197.71" *) $signed({ 1'h0, leading_zero_count });
  assign _071_ = $signed(normalized_exponent) - (* src = "FPNewBlackbox.preprocessed.v:5221.21-5221.44" *) $signed(32'd1);
  assign _072_ = in_ready_o ? (* src = "FPNewBlackbox.preprocessed.v:4826.52-4826.117" *) in_valid_i : 1'hx;
  assign _000_ = flush_i ? (* src = "FPNewBlackbox.preprocessed.v:4826.34-4826.118" *) 1'h0 : _072_;
  assign { _073_[31:10], exponent_product } = _052_ ? (* src = "FPNewBlackbox.preprocessed.v:4965.29-4965.152" *) 32'd4294967171 : _068_;
  assign mid_pipe_tent_exp_q = _035_ ? (* src = "FPNewBlackbox.preprocessed.v:4967.31-4967.91" *) exponent_addend : exponent_product;
  assign addend_shifted = effective_subtraction ? (* src = "FPNewBlackbox.preprocessed.v:4994.27-4994.91" *) _058_ : addend_after_shift;
  assign { _074_[76], sum_q[75:51], sum_lower } = _045_ ? (* src = "FPNewBlackbox.preprocessed.v:5002.16-5002.72" *) _054_ : sum_raw;
  assign _075_ = effective_subtraction ? (* src = "FPNewBlackbox.preprocessed.v:5003.88-5003.133" *) 1'h0 : tentative_sign;
  assign pre_round_sign = _046_ ? (* src = "FPNewBlackbox.preprocessed.v:5003.23-5003.134" *) 1'h1 : _075_;
  assign { _076_[31:8], pre_round_abs[30:23] } = of_before_round ? (* src = "FPNewBlackbox.preprocessed.v:5242.31-5242.112" *) 32'd254 : { 24'h000000, final_exponent[7:0] };
  assign pre_round_mantissa = of_before_round ? (* src = "FPNewBlackbox.preprocessed.v:5243.31-5243.96" *) 23'h7fffff : final_mantissa[23:1];
  assign round_sticky_bits = of_before_round ? (* src = "FPNewBlackbox.preprocessed.v:5245.30-5245.94" *) 2'h3 : { final_mantissa[0], sticky_after_norm };
  assign result_o = result_is_special_q ? (* src = "FPNewBlackbox.preprocessed.v:5268.21-5268.76" *) special_result_q : { rounded_sign, rounded_abs };
  assign status_o = result_is_special_q ? (* src = "FPNewBlackbox.preprocessed.v:5269.21-5269.76" *) { special_status_q[4], 4'h0 } : { 2'h0, regular_status[2:0] };
  assign _077_ = inp_pipe_operands_q[95] ^ (* src = "FPNewBlackbox.preprocessed.v:4896.48-4896.124" *) inp_pipe_op_mod_q[1];
  assign effective_subtraction = tentative_sign ^ (* src = "FPNewBlackbox.preprocessed.v:4927.33-4927.167" *) operand_c[31];
  assign tentative_sign = operand_a[31] ^ (* src = "FPNewBlackbox.preprocessed.v:4949.23-4949.110" *) operand_b[31];
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:4869.4-4873.3" *)
  \$paramod$aa198a329ffc044f9fef695fda54759a05728371\fpnew_classifier  i_class_inputs (
    .info_o(info_q),
    .is_boxed_i(inp_pipe_is_boxed_q[2:0]),
    .operands_i(inp_pipe_operands_q[95:0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:5246.51-5255.3" *)
  \$paramod\fpnew_rounding\AbsWidth=32'00000000000000000000000000011111  i_fpnew_rounding (
    .abs_rounded_o(rounded_abs),
    .abs_value_i({ pre_round_abs[30:23], pre_round_mantissa }),
    .effective_subtraction_i(effective_subtraction),
    .exact_zero_o(result_zero),
    .rnd_mode_i(inp_pipe_rnd_mode_q[2:0]),
    .round_sticky_bits_i(round_sticky_bits),
    .sign_i(pre_round_sign),
    .sign_o(rounded_sign)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:5187.4-5191.3" *)
  \$paramod$3dc9b54c1a715af223bba72fd88f9cd46ba20ed0\lzc  i_lzc (
    .cnt_o(leading_zero_count),
    .empty_o(lzc_zeroes),
    .in_i(sum_lower)
  );
  assign _073_[9:0] = exponent_product;
  assign _074_[75:0] = { sum_q[75:51], sum_lower };
  assign _076_[7:0] = pre_round_abs[30:23];
  assign addend_shamt_q = addend_shamt;
  assign aux_o = inp_pipe_aux_q[1];
  assign effective_subtraction_q = effective_subtraction;
  assign exponent_a[9:8] = 2'h0;
  assign exponent_b = { 2'h0, operand_b[30:23] };
  assign exponent_c = { 2'h0, operand_c[30:23] };
  assign exponent_difference_q = exponent_difference;
  assign exponent_product_q = exponent_product;
  assign extension_bit_o = 1'h1;
  assign final_sign = pre_round_sign;
  assign final_sign_q = pre_round_sign;
  assign inp_pipe_aux_q[0] = aux_i;
  assign inp_pipe_is_boxed_q[5:3] = is_boxed_i;
  assign inp_pipe_op_mod_q[0] = op_mod_i;
  assign inp_pipe_op_q[7:4] = op_i;
  assign inp_pipe_operands_q[191:96] = operands_i;
  assign inp_pipe_ready = { in_ready_o, out_ready_i };
  assign inp_pipe_rnd_mode_q[5:3] = rnd_mode_i;
  assign inp_pipe_tag_q[3:2] = tag_i;
  assign inp_pipe_valid_q[0] = in_valid_i;
  assign leading_zero_count_sgn = { 1'h0, leading_zero_count };
  assign mantissa_a[23] = info_a[7];
  assign mantissa_b = { info_b[7], operand_b[22:0] };
  assign mantissa_c = { info_c[7], operand_c[22:0] };
  assign mid_pipe_add_shamt_q = addend_shamt;
  assign mid_pipe_aux_q = inp_pipe_aux_q[1];
  assign mid_pipe_eff_sub_q = effective_subtraction;
  assign mid_pipe_exp_diff_q = exponent_difference;
  assign mid_pipe_exp_prod_q = exponent_product;
  assign mid_pipe_final_sign_q = pre_round_sign;
  assign mid_pipe_ready = out_ready_i;
  assign mid_pipe_res_is_spec_q = result_is_special_q;
  assign mid_pipe_rnd_mode_q = inp_pipe_rnd_mode_q[2:0];
  assign mid_pipe_spec_res_q = special_result_q;
  assign mid_pipe_spec_stat_q = { special_status_q[4], 4'h0 };
  assign mid_pipe_sticky_q = sticky_before_add;
  assign mid_pipe_sum_q = { sum_q[75:51], sum_lower };
  assign mid_pipe_tag_q = inp_pipe_tag_q[1:0];
  assign mid_pipe_valid_q = inp_pipe_valid_q[1];
  assign operand_a[30:0] = { exponent_a[7:0], mantissa_a[22:0] };
  assign out_pipe_aux_q = inp_pipe_aux_q[1];
  assign out_pipe_ready = out_ready_i;
  assign out_pipe_result_q = result_o;
  assign out_pipe_status_q = status_o;
  assign out_pipe_tag_q = inp_pipe_tag_q[1:0];
  assign out_pipe_valid_q = inp_pipe_valid_q[1];
  assign out_valid_o = inp_pipe_valid_q[1];
  assign pre_round_abs[22:0] = pre_round_mantissa;
  assign pre_round_exponent = pre_round_abs[30:23];
  assign product_shifted = { 26'h0000000, product, 2'h0 };
  assign regular_result = { rounded_sign, rounded_abs };
  assign regular_status[4:3] = 2'h0;
  assign result_d = result_o;
  assign result_is_special = result_is_special_q;
  assign rnd_mode_q = inp_pipe_rnd_mode_q[2:0];
  assign special_result = special_result_q;
  assign special_status = { special_status_q[4], 4'h0 };
  assign special_status_q[3:0] = 4'h0;
  assign status_d = status_o;
  assign sticky_before_add_q = sticky_before_add;
  assign sum = { sum_q[75:51], sum_lower };
  assign sum_carry = sum_raw[76];
  assign sum_q[50:0] = sum_lower;
  assign sv2v_tmp_00793 = exponent_difference;
  assign sv2v_tmp_0252C = result_o;
  assign sv2v_tmp_192AB = inp_pipe_tag_q[1:0];
  assign sv2v_tmp_25EE6 = inp_pipe_valid_q[1];
  assign sv2v_tmp_2A843 = status_o;
  assign sv2v_tmp_2D21E = exponent_product;
  assign sv2v_tmp_36387 = tag_i;
  assign sv2v_tmp_4A83E = special_result_q;
  assign sv2v_tmp_56A72 = effective_subtraction;
  assign sv2v_tmp_6DFE4 = inp_pipe_tag_q[1:0];
  assign sv2v_tmp_6F5F7 = sticky_before_add;
  assign sv2v_tmp_73AEA = in_valid_i;
  assign sv2v_tmp_7DEC5 = result_is_special_q;
  assign sv2v_tmp_83404 = addend_shamt;
  assign sv2v_tmp_8D189 = aux_i;
  assign sv2v_tmp_9E262 = inp_pipe_aux_q[1];
  assign sv2v_tmp_A74E2 = inp_pipe_rnd_mode_q[2:0];
  assign sv2v_tmp_B4C85 = mid_pipe_tent_exp_q;
  assign sv2v_tmp_BC8B9 = operands_i;
  assign sv2v_tmp_CB10A = inp_pipe_valid_q[1];
  assign sv2v_tmp_CBA8F = op_i;
  assign sv2v_tmp_CDA0E = inp_pipe_aux_q[1];
  assign sv2v_tmp_CEAB3 = { sum_q[75:51], sum_lower };
  assign sv2v_tmp_D1C37 = op_mod_i;
  assign sv2v_tmp_D7BD0 = pre_round_sign;
  assign sv2v_tmp_E1339 = rnd_mode_i;
  assign sv2v_tmp_EC01B = { special_status_q[4], 4'h0 };
  assign sv2v_tmp_FE389 = is_boxed_i;
  assign tag_o = inp_pipe_tag_q[1:0];
  assign tentative_exponent = mid_pipe_tent_exp_q;
  assign tentative_exponent_q = mid_pipe_tent_exp_q;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_noncomp_8EF6A_8033C" *)
(* src = "FPNewBlackbox.preprocessed.v:6175.1-6590.10" *)
module \$paramod$6d8b9e1a9ce9a9fa6c378e58eae11f821dd49832\fpnew_noncomp_8EF6A_8033C (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, tag_i, aux_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, class_mask_o, is_class_o, tag_o, aux_o, out_valid_o, out_ready_i
, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:6297.4-6301.120" *)
  wire _000_;
  (* src = "FPNewBlackbox.preprocessed.v:6379.2-6394.5" *)
  (* unused_bits = "31" *)
  wire [31:0] _001_;
  (* src = "FPNewBlackbox.preprocessed.v:6449.2-6462.5" *)
  wire [9:0] _002_;
  (* src = "FPNewBlackbox.preprocessed.v:6420.2-6444.5" *)
  wire [31:0] _003_;
  (* src = "FPNewBlackbox.preprocessed.v:6420.2-6444.5" *)
  wire _004_;
  (* src = "FPNewBlackbox.preprocessed.v:6400.2-6415.5" *)
  wire [31:0] _005_;
  (* src = "FPNewBlackbox.preprocessed.v:6449.2-6462.5" *)
  wire [9:0] _006_;
  (* src = "FPNewBlackbox.preprocessed.v:6420.2-6444.5" *)
  wire [31:0] _007_;
  (* src = "FPNewBlackbox.preprocessed.v:6420.2-6444.5" *)
  wire _008_;
  (* src = "FPNewBlackbox.preprocessed.v:6400.2-6415.5" *)
  wire [31:0] _009_;
  (* src = "FPNewBlackbox.preprocessed.v:6449.2-6462.5" *)
  wire [9:0] _010_;
  (* src = "FPNewBlackbox.preprocessed.v:6420.2-6444.5" *)
  wire [31:0] _011_;
  (* src = "FPNewBlackbox.preprocessed.v:6400.2-6415.5" *)
  wire [31:0] _012_;
  (* src = "FPNewBlackbox.preprocessed.v:6449.2-6462.5" *)
  wire [9:0] _013_;
  (* src = "FPNewBlackbox.preprocessed.v:6420.2-6444.5" *)
  wire [31:0] _014_;
  (* src = "FPNewBlackbox.preprocessed.v:6436.21-6436.56" *)
  wire [31:0] _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  (* src = "FPNewBlackbox.preprocessed.v:6365.27-6365.49" *)
  wire _021_;
  (* src = "FPNewBlackbox.preprocessed.v:6365.55-6365.77" *)
  wire _022_;
  (* src = "FPNewBlackbox.preprocessed.v:6403.7-6403.29" *)
  wire _023_;
  (* src = "FPNewBlackbox.preprocessed.v:6366.56-6366.144" *)
  wire _024_;
  (* src = "FPNewBlackbox.preprocessed.v:6366.30-6366.51" *)
  wire _025_;
  (* src = "FPNewBlackbox.preprocessed.v:6296.55-6296.79" *)
  wire _026_;
  (* src = "FPNewBlackbox.preprocessed.v:6389.59-6389.66" *)
  wire _027_;
  (* src = "FPNewBlackbox.preprocessed.v:6436.41-6436.56" *)
  wire [31:0] _028_;
  (* src = "FPNewBlackbox.preprocessed.v:6431.21-6431.55" *)
  wire [31:0] _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  (* src = "FPNewBlackbox.preprocessed.v:6301.52-6301.117" *)
  wire _037_;
  (* src = "FPNewBlackbox.preprocessed.v:6411.30-6411.71" *)
  wire [31:0] _038_;
  (* src = "FPNewBlackbox.preprocessed.v:6412.30-6412.71" *)
  wire [31:0] _039_;
  (* src = "FPNewBlackbox.preprocessed.v:6451.20-6451.96" *)
  wire [9:0] _040_;
  (* src = "FPNewBlackbox.preprocessed.v:6453.20-6453.96" *)
  wire [9:0] _041_;
  (* src = "FPNewBlackbox.preprocessed.v:6455.20-6455.96" *)
  wire [9:0] _042_;
  (* src = "FPNewBlackbox.preprocessed.v:6457.20-6457.96" *)
  wire [9:0] _043_;
  (* src = "FPNewBlackbox.preprocessed.v:6459.20-6459.63" *)
  wire [9:0] _044_;
  (* src = "FPNewBlackbox.preprocessed.v:6390.59-6390.74" *)
  wire _045_;
  (* src = "FPNewBlackbox.preprocessed.v:6431.20-6431.90" *)
  wire [31:0] _046_;
  (* src = "FPNewBlackbox.preprocessed.v:6436.20-6436.91" *)
  wire [31:0] _047_;
  (* src = "FPNewBlackbox.preprocessed.v:6441.20-6441.68" *)
  wire [31:0] _048_;
  (* src = "FPNewBlackbox.preprocessed.v:6358.7-6358.22" *)
  wire any_operand_nan;
  (* src = "FPNewBlackbox.preprocessed.v:6224.13-6224.18" *)
  input aux_i;
  wire aux_i;
  (* src = "FPNewBlackbox.preprocessed.v:6234.14-6234.19" *)
  output aux_o;
  wire aux_o;
  (* src = "FPNewBlackbox.preprocessed.v:6237.14-6237.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:6447.7-6447.26" *)
  wire class_extension_bit;
  (* src = "FPNewBlackbox.preprocessed.v:6448.12-6448.24" *)
  wire [9:0] class_mask_d;
  (* src = "FPNewBlackbox.preprocessed.v:6231.20-6231.32" *)
  output [9:0] class_mask_o;
  wire [9:0] class_mask_o;
  (* src = "FPNewBlackbox.preprocessed.v:6446.13-6446.25" *)
  wire [4:0] class_status;
  (* src = "FPNewBlackbox.preprocessed.v:6215.13-6215.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:6419.7-6419.24" *)
  wire cmp_extension_bit;
  (* src = "FPNewBlackbox.preprocessed.v:6417.42-6417.52" *)
  wire [31:0] cmp_result;
  (* src = "FPNewBlackbox.preprocessed.v:6418.12-6418.22" *)
  wire [4:0] cmp_status;
  (* src = "FPNewBlackbox.preprocessed.v:6467.6-6467.21" *)
  wire extension_bit_d;
  (* src = "FPNewBlackbox.preprocessed.v:6230.14-6230.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:6227.13-6227.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:6295.9-6295.16" *)
  wire \gen_input_pipeline[0].reg_ena ;
  (* src = "FPNewBlackbox.preprocessed.v:6226.14-6226.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:6225.13-6225.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:6351.13-6351.19" *)
  (* unused_bits = "1" *)
  wire [7:0] info_a;
  (* src = "FPNewBlackbox.preprocessed.v:6352.13-6352.19" *)
  (* unused_bits = "1 4 6 7" *)
  wire [7:0] info_b;
  (* src = "FPNewBlackbox.preprocessed.v:6340.14-6340.20" *)
  (* unused_bits = "1 9 12 14 15" *)
  wire [15:0] info_q;
  (* src = "FPNewBlackbox.preprocessed.v:6256.23-6256.37" *)
  wire [0:1] inp_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:6251.156-6251.175" *)
  wire [3:0] inp_pipe_is_boxed_q;
  (* src = "FPNewBlackbox.preprocessed.v:6254.23-6254.40" *)
  wire [0:1] inp_pipe_op_mod_q;
  (* src = "FPNewBlackbox.preprocessed.v:6253.220-6253.233" *)
  wire [7:0] inp_pipe_op_q;
  (* src = "FPNewBlackbox.preprocessed.v:6250.1006-6250.1025" *)
  wire [127:0] inp_pipe_operands_q;
  (* src = "FPNewBlackbox.preprocessed.v:6258.24-6258.38" *)
  wire [0:1] inp_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6252.156-6252.175" *)
  wire [5:0] inp_pipe_rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:6255.316-6255.330" *)
  wire [3:0] inp_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:6257.23-6257.39" *)
  wire [0:1] inp_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:6218.19-6218.29" *)
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:6468.7-6468.17" *)
  wire is_class_d;
  (* src = "FPNewBlackbox.preprocessed.v:6232.14-6232.24" *)
  output is_class_o;
  wire is_class_o;
  (* src = "FPNewBlackbox.preprocessed.v:6399.7-6399.27" *)
  wire minmax_extension_bit;
  (* src = "FPNewBlackbox.preprocessed.v:6397.42-6397.55" *)
  wire [31:0] minmax_result;
  (* src = "FPNewBlackbox.preprocessed.v:6398.12-6398.25" *)
  wire [4:0] minmax_status;
  (* src = "FPNewBlackbox.preprocessed.v:6221.19-6221.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:6222.13-6222.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:6349.43-6349.52" *)
  wire [31:0] operand_a;
  (* src = "FPNewBlackbox.preprocessed.v:6364.7-6364.24" *)
  wire operand_a_smaller;
  (* src = "FPNewBlackbox.preprocessed.v:6350.43-6350.52" *)
  wire [31:0] operand_b;
  (* src = "FPNewBlackbox.preprocessed.v:6363.7-6363.21" *)
  wire operands_equal;
  (* src = "FPNewBlackbox.preprocessed.v:6217.33-6217.43" *)
  input [63:0] operands_i;
  wire [63:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:6505.23-6505.37" *)
  wire out_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:6502.160-6502.181" *)
  wire [9:0] out_pipe_class_mask_q;
  (* src = "FPNewBlackbox.preprocessed.v:6501.23-6501.47" *)
  wire out_pipe_extension_bit_q;
  (* src = "FPNewBlackbox.preprocessed.v:6503.23-6503.42" *)
  wire out_pipe_is_class_q;
  (* src = "FPNewBlackbox.preprocessed.v:6507.24-6507.38" *)
  wire out_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6499.260-6499.277" *)
  wire [31:0] out_pipe_result_q;
  (* src = "FPNewBlackbox.preprocessed.v:6500.156-6500.173" *)
  wire [4:0] out_pipe_status_q;
  (* src = "FPNewBlackbox.preprocessed.v:6504.316-6504.330" *)
  wire [1:0] out_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:6506.23-6506.39" *)
  wire out_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:6236.13-6236.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:6235.14-6235.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:6465.42-6465.50" *)
  wire [31:0] result_d;
  (* src = "FPNewBlackbox.preprocessed.v:6228.28-6228.36" *)
  output [31:0] result_o;
  wire [31:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:6219.19-6219.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:6216.13-6216.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:6369.7-6369.25" *)
  wire sgnj_extension_bit;
  (* src = "FPNewBlackbox.preprocessed.v:6367.42-6367.53" *)
  wire [31:0] sgnj_result;
  (* src = "FPNewBlackbox.preprocessed.v:6368.13-6368.24" *)
  wire [4:0] sgnj_status;
  (* src = "FPNewBlackbox.preprocessed.v:6380.7-6380.13" *)
  wire \sign_injections.sign_a ;
  (* src = "FPNewBlackbox.preprocessed.v:6381.7-6381.13" *)
  wire \sign_injections.sign_b ;
  (* src = "FPNewBlackbox.preprocessed.v:6359.7-6359.21" *)
  wire signalling_nan;
  (* src = "FPNewBlackbox.preprocessed.v:6466.12-6466.20" *)
  wire [4:0] status_d;
  (* src = "FPNewBlackbox.preprocessed.v:6229.20-6229.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:6508.43-6508.57" *)
  wire [32:1] sv2v_tmp_07494;
  (* src = "FPNewBlackbox.preprocessed.v:6268.13-6268.27" *)
  wire [4:1] sv2v_tmp_0B797;
  (* src = "FPNewBlackbox.preprocessed.v:6529.13-6529.27" *)
  wire sv2v_tmp_2CB8C;
  (* src = "FPNewBlackbox.preprocessed.v:6274.57-6274.71" *)
  wire [2:1] sv2v_tmp_488B7;
  (* src = "FPNewBlackbox.preprocessed.v:6265.13-6265.27" *)
  wire [3:1] sv2v_tmp_62109;
  (* src = "FPNewBlackbox.preprocessed.v:6280.13-6280.27" *)
  wire sv2v_tmp_73AEA;
  (* src = "FPNewBlackbox.preprocessed.v:6520.13-6520.27" *)
  wire sv2v_tmp_7DF01;
  (* src = "FPNewBlackbox.preprocessed.v:6262.13-6262.27" *)
  wire [2:1] sv2v_tmp_86D63;
  (* src = "FPNewBlackbox.preprocessed.v:6277.13-6277.27" *)
  wire sv2v_tmp_8D189;
  (* src = "FPNewBlackbox.preprocessed.v:6514.13-6514.27" *)
  wire sv2v_tmp_8E9A9;
  (* src = "FPNewBlackbox.preprocessed.v:6523.57-6523.71" *)
  wire [2:1] sv2v_tmp_93CB4;
  (* src = "FPNewBlackbox.preprocessed.v:6517.14-6517.28" *)
  wire [10:1] sv2v_tmp_94259;
  (* src = "FPNewBlackbox.preprocessed.v:6511.13-6511.27" *)
  wire [5:1] sv2v_tmp_CCE43;
  (* src = "FPNewBlackbox.preprocessed.v:6259.21-6259.35" *)
  wire [64:1] sv2v_tmp_D1067;
  (* src = "FPNewBlackbox.preprocessed.v:6271.13-6271.27" *)
  wire sv2v_tmp_D1C37;
  (* src = "FPNewBlackbox.preprocessed.v:6526.13-6526.27" *)
  wire sv2v_tmp_FA930;
  (* src = "FPNewBlackbox.preprocessed.v:6223.63-6223.68" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:6233.64-6233.69" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  assign \gen_input_pipeline[0].reg_ena  = in_ready_o & (* src = "FPNewBlackbox.preprocessed.v:6302.21-6302.60" *) in_valid_i;
  assign \sign_injections.sign_a  = inp_pipe_operands_q[31] & (* src = "FPNewBlackbox.preprocessed.v:6385.12-6385.66" *) info_q[0];
  assign \sign_injections.sign_b  = inp_pipe_operands_q[63] & (* src = "FPNewBlackbox.preprocessed.v:6386.12-6386.66" *) info_q[8];
  assign _015_ = operand_a_smaller & (* src = "FPNewBlackbox.preprocessed.v:6436.21-6436.56" *) _028_;
  reg [3:0] _053_;
  (* src = "FPNewBlackbox.preprocessed.v:6318.4-6322.334" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _053_ <= 4'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _053_ <= op_i;
  assign inp_pipe_op_q[3:0] = _053_;
  reg \inp_pipe_valid_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:6297.4-6301.120" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_valid_q_reg[0]  <= 1'h0;
    else if (_016_) \inp_pipe_valid_q_reg[0]  <= _000_;
  assign inp_pipe_valid_q[1] = \inp_pipe_valid_q_reg[0] ;
  reg [2:0] _055_;
  (* src = "FPNewBlackbox.preprocessed.v:6313.4-6317.256" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _055_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _055_ <= rnd_mode_i;
  assign inp_pipe_rnd_mode_q[2:0] = _055_;
  reg [1:0] _056_;
  (* src = "FPNewBlackbox.preprocessed.v:6308.4-6312.256" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _056_ <= 2'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _056_ <= is_boxed_i;
  assign inp_pipe_is_boxed_q[1:0] = _056_;
  reg \inp_pipe_aux_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:6333.4-6337.85" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_aux_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_aux_q_reg[0]  <= aux_i;
  assign inp_pipe_aux_q[1] = \inp_pipe_aux_q_reg[0] ;
  reg [1:0] _058_;
  (* src = "FPNewBlackbox.preprocessed.v:6328.4-6332.481" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _058_ <= 2'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _058_ <= tag_i;
  assign inp_pipe_tag_q[1:0] = _058_;
  reg \inp_pipe_op_mod_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:6323.4-6327.94" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_op_mod_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_op_mod_q_reg[0]  <= op_mod_i;
  assign inp_pipe_op_mod_q[1] = \inp_pipe_op_mod_q_reg[0] ;
  reg [63:0] _060_;
  (* src = "FPNewBlackbox.preprocessed.v:6303.4-6307.2698" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _060_ <= 64'h0000000000000000;
    else if (\gen_input_pipeline[0].reg_ena ) _060_ <= operands_i;
  assign inp_pipe_operands_q[63:0] = _060_;
  assign _016_ = | { in_ready_o, flush_i };
  assign _017_ = | { _035_, _034_, _033_ };
  assign _018_ = | { _031_, is_class_o };
  assign _019_ = | { _030_, is_class_o };
  assign _020_ = | { _035_, _034_ };
  assign _021_ = inp_pipe_operands_q[31:0] == (* src = "FPNewBlackbox.preprocessed.v:6365.27-6365.49" *) inp_pipe_operands_q[63:32];
  assign _022_ = info_q[5] && (* src = "FPNewBlackbox.preprocessed.v:6365.55-6365.77" *) info_q[13];
  assign _023_ = info_q[3] && (* src = "FPNewBlackbox.preprocessed.v:6403.7-6403.29" *) info_q[11];
  assign operands_equal = _021_ || (* src = "FPNewBlackbox.preprocessed.v:6365.26-6365.78" *) _022_;
  assign _024_ = inp_pipe_operands_q[31] || (* src = "FPNewBlackbox.preprocessed.v:6366.56-6366.144" *) inp_pipe_operands_q[63];
  assign _025_ = inp_pipe_operands_q[31:0] < (* src = "FPNewBlackbox.preprocessed.v:6366.30-6366.51" *) inp_pipe_operands_q[63:32];
  assign _026_ = ~ (* src = "FPNewBlackbox.preprocessed.v:6296.55-6296.79" *) inp_pipe_valid_q[1];
  assign _027_ = ~ (* src = "FPNewBlackbox.preprocessed.v:6389.59-6389.66" *) \sign_injections.sign_b ;
  assign _028_ = ~ (* src = "FPNewBlackbox.preprocessed.v:6436.41-6436.56" *) { 31'h00000000, operands_equal };
  assign in_ready_o = out_ready_i | (* src = "FPNewBlackbox.preprocessed.v:6296.31-6296.79" *) _026_;
  assign _029_ = operand_a_smaller | (* src = "FPNewBlackbox.preprocessed.v:6431.21-6431.55" *) operands_equal;
  function [0:0] _077_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6470.3-6496.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _077_ = b[0:0];
      2'b1?:
        _077_ = b[1:1];
      default:
        _077_ = a;
    endcase
  endfunction
  assign extension_bit_o = _077_(1'h1, { sgnj_extension_bit, 1'h0 }, { _031_, _019_ });
  function [4:0] _078_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6470.3-6496.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _078_ = b[4:0];
      3'b?1?:
        _078_ = b[9:5];
      3'b1??:
        _078_ = b[14:10];
      default:
        _078_ = a;
    endcase
  endfunction
  assign status_o = _078_(5'h1f, { signalling_nan, 4'h0, cmp_status[4], 9'h000 }, { _032_, _030_, _018_ });
  assign is_class_o = inp_pipe_op_q[3:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6470.3-6496.10" *) 4'h9;
  function [31:0] _080_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6470.3-6496.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _080_ = b[31:0];
      3'b?1?:
        _080_ = b[63:32];
      3'b1??:
        _080_ = b[95:64];
      default:
        _080_ = a;
    endcase
  endfunction
  assign result_o = _080_(32'd2155872257, { sgnj_result, minmax_result, cmp_result }, { _031_, _032_, _030_ });
  assign _030_ = inp_pipe_op_q[3:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6470.3-6496.10" *) 4'h8;
  assign _032_ = inp_pipe_op_q[3:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6470.3-6496.10" *) 4'h7;
  assign _031_ = inp_pipe_op_q[3:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6470.3-6496.10" *) 4'h6;
  assign _013_ = info_q[3] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6458.12-6458.21|FPNewBlackbox.preprocessed.v:6458.8-6461.34" *) _044_ : 10'h200;
  assign _010_ = info_q[4] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6456.12-6456.21|FPNewBlackbox.preprocessed.v:6456.8-6461.34" *) _043_ : _013_;
  assign _006_ = info_q[5] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6454.12-6454.21|FPNewBlackbox.preprocessed.v:6454.8-6461.34" *) _042_ : _010_;
  assign _002_ = info_q[6] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6452.12-6452.21|FPNewBlackbox.preprocessed.v:6452.8-6461.34" *) _041_ : _006_;
  assign class_mask_o = info_q[7] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6450.7-6450.16|FPNewBlackbox.preprocessed.v:6450.3-6461.34" *) _040_ : _002_;
  assign _014_ = any_operand_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6438.10-6438.25|FPNewBlackbox.preprocessed.v:6438.6-6441.69" *) { 31'h00000000, inp_pipe_op_mod_q[1] } : _048_;
  assign _011_ = any_operand_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6433.10-6433.25|FPNewBlackbox.preprocessed.v:6433.6-6436.92" *) 32'd0 : _047_;
  assign _008_ = any_operand_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6428.10-6428.25|FPNewBlackbox.preprocessed.v:6428.6-6431.91" *) 1'h1 : 1'h0;
  assign _007_ = any_operand_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6428.10-6428.25|FPNewBlackbox.preprocessed.v:6428.6-6431.91" *) 32'd0 : _046_;
  assign _004_ = _020_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6426.4-6443.11" *) _008_ : 1'h0;
  function [31:0] _094_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6426.4-6443.11" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _094_ = b[31:0];
      3'b?1?:
        _094_ = b[63:32];
      3'b1??:
        _094_ = b[95:64];
      default:
        _094_ = a;
    endcase
  endfunction
  assign _003_ = _094_(32'd2155872257, { _007_, _011_, _014_ }, { _035_, _034_, _033_ });
  assign cmp_status[4] = signalling_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6423.7-6423.21|FPNewBlackbox.preprocessed.v:6423.3-6443.11" *) 1'h1 : _004_;
  assign cmp_result = signalling_nan ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6423.7-6423.21|FPNewBlackbox.preprocessed.v:6423.3-6443.11" *) 32'd0 : _003_;
  function [31:0] _097_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6410.4-6414.11" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _097_ = b[31:0];
      2'b1?:
        _097_ = b[63:32];
      default:
        _097_ = a;
    endcase
  endfunction
  assign _012_ = _097_(32'd2155872257, { _038_, _039_ }, { _035_, _034_ });
  assign _009_ = info_q[11] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6407.12-6407.21|FPNewBlackbox.preprocessed.v:6407.8-6414.11" *) inp_pipe_operands_q[31:0] : _012_;
  assign _005_ = info_q[3] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6405.12-6405.21|FPNewBlackbox.preprocessed.v:6405.8-6414.11" *) inp_pipe_operands_q[63:32] : _009_;
  assign minmax_result = _023_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6403.7-6403.29|FPNewBlackbox.preprocessed.v:6403.3-6414.11" *) 32'd2143289344 : _005_;
  function [0:0] _101_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6387.3-6393.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _101_ = b[0:0];
      4'b??1?:
        _101_ = b[1:1];
      4'b?1??:
        _101_ = b[2:2];
      4'b1???:
        _101_ = b[3:3];
      default:
        _101_ = a;
    endcase
  endfunction
  assign sgnj_result[31] = _101_(1'h1, { \sign_injections.sign_b , _027_, _045_, inp_pipe_operands_q[31] }, { _035_, _034_, _033_, _036_ });
  function [30:0] _102_;
    input [30:0] a;
    input [61:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6387.3-6393.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _102_ = b[30:0];
      2'b1?:
        _102_ = b[61:31];
      default:
        _102_ = a;
    endcase
  endfunction
  assign sgnj_result[30:0] = _102_(31'h00800001, { _001_[30:0], inp_pipe_operands_q[30:0] }, { _017_, _036_ });
  assign _036_ = inp_pipe_rnd_mode_q[2:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6387.3-6393.10" *) 3'h3;
  assign _033_ = inp_pipe_rnd_mode_q[2:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6387.3-6393.10" *) 3'h2;
  assign _034_ = inp_pipe_rnd_mode_q[2:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6387.3-6393.10" *) 3'h1;
  assign _035_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:6387.3-6393.10" *) inp_pipe_rnd_mode_q[2:0];
  assign _001_ = info_q[0] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:6383.7-6383.17|FPNewBlackbox.preprocessed.v:6383.3-6384.87" *) inp_pipe_operands_q[31:0] : 32'd2143289344;
  assign any_operand_nan = | (* src = "FPNewBlackbox.preprocessed.v:6361.27-6361.50" *) { info_q[11], info_q[3] };
  assign signalling_nan = | (* src = "FPNewBlackbox.preprocessed.v:6362.26-6362.49" *) { info_q[10], info_q[2] };
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:6589.18-6589.55" *) { inp_pipe_valid_q[1], in_valid_i };
  assign _037_ = in_ready_o ? (* src = "FPNewBlackbox.preprocessed.v:6301.52-6301.117" *) in_valid_i : 1'hx;
  assign _000_ = flush_i ? (* src = "FPNewBlackbox.preprocessed.v:6301.34-6301.118" *) 1'h0 : _037_;
  assign sgnj_extension_bit = inp_pipe_op_mod_q[1] ? (* src = "FPNewBlackbox.preprocessed.v:6396.31-6396.116" *) sgnj_result[31] : 1'h1;
  assign _038_ = operand_a_smaller ? (* src = "FPNewBlackbox.preprocessed.v:6411.30-6411.71" *) inp_pipe_operands_q[31:0] : inp_pipe_operands_q[63:32];
  assign _039_ = operand_a_smaller ? (* src = "FPNewBlackbox.preprocessed.v:6412.30-6412.71" *) inp_pipe_operands_q[63:32] : inp_pipe_operands_q[31:0];
  assign _040_ = inp_pipe_operands_q[31] ? (* src = "FPNewBlackbox.preprocessed.v:6451.20-6451.96" *) 10'h002 : 10'h040;
  assign _041_ = inp_pipe_operands_q[31] ? (* src = "FPNewBlackbox.preprocessed.v:6453.20-6453.96" *) 10'h004 : 10'h020;
  assign _042_ = inp_pipe_operands_q[31] ? (* src = "FPNewBlackbox.preprocessed.v:6455.20-6455.96" *) 10'h008 : 10'h010;
  assign _043_ = inp_pipe_operands_q[31] ? (* src = "FPNewBlackbox.preprocessed.v:6457.20-6457.96" *) 10'h001 : 10'h080;
  assign _044_ = info_q[2] ? (* src = "FPNewBlackbox.preprocessed.v:6459.20-6459.63" *) 10'h100 : 10'h200;
  assign operand_a_smaller = _025_ ^ (* src = "FPNewBlackbox.preprocessed.v:6366.29-6366.145" *) _024_;
  assign _045_ = \sign_injections.sign_a  ^ (* src = "FPNewBlackbox.preprocessed.v:6390.59-6390.74" *) \sign_injections.sign_b ;
  assign _046_ = _029_ ^ (* src = "FPNewBlackbox.preprocessed.v:6431.20-6431.90" *) inp_pipe_op_mod_q[1];
  assign _047_ = _015_ ^ (* src = "FPNewBlackbox.preprocessed.v:6436.20-6436.91" *) inp_pipe_op_mod_q[1];
  assign _048_ = operands_equal ^ (* src = "FPNewBlackbox.preprocessed.v:6441.20-6441.68" *) inp_pipe_op_mod_q[1];
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6344.4-6348.3" *)
  \$paramod$85706ecd625e0110cf3fb9a4d880c019350a6cdb\fpnew_classifier  i_class_a (
    .info_o(info_q),
    .is_boxed_i(inp_pipe_is_boxed_q[1:0]),
    .operands_i(inp_pipe_operands_q[63:0])
  );
  assign aux_o = inp_pipe_aux_q[1];
  assign class_extension_bit = 1'h0;
  assign class_mask_d = class_mask_o;
  assign class_status = 5'h00;
  assign cmp_extension_bit = 1'h0;
  assign cmp_status[3:0] = 4'h0;
  assign extension_bit_d = extension_bit_o;
  assign info_a = info_q[7:0];
  assign info_b = info_q[15:8];
  assign inp_pipe_aux_q[0] = aux_i;
  assign inp_pipe_is_boxed_q[3:2] = is_boxed_i;
  assign inp_pipe_op_mod_q[0] = op_mod_i;
  assign inp_pipe_op_q[7:4] = op_i;
  assign inp_pipe_operands_q[127:64] = operands_i;
  assign inp_pipe_ready = { in_ready_o, out_ready_i };
  assign inp_pipe_rnd_mode_q[5:3] = rnd_mode_i;
  assign inp_pipe_tag_q[3:2] = tag_i;
  assign inp_pipe_valid_q[0] = in_valid_i;
  assign is_class_d = is_class_o;
  assign minmax_extension_bit = 1'h1;
  assign minmax_status = { signalling_nan, 4'h0 };
  assign operand_a = inp_pipe_operands_q[31:0];
  assign operand_b = inp_pipe_operands_q[63:32];
  assign out_pipe_aux_q = inp_pipe_aux_q[1];
  assign out_pipe_class_mask_q = class_mask_o;
  assign out_pipe_extension_bit_q = extension_bit_o;
  assign out_pipe_is_class_q = is_class_o;
  assign out_pipe_ready = out_ready_i;
  assign out_pipe_result_q = result_o;
  assign out_pipe_status_q = status_o;
  assign out_pipe_tag_q = inp_pipe_tag_q[1:0];
  assign out_pipe_valid_q = inp_pipe_valid_q[1];
  assign out_valid_o = inp_pipe_valid_q[1];
  assign result_d = result_o;
  assign sgnj_status = 5'h00;
  assign status_d = status_o;
  assign sv2v_tmp_07494 = result_o;
  assign sv2v_tmp_0B797 = op_i;
  assign sv2v_tmp_2CB8C = inp_pipe_valid_q[1];
  assign sv2v_tmp_488B7 = tag_i;
  assign sv2v_tmp_62109 = rnd_mode_i;
  assign sv2v_tmp_73AEA = in_valid_i;
  assign sv2v_tmp_7DF01 = is_class_o;
  assign sv2v_tmp_86D63 = is_boxed_i;
  assign sv2v_tmp_8D189 = aux_i;
  assign sv2v_tmp_8E9A9 = extension_bit_o;
  assign sv2v_tmp_93CB4 = inp_pipe_tag_q[1:0];
  assign sv2v_tmp_94259 = class_mask_o;
  assign sv2v_tmp_CCE43 = status_o;
  assign sv2v_tmp_D1067 = operands_i;
  assign sv2v_tmp_D1C37 = op_mod_i;
  assign sv2v_tmp_FA930 = inp_pipe_aux_q[1];
  assign tag_o = inp_pipe_tag_q[1:0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_fmt_slice_E368D_75924" *)
(* src = "FPNewBlackbox.preprocessed.v:6906.1-7136.10" *)
module \$paramod$7876e1c694652d920071b8cde538e81044bf8da5\fpnew_opgroup_fmt_slice_E368D_75924 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:6970.14-6970.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:6951.13-6951.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:6966.14-6966.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:6963.13-6963.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:7012.10-7012.18" *)
  wire \gen_num_lanes[0].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7015.43-7015.57" *)
  wire [95:0] \gen_num_lanes[0].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7016.27-7016.36" *)
  wire [31:0] \gen_num_lanes[0].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7017.16-7017.25" *)
  wire [4:0] \gen_num_lanes[0].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7014.10-7014.19" *)
  wire \gen_num_lanes[0].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7013.10-7013.19" *)
  wire \gen_num_lanes[0].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7021.25-7021.26" *)
  wire [31:0] \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7009.26-7009.38" *)
  wire [31:0] \gen_num_lanes[0].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7010.9-7010.19" *)
  wire \gen_num_lanes[0].local_sign ;
  (* src = "FPNewBlackbox.preprocessed.v:7012.10-7012.18" *)
  wire \gen_num_lanes[1].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7015.43-7015.57" *)
  wire [95:0] \gen_num_lanes[1].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7016.27-7016.36" *)
  wire [31:0] \gen_num_lanes[1].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7017.16-7017.25" *)
  wire [4:0] \gen_num_lanes[1].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7014.10-7014.19" *)
  wire \gen_num_lanes[1].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7013.10-7013.19" *)
  wire \gen_num_lanes[1].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7021.25-7021.26" *)
  wire [31:0] \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7009.26-7009.38" *)
  wire [31:0] \gen_num_lanes[1].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7010.9-7010.19" *)
  wire \gen_num_lanes[1].local_sign ;
  (* src = "FPNewBlackbox.preprocessed.v:6962.14-6962.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:6961.13-6961.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:6954.34-6954.44" *)
  input [2:0] is_boxed_i;
  wire [2:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:6996.25-6996.34" *)
  wire [1:0] lane_busy;
  (* src = "FPNewBlackbox.preprocessed.v:6993.32-6993.47" *)
  wire [19:0] lane_class_mask;
  (* src = "FPNewBlackbox.preprocessed.v:6992.25-6992.37" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_ext_bit;
  (* src = "FPNewBlackbox.preprocessed.v:6984.25-6984.38" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6997.25-6997.38" *)
  wire [1:0] lane_is_class;
  (* src = "FPNewBlackbox.preprocessed.v:6985.25-6985.39" *)
  wire [1:0] lane_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:6991.31-6991.42" *)
  wire [9:0] lane_status;
  (* src = "FPNewBlackbox.preprocessed.v:6994.63-6994.72" *)
  (* unused_bits = "2 3" *)
  wire [3:0] lane_tags;
  (* src = "FPNewBlackbox.preprocessed.v:6995.25-6995.39" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_vectorial;
  (* src = "FPNewBlackbox.preprocessed.v:6957.19-6957.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:6958.13-6958.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:6953.44-6953.54" *)
  input [191:0] operands_i;
  wire [191:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:6969.13-6969.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:6968.14-6968.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:7130.22-7130.23" *)
  wire [31:0] \output_processing.sv2v_autoblock_2.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7127.13-7127.24" *)
  wire [4:0] \output_processing.temp_status ;
  (* src = "FPNewBlackbox.preprocessed.v:6999.7-6999.22" *)
  wire result_is_class;
  (* src = "FPNewBlackbox.preprocessed.v:6998.7-6998.23" *)
  wire result_is_vector;
  (* src = "FPNewBlackbox.preprocessed.v:6964.28-6964.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:6955.19-6955.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:6952.13-6952.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:6988.21-6988.41" *)
  wire [63:0] slice_regular_result;
  (* src = "FPNewBlackbox.preprocessed.v:6987.38-6987.50" *)
  wire [63:0] slice_result;
  (* src = "FPNewBlackbox.preprocessed.v:6990.21-6990.43" *)
  wire [63:0] slice_vec_class_result;
  (* src = "FPNewBlackbox.preprocessed.v:6965.19-6965.27" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:6960.55-6960.60" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:6967.56-6967.61" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:6986.7-6986.19" *)
  wire vectorial_op;
  (* src = "FPNewBlackbox.preprocessed.v:6959.13-6959.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign \gen_num_lanes[1].active_lane.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7018.23-7018.64" *) vectorial_op_i;
  assign \gen_num_lanes[1].active_lane.out_ready  = out_ready_i & (* src = "FPNewBlackbox.preprocessed.v:7091.24-7091.70" *) result_is_vector;
  assign lane_out_valid[1] = \gen_num_lanes[1].active_lane.out_valid  & (* src = "FPNewBlackbox.preprocessed.v:7092.35-7092.79" *) result_is_vector;
  assign status_o = lane_status[4:0] | (* src = "FPNewBlackbox.preprocessed.v:7132.19-7132.54" *) lane_status[9:5];
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:7124.18-7124.28" *) lane_busy;
  assign \gen_num_lanes[0].local_result  = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7093.28-7093.91" *) \gen_num_lanes[0].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign \gen_num_lanes[1].local_result  = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7093.28-7093.91" *) \gen_num_lanes[1].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign lane_status[4:0] = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7094.40-7094.86" *) \gen_num_lanes[0].active_lane.op_status  : 5'h00;
  assign lane_status[9:5] = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7094.40-7094.86" *) \gen_num_lanes[1].active_lane.op_status  : 5'h00;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7032.8-7053.7" *)
  \$paramod$6d8b9e1a9ce9a9fa6c378e58eae11f821dd49832\fpnew_fma_FC83A_5615B  \gen_num_lanes[0].active_lane.lane_instance.i_fma  (
    .aux_i(vectorial_op_i),
    .aux_o(result_is_vector),
    .busy_o(lane_busy[0]),
    .clk_i(clk_i),
    .extension_bit_o(extension_bit_o),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .is_boxed_i(is_boxed_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i({ operands_i[159:128], operands_i[95:64], operands_i[31:0] }),
    .out_ready_i(out_ready_i),
    .out_valid_o(\gen_num_lanes[0].active_lane.out_valid ),
    .result_o(\gen_num_lanes[0].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(\gen_num_lanes[0].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(tag_o)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7032.8-7053.7" *)
  \$paramod$6d8b9e1a9ce9a9fa6c378e58eae11f821dd49832\fpnew_fma_FC83A_5615B  \gen_num_lanes[1].active_lane.lane_instance.i_fma  (
    .aux_i(vectorial_op_i),
    .aux_o(lane_vectorial[1]),
    .busy_o(lane_busy[1]),
    .clk_i(clk_i),
    .extension_bit_o(lane_ext_bit[1]),
    .flush_i(flush_i),
    .in_ready_o(lane_in_ready[1]),
    .in_valid_i(\gen_num_lanes[1].active_lane.in_valid ),
    .is_boxed_i(is_boxed_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i({ operands_i[191:160], operands_i[127:96], operands_i[63:32] }),
    .out_ready_i(\gen_num_lanes[1].active_lane.out_ready ),
    .out_valid_o(\gen_num_lanes[1].active_lane.out_valid ),
    .result_o(\gen_num_lanes[1].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(\gen_num_lanes[1].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(lane_tags[3:2])
  );
  assign \gen_num_lanes[0].active_lane.in_valid  = in_valid_i;
  assign \gen_num_lanes[0].active_lane.local_operands  = { operands_i[159:128], operands_i[95:64], operands_i[31:0] };
  assign \gen_num_lanes[0].active_lane.out_ready  = out_ready_i;
  assign \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd3;
  assign \gen_num_lanes[0].local_sign  = 1'h1;
  assign \gen_num_lanes[1].active_lane.local_operands  = { operands_i[191:160], operands_i[127:96], operands_i[63:32] };
  assign \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd3;
  assign \gen_num_lanes[1].local_sign  = 1'h1;
  assign lane_class_mask = 20'h00401;
  assign lane_ext_bit[0] = extension_bit_o;
  assign lane_in_ready[0] = in_ready_o;
  assign lane_is_class = 2'h0;
  assign lane_out_valid[0] = \gen_num_lanes[0].active_lane.out_valid ;
  assign lane_tags[1:0] = tag_o;
  assign lane_vectorial[0] = result_is_vector;
  assign out_valid_o = \gen_num_lanes[0].active_lane.out_valid ;
  assign \output_processing.sv2v_autoblock_2.i  = 32'd2;
  assign \output_processing.temp_status  = status_o;
  assign result_is_class = 1'h0;
  assign result_o = { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign slice_regular_result = { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign slice_result = { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign slice_vec_class_result = 64'h0000000000008181;
  assign vectorial_op = vectorial_op_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_classifier" *)
(* src = "FPNewBlackbox.preprocessed.v:4244.1-4313.10" *)
module \$paramod$85706ecd625e0110cf3fb9a4d880c019350a6cdb\fpnew_classifier (operands_i, is_boxed_i, info_o);
  (* src = "FPNewBlackbox.preprocessed.v:4296.29-4296.387" *)
  wire _00_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.394-4296.449" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.29-4296.387" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.394-4296.449" *)
  wire _03_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.28-4298.386" *)
  wire _04_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.28-4298.386" *)
  wire _05_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *)
  wire _06_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *)
  wire _07_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *)
  wire _08_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *)
  wire _09_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.16-4296.388" *)
  wire _10_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.16-4296.388" *)
  wire _11_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *)
  wire _12_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *)
  wire _13_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *)
  wire _14_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *)
  wire _15_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *)
  wire _16_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *)
  wire _17_;
  (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *)
  wire _18_;
  (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *)
  wire _19_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *)
  wire _20_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *)
  wire _21_;
  (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *)
  wire _22_;
  (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *)
  wire _23_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *)
  wire _24_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *)
  wire _25_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *)
  wire _26_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *)
  wire _27_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *)
  wire _28_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *)
  wire _29_;
  (* src = "FPNewBlackbox.preprocessed.v:4284.8-4284.16" *)
  wire \gen_num_values[0].is_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:4286.8-4286.14" *)
  wire \gen_num_values[0].is_inf ;
  (* src = "FPNewBlackbox.preprocessed.v:4287.8-4287.14" *)
  wire \gen_num_values[0].is_nan ;
  (* src = "FPNewBlackbox.preprocessed.v:4285.8-4285.17" *)
  wire \gen_num_values[0].is_normal ;
  (* src = "FPNewBlackbox.preprocessed.v:4289.8-4289.16" *)
  wire \gen_num_values[0].is_quiet ;
  (* src = "FPNewBlackbox.preprocessed.v:4288.8-4288.21" *)
  wire \gen_num_values[0].is_signalling ;
  (* src = "FPNewBlackbox.preprocessed.v:4291.8-4291.20" *)
  wire \gen_num_values[0].is_subnormal ;
  (* src = "FPNewBlackbox.preprocessed.v:4290.8-4290.15" *)
  wire \gen_num_values[0].is_zero ;
  (* src = "FPNewBlackbox.preprocessed.v:4283.44-4283.49" *)
  (* unused_bits = "31" *)
  wire [31:0] \gen_num_values[0].value ;
  (* src = "FPNewBlackbox.preprocessed.v:4284.8-4284.16" *)
  wire \gen_num_values[1].is_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:4286.8-4286.14" *)
  wire \gen_num_values[1].is_inf ;
  (* src = "FPNewBlackbox.preprocessed.v:4287.8-4287.14" *)
  wire \gen_num_values[1].is_nan ;
  (* src = "FPNewBlackbox.preprocessed.v:4285.8-4285.17" *)
  wire \gen_num_values[1].is_normal ;
  (* src = "FPNewBlackbox.preprocessed.v:4289.8-4289.16" *)
  wire \gen_num_values[1].is_quiet ;
  (* src = "FPNewBlackbox.preprocessed.v:4288.8-4288.21" *)
  wire \gen_num_values[1].is_signalling ;
  (* src = "FPNewBlackbox.preprocessed.v:4291.8-4291.20" *)
  wire \gen_num_values[1].is_subnormal ;
  (* src = "FPNewBlackbox.preprocessed.v:4290.8-4290.15" *)
  wire \gen_num_values[1].is_zero ;
  (* src = "FPNewBlackbox.preprocessed.v:4283.44-4283.49" *)
  (* unused_bits = "31" *)
  wire [31:0] \gen_num_values[1].value ;
  (* src = "FPNewBlackbox.preprocessed.v:4265.39-4265.45" *)
  output [15:0] info_o;
  wire [15:0] info_o;
  (* src = "FPNewBlackbox.preprocessed.v:4264.33-4264.43" *)
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:4263.43-4263.53" *)
  input [63:0] operands_i;
  wire [63:0] operands_i;
  assign _00_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.34-4297.392" *) operands_i[30:23];
  assign _02_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.34-4297.392" *) operands_i[62:55];
  assign _01_ = ! (* src = "FPNewBlackbox.preprocessed.v:4298.392-4298.447" *) operands_i[22:0];
  assign _03_ = ! (* src = "FPNewBlackbox.preprocessed.v:4298.392-4298.447" *) operands_i[54:32];
  assign _04_ = operands_i[30:23] == (* src = "FPNewBlackbox.preprocessed.v:4299.29-4299.387" *) 8'hff;
  assign _05_ = operands_i[62:55] == (* src = "FPNewBlackbox.preprocessed.v:4299.29-4299.387" *) 8'hff;
  assign _06_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *) operands_i[22];
  assign _07_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *) operands_i[54];
  assign _08_ = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *) _24_;
  assign \gen_num_values[0].is_normal  = _08_ && (* src = "FPNewBlackbox.preprocessed.v:4295.17-4295.755" *) _25_;
  assign _09_ = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *) _26_;
  assign \gen_num_values[1].is_normal  = _09_ && (* src = "FPNewBlackbox.preprocessed.v:4295.17-4295.755" *) _27_;
  assign \gen_num_values[0].is_zero  = _10_ && (* src = "FPNewBlackbox.preprocessed.v:4296.15-4296.450" *) _01_;
  assign \gen_num_values[1].is_zero  = _11_ && (* src = "FPNewBlackbox.preprocessed.v:4296.15-4296.450" *) _03_;
  assign _10_ = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4297.21-4297.393" *) _00_;
  assign \gen_num_values[0].is_subnormal  = _10_ && (* src = "FPNewBlackbox.preprocessed.v:4297.20-4297.406" *) _18_;
  assign _11_ = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4297.21-4297.393" *) _02_;
  assign \gen_num_values[1].is_subnormal  = _11_ && (* src = "FPNewBlackbox.preprocessed.v:4297.20-4297.406" *) _19_;
  assign _12_ = _04_ && (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *) _01_;
  assign \gen_num_values[0].is_inf  = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4298.14-4298.449" *) _12_;
  assign _13_ = _05_ && (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *) _03_;
  assign \gen_num_values[1].is_inf  = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4298.14-4298.449" *) _13_;
  assign _14_ = _04_ && (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *) _28_;
  assign _15_ = _05_ && (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *) _29_;
  assign _16_ = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *) \gen_num_values[0].is_nan ;
  assign \gen_num_values[0].is_signalling  = _16_ && (* src = "FPNewBlackbox.preprocessed.v:4300.21-4300.112" *) _06_;
  assign _17_ = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *) \gen_num_values[1].is_nan ;
  assign \gen_num_values[1].is_signalling  = _17_ && (* src = "FPNewBlackbox.preprocessed.v:4300.21-4300.112" *) _07_;
  assign \gen_num_values[0].is_quiet  = \gen_num_values[0].is_nan  && (* src = "FPNewBlackbox.preprocessed.v:4301.16-4301.40" *) _22_;
  assign \gen_num_values[1].is_quiet  = \gen_num_values[1].is_nan  && (* src = "FPNewBlackbox.preprocessed.v:4301.16-4301.40" *) _23_;
  assign _18_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *) \gen_num_values[0].is_zero ;
  assign _19_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *) \gen_num_values[1].is_zero ;
  assign _20_ = ! (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *) is_boxed_i[0];
  assign _21_ = ! (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *) is_boxed_i[1];
  assign _22_ = ! (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *) \gen_num_values[0].is_signalling ;
  assign _23_ = ! (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *) \gen_num_values[1].is_signalling ;
  assign \gen_num_values[0].is_nan  = _20_ || (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.450" *) _14_;
  assign \gen_num_values[1].is_nan  = _21_ || (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.450" *) _15_;
  assign _24_ = | (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *) operands_i[30:23];
  assign _25_ = operands_i[30:23] != (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *) 8'hff;
  assign _26_ = | (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *) operands_i[62:55];
  assign _27_ = operands_i[62:55] != (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *) 8'hff;
  assign _28_ = | (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *) operands_i[22:0];
  assign _29_ = | (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *) operands_i[54:32];
  assign \gen_num_values[0].is_boxed  = is_boxed_i[0];
  assign \gen_num_values[0].value  = operands_i[31:0];
  assign \gen_num_values[1].is_boxed  = is_boxed_i[1];
  assign \gen_num_values[1].value  = operands_i[63:32];
  assign info_o = { \gen_num_values[1].is_normal , \gen_num_values[1].is_subnormal , \gen_num_values[1].is_zero , \gen_num_values[1].is_inf , \gen_num_values[1].is_nan , \gen_num_values[1].is_signalling , \gen_num_values[1].is_quiet , is_boxed_i[1], \gen_num_values[0].is_normal , \gen_num_values[0].is_subnormal , \gen_num_values[0].is_zero , \gen_num_values[0].is_inf , \gen_num_values[0].is_nan , \gen_num_values[0].is_signalling , \gen_num_values[0].is_quiet , is_boxed_i[0] };
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_multifmt_slice_607F1_85D30" *)
(* src = "FPNewBlackbox.preprocessed.v:7137.1-7695.10" *)
module \$paramod$86b945c3a0ee812c04cca6fd8a26cb9de88b62d7\fpnew_opgroup_multifmt_slice_607F1_85D30 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _00_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _01_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.48-7211.69" *)
  wire [31:0] _02_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.100-7211.121" *)
  wire [31:0] _03_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.25-7211.126" *)
  wire [31:0] _04_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.49-7211.63" *)
  wire [31:0] _05_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [63:0] _06_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [63:0] _07_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _08_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _09_;
  (* src = "FPNewBlackbox.preprocessed.v:7466.493-7466.563" *)
  (* unused_bits = "32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63" *)
  wire [63:0] _10_;
  (* src = "FPNewBlackbox.preprocessed.v:7466.493-7466.563" *)
  (* unused_bits = "32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63" *)
  wire [63:0] _11_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _12_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _13_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.50-7211.57" *)
  (* unused_bits = "26 27 28 29 30 31" *)
  wire [31:0] _14_;
  (* src = "FPNewBlackbox.preprocessed.v:7301.24-7301.32" *)
  wire [4:0] aux_data;
  (* src = "FPNewBlackbox.preprocessed.v:7347.22-7347.25" *)
  wire [31:0] \boxed_2op.sv2v_autoblock_4.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7207.14-7207.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:7183.13-7183.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:7300.24-7300.31" *)
  wire [2:0] dst_fmt;
  (* src = "FPNewBlackbox.preprocessed.v:7193.19-7193.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7302.7-7302.21" *)
  wire dst_fmt_is_int;
  (* src = "FPNewBlackbox.preprocessed.v:7303.7-7303.17" *)
  wire dst_is_cpk;
  (* src = "FPNewBlackbox.preprocessed.v:7203.14-7203.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:7200.13-7200.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:7309.37-7309.53" *)
  wire [319:0] fmt_slice_result;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2749.$result ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$3932.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$3933.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$3934.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$3935.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3163.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3260.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3747.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3844.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7455.10-7455.18" *)
  wire \gen_num_lanes[0].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7458.45-7458.59" *)
  wire [63:0] \gen_num_lanes[0].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7459.29-7459.38" *)
  wire [31:0] \gen_num_lanes[0].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7460.16-7460.25" *)
  wire [4:0] \gen_num_lanes[0].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7457.10-7457.19" *)
  wire \gen_num_lanes[0].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7456.10-7456.19" *)
  wire \gen_num_lanes[0].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7464.18-7464.19" *)
  wire [31:0] \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_11.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7453.28-7453.40" *)
  wire [31:0] \gen_num_lanes[0].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7455.10-7455.18" *)
  wire \gen_num_lanes[1].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7458.45-7458.59" *)
  wire [63:0] \gen_num_lanes[1].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7459.29-7459.38" *)
  wire [31:0] \gen_num_lanes[1].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7460.16-7460.25" *)
  wire [4:0] \gen_num_lanes[1].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7457.10-7457.19" *)
  wire \gen_num_lanes[1].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7456.10-7456.19" *)
  wire \gen_num_lanes[1].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7464.18-7464.19" *)
  wire [31:0] \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_11.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7453.28-7453.40" *)
  wire [31:0] \gen_num_lanes[1].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7310.41-7310.58" *)
  wire [255:0] ifmt_slice_result;
  (* src = "FPNewBlackbox.preprocessed.v:7199.14-7199.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:7198.13-7198.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:7195.19-7195.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7343.12-7343.24" *)
  wire [4:0] is_boxed_1op;
  (* src = "FPNewBlackbox.preprocessed.v:7344.12-7344.24" *)
  wire [9:0] is_boxed_2op;
  (* src = "FPNewBlackbox.preprocessed.v:7186.50-7186.60" *)
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:7317.38-7317.46" *)
  (* unused_bits = "5 6 7 8 9" *)
  wire [9:0] lane_aux;
  (* src = "FPNewBlackbox.preprocessed.v:7318.25-7318.34" *)
  wire [1:0] lane_busy;
  (* src = "FPNewBlackbox.preprocessed.v:7315.25-7315.37" *)
  wire [1:0] lane_ext_bit;
  (* src = "FPNewBlackbox.preprocessed.v:7297.25-7297.38" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:7298.25-7298.39" *)
  wire [1:0] lane_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:7314.31-7314.42" *)
  wire [9:0] lane_status;
  (* src = "FPNewBlackbox.preprocessed.v:7316.63-7316.72" *)
  (* unused_bits = "2 3" *)
  wire [3:0] lane_tags;
  (* src = "FPNewBlackbox.preprocessed.v:7189.19-7189.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:7190.13-7190.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:7185.44-7185.54" *)
  input [127:0] operands_i;
  wire [127:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:7206.13-7206.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:7205.14-7205.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:7689.22-7689.23" *)
  wire [31:0] \output_processing.sv2v_autoblock_12.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7686.13-7686.24" *)
  wire [4:0] \output_processing.temp_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7320.24-7320.34" *)
  wire [2:0] result_fmt;
  (* src = "FPNewBlackbox.preprocessed.v:7321.7-7321.24" *)
  wire result_fmt_is_int;
  (* src = "FPNewBlackbox.preprocessed.v:7322.7-7322.20" *)
  wire result_is_cpk;
  (* src = "FPNewBlackbox.preprocessed.v:7319.7-7319.23" *)
  wire result_is_vector;
  (* src = "FPNewBlackbox.preprocessed.v:7201.28-7201.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:7323.13-7323.26" *)
  wire [1:0] result_vec_op;
  (* src = "FPNewBlackbox.preprocessed.v:7187.19-7187.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:7184.13-7184.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:7192.19-7192.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7202.19-7202.27" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:7197.55-7197.60" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:7204.56-7204.61" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:7305.13-7305.25" *)
  (* unused_bits = "1 2" *)
  wire [2:0] target_aux_d;
  (* src = "FPNewBlackbox.preprocessed.v:7299.7-7299.19" *)
  wire vectorial_op;
  (* src = "FPNewBlackbox.preprocessed.v:7196.13-7196.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign _00_ = _02_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _01_ = _03_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _02_ = { _05_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:7211.48-7211.69" *) 32'd63;
  assign _03_ = { _05_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:7211.100-7211.121" *) 32'd31;
  assign _04_ = _08_ + (* src = "FPNewBlackbox.preprocessed.v:7211.25-7211.126" *) _09_;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2749.$result  = _04_ + (* src = "FPNewBlackbox.preprocessed.v:7211.24-7211.131" *) 32'd1;
  assign \gen_num_lanes[1].active_lane.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7461.23-7461.64" *) vectorial_op_i;
  assign \gen_num_lanes[1].active_lane.out_ready  = out_ready_i & (* src = "FPNewBlackbox.preprocessed.v:7578.24-7578.70" *) lane_aux[3];
  assign lane_out_valid[1] = \gen_num_lanes[1].active_lane.out_valid  & (* src = "FPNewBlackbox.preprocessed.v:7579.35-7579.79" *) lane_aux[3];
  assign status_o = lane_status[4:0] | (* src = "FPNewBlackbox.preprocessed.v:7691.19-7691.54" *) lane_status[9:5];
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:7683.18-7683.28" *) lane_busy;
  wire [255:0] _40_ = 256'h0000000000000000000000000000000000000000000000000000000000000000;
  assign _06_ = _40_[$signed({ 23'h000000, lane_aux[2:0], 6'h00 }) +: 64];
  wire [319:0] _41_ = { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign _07_ = _41_[$signed({ 23'h000000, lane_aux[2:0], 6'h00 }) +: 64];
  wire [319:0] _42_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _09_ = _42_[$signed(_13_) +: 32];
  wire [319:0] _43_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _08_ = _43_[$signed(_12_) +: 32];
  assign { _10_[63:32], \gen_num_lanes[1].active_lane.local_operands [31:0] } = operands_i[63:0] >> (* src = "FPNewBlackbox.preprocessed.v:7466.493-7466.563" *) \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2749.$result ;
  assign { _11_[63:32], \gen_num_lanes[1].active_lane.local_operands [63:32] } = operands_i[127:64] >> (* src = "FPNewBlackbox.preprocessed.v:7466.493-7466.563" *) \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2749.$result ;
  assign _12_ = _00_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign _13_ = _01_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign { _14_[31:26], _05_[31:6] } = 32'd4 - (* src = "FPNewBlackbox.preprocessed.v:7211.102-7211.109" *) src_fmt_i;
  assign \gen_num_lanes[0].local_result  = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7580.28-7580.347" *) \gen_num_lanes[0].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign \gen_num_lanes[1].local_result  = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7580.28-7580.347" *) \gen_num_lanes[1].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign lane_status[4:0] = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7581.40-7581.86" *) \gen_num_lanes[0].active_lane.op_status  : 5'h00;
  assign lane_status[9:5] = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7581.40-7581.86" *) \gen_num_lanes[1].active_lane.op_status  : 5'h00;
  assign result_o = lane_aux[4] ? (* src = "FPNewBlackbox.preprocessed.v:7680.21-7680.131" *) _06_ : _07_;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7518.8-7539.7" *)
  \$paramod$f6673df41972a38bb7f5225f99782dfef82340fd\fpnew_divsqrt_multi_1A2E7_2C16F  \gen_num_lanes[0].active_lane.genblk1.lane_instance.i_fpnew_divsqrt_multi  (
    .aux_i({ 1'h0, vectorial_op_i, dst_fmt_i }),
    .aux_o(lane_aux[4:0]),
    .busy_o(lane_busy[0]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(extension_bit_o),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .is_boxed_i(is_boxed_i),
    .op_i(op_i),
    .operands_i({ operands_i[95:64], operands_i[31:0] }),
    .out_ready_i(out_ready_i),
    .out_valid_o(\gen_num_lanes[0].active_lane.out_valid ),
    .result_o(\gen_num_lanes[0].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(\gen_num_lanes[0].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(tag_o)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7518.8-7539.7" *)
  \$paramod$f6673df41972a38bb7f5225f99782dfef82340fd\fpnew_divsqrt_multi_1A2E7_2C16F  \gen_num_lanes[1].active_lane.genblk1.lane_instance.i_fpnew_divsqrt_multi  (
    .aux_i({ 1'h0, vectorial_op_i, dst_fmt_i }),
    .aux_o(lane_aux[9:5]),
    .busy_o(lane_busy[1]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(fmt_slice_result[287]),
    .flush_i(flush_i),
    .in_ready_o(lane_in_ready[1]),
    .in_valid_i(\gen_num_lanes[1].active_lane.in_valid ),
    .is_boxed_i(is_boxed_i),
    .op_i(op_i),
    .operands_i(\gen_num_lanes[1].active_lane.local_operands ),
    .out_ready_i(\gen_num_lanes[1].active_lane.out_ready ),
    .out_valid_o(\gen_num_lanes[1].active_lane.out_valid ),
    .result_o(\gen_num_lanes[1].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(\gen_num_lanes[1].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(lane_tags[3:2])
  );
  assign _05_[5:0] = 6'h00;
  assign _10_[31:0] = \gen_num_lanes[1].active_lane.local_operands [31:0];
  assign _11_[31:0] = \gen_num_lanes[1].active_lane.local_operands [63:32];
  assign _14_[25:0] = _05_[31:6];
  assign aux_data = { 1'h0, vectorial_op_i, dst_fmt_i };
  assign \boxed_2op.sv2v_autoblock_4.fmt  = 32'd5;
  assign dst_fmt = dst_fmt_i;
  assign dst_fmt_is_int = 1'h0;
  assign dst_is_cpk = 1'h0;
  assign { fmt_slice_result[319:288], fmt_slice_result[286:0] } = { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$3932.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$3933.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$3934.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$3935.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3163.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3260.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3747.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$3844.fmt  = 3'hx;
  assign \gen_num_lanes[0].active_lane.in_valid  = in_valid_i;
  assign \gen_num_lanes[0].active_lane.local_operands  = { operands_i[95:64], operands_i[31:0] };
  assign \gen_num_lanes[0].active_lane.out_ready  = out_ready_i;
  assign \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_11.i  = 32'd2;
  assign \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_11.i  = 32'd2;
  assign ifmt_slice_result = 256'h0000000000000000000000000000000000000000000000000000000000000000;
  assign is_boxed_1op = { is_boxed_i[8], is_boxed_i[6], is_boxed_i[4], is_boxed_i[2], is_boxed_i[0] };
  assign is_boxed_2op = is_boxed_i;
  assign lane_ext_bit = { fmt_slice_result[287], extension_bit_o };
  assign lane_in_ready[0] = in_ready_o;
  assign lane_out_valid[0] = \gen_num_lanes[0].active_lane.out_valid ;
  assign lane_tags[1:0] = tag_o;
  assign out_valid_o = \gen_num_lanes[0].active_lane.out_valid ;
  assign \output_processing.sv2v_autoblock_12.i  = 32'd2;
  assign \output_processing.temp_status  = status_o;
  assign result_fmt = lane_aux[2:0];
  assign result_fmt_is_int = lane_aux[4];
  assign result_is_cpk = 1'h0;
  assign result_is_vector = lane_aux[3];
  assign result_vec_op = 2'h0;
  assign target_aux_d[0] = 1'h0;
  assign vectorial_op = vectorial_op_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_block_A94B6_B7406" *)
(* src = "FPNewBlackbox.preprocessed.v:6591.1-6905.10" *)
module \$paramod$941c43e1517496035a4b3be22a3fe9eaf2ce3d11\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:6765.37-6765.53" *)
  wire _0_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire _1_;
  (* src = "FPNewBlackbox.preprocessed.v:6879.57-6879.71" *)
  wire [71:0] arbiter_output;
  (* src = "FPNewBlackbox.preprocessed.v:6662.14-6662.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:6638.13-6638.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:6648.19-6648.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6658.14-6658.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:6655.13-6655.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:6666.13-6666.21" *)
  wire [4:0] fmt_busy;
  (* src = "FPNewBlackbox.preprocessed.v:6663.13-6663.25" *)
  wire [4:0] fmt_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6665.13-6665.26" *)
  (* unused_bits = "1 2 3 4" *)
  wire [4:0] fmt_out_ready;
  (* src = "FPNewBlackbox.preprocessed.v:6664.13-6664.26" *)
  wire [4:0] fmt_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:6667.63-6667.74" *)
  wire [359:0] fmt_outputs;
  (* src = "FPNewBlackbox.preprocessed.v:6764.10-6764.18" *)
  wire \gen_parallel_slices[0].active_format.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:6654.14-6654.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:6653.13-6653.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:6650.19-6650.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6641.50-6641.60" *)
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:6644.19-6644.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:6645.13-6645.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:6640.44-6640.54" *)
  input [191:0] operands_i;
  wire [191:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:6661.13-6661.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:6660.14-6660.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:6656.28-6656.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:6642.19-6642.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:6639.13-6639.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:6647.19-6647.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:6657.20-6657.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:6652.47-6652.52" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:6659.48-6659.53" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:6651.13-6651.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6668.22-6668.58" *) _1_;
  assign \gen_parallel_slices[0].active_format.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:6765.23-6765.54" *) _0_;
  assign _0_ = ! (* src = "FPNewBlackbox.preprocessed.v:6765.37-6765.53" *) dst_fmt_i;
  wire [4:0] _6_ = { 4'h0, fmt_in_ready[0] };
  assign _1_ = _6_[dst_fmt_i +: 1];
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6774.7-6794.6" *)
  \$paramod$7876e1c694652d920071b8cde538e81044bf8da5\fpnew_opgroup_fmt_slice_E368D_75924  \gen_parallel_slices[0].active_format.i_fmt_slice  (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .extension_bit_o(fmt_outputs[2]),
    .flush_i(flush_i),
    .in_ready_o(fmt_in_ready[0]),
    .in_valid_i(\gen_parallel_slices[0].active_format.in_valid ),
    .is_boxed_i(is_boxed_i[2:0]),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(fmt_out_ready[0]),
    .out_valid_o(fmt_out_valid[0]),
    .result_o(fmt_outputs[71:8]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(fmt_outputs[7:3]),
    .tag_i(tag_i),
    .tag_o(fmt_outputs[1:0]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:6888.4-6899.3" *)
  \$paramod$2d98b2ed91e87ed1e332161bf5d593baf43453be\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i({ 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd, fmt_outputs[71:0] }),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i({ 4'h0, fmt_out_valid[0] }),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign extension_bit_o = arbiter_output[2];
  assign fmt_busy = { 4'h0, busy_o };
  assign fmt_in_ready[4:1] = 4'h0;
  assign fmt_out_valid[4:1] = 4'h0;
  assign fmt_outputs[359:72] = 288'hfffffffffffffffffdfffffffffffffffffdfffffffffffffffffdfffffffffffffffffd;
  assign result_o = arbiter_output[71:8];
  assign status_o = arbiter_output[7:3];
  assign tag_o = arbiter_output[1:0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_top_21317_11D0A" *)
(* src = "FPNewBlackbox.preprocessed.v:7737.1-7945.10" *)
module \$paramod$a5bdbc9899e3bac0f3e285776bfd67a1a2425e90\fpnew_top_21317_11D0A (clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _00_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _03_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _04_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _05_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _06_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _07_;
  (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *)
  wire _08_;
  (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *)
  wire _09_;
  (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *)
  wire _10_;
  (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *)
  wire _11_;
  (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *)
  wire _12_;
  wire [4:0] _13_;
  wire _14_;
  wire [1:0] _15_;
  wire _16_;
  wire [3:0] _17_;
  wire _18_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire _19_;
  (* src = "FPNewBlackbox.preprocessed.v:7920.49-7920.63" *)
  wire [70:0] arbiter_output;
  (* src = "FPNewBlackbox.preprocessed.v:7803.14-7803.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:7781.13-7781.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:7790.19-7790.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7797.13-7797.20" *)
  input flush_i;
  wire flush_i;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7818.19-7818.21" *)
  wire [3:0] \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$198.op ;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [1:0] \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$41.$result ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7818.19-7818.21" *)
  wire [3:0] \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$214.op ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7818.19-7818.21" *)
  wire [3:0] \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$230.op ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7818.19-7818.21" *)
  wire [3:0] \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$246.op ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7818.19-7818.21" *)
  wire [3:0] \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$262.op ;
  (* src = "FPNewBlackbox.preprocessed.v:7874.9-7874.17" *)
  wire \gen_operation_groups[0].in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7875.40-7875.51" *)
  wire [14:0] \gen_operation_groups[0].input_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:7879.17-7879.20" *)
  wire [31:0] \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7874.9-7874.17" *)
  wire \gen_operation_groups[1].in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7875.40-7875.51" *)
  wire [9:0] \gen_operation_groups[1].input_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:7879.17-7879.20" *)
  wire [31:0] \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7874.9-7874.17" *)
  wire \gen_operation_groups[2].in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7875.40-7875.51" *)
  wire [9:0] \gen_operation_groups[2].input_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:7879.17-7879.20" *)
  wire [31:0] \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7874.9-7874.17" *)
  wire \gen_operation_groups[3].in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7875.40-7875.51" *)
  wire [14:0] \gen_operation_groups[3].input_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:7879.17-7879.20" *)
  wire [31:0] \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7796.14-7796.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:7795.13-7795.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:7792.19-7792.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7812.44-7812.52" *)
  wire [14:0] is_boxed;
  (* src = "FPNewBlackbox.preprocessed.v:7786.19-7786.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:7787.13-7787.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:7783.44-7783.54" *)
  input [191:0] operands_i;
  wire [191:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:7810.13-7810.23" *)
  wire [3:0] opgrp_busy;
  (* src = "FPNewBlackbox.preprocessed.v:7809.13-7809.22" *)
  (* unused_bits = "0 1 2 3" *)
  wire [3:0] opgrp_ext;
  (* src = "FPNewBlackbox.preprocessed.v:7806.13-7806.27" *)
  wire [3:0] opgrp_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:7808.13-7808.28" *)
  wire [3:0] opgrp_out_ready;
  (* src = "FPNewBlackbox.preprocessed.v:7807.13-7807.28" *)
  wire [3:0] opgrp_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:7811.55-7811.68" *)
  wire [283:0] opgrp_outputs;
  (* src = "FPNewBlackbox.preprocessed.v:7802.13-7802.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:7801.14-7801.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:7798.28-7798.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:7784.19-7784.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:7782.13-7782.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:7789.19-7789.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7799.20-7799.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:7794.39-7794.44" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:7800.40-7800.45" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:7793.13-7793.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7827.22-7827.78" *) _19_;
  assign \gen_operation_groups[0].in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7876.22-7876.86" *) _09_;
  assign \gen_operation_groups[1].in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7876.22-7876.86" *) _10_;
  assign \gen_operation_groups[2].in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7876.22-7876.86" *) _11_;
  assign \gen_operation_groups[3].in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7876.22-7876.86" *) _12_;
  assign _00_ = operands_i[63:32] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 32'd4294967295;
  assign _01_ = operands_i[127:96] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 32'd4294967295;
  assign _02_ = operands_i[191:160] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 32'd4294967295;
  assign _06_ = operands_i[63:8] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 56'hffffffffffffff;
  assign _07_ = operands_i[127:72] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 56'hffffffffffffff;
  assign _08_ = operands_i[191:136] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 56'hffffffffffffff;
  assign _03_ = operands_i[63:16] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 48'hffffffffffff;
  assign _04_ = operands_i[127:80] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 48'hffffffffffff;
  assign _05_ = operands_i[191:144] == (* src = "FPNewBlackbox.preprocessed.v:7848.70-7848.438" *) 48'hffffffffffff;
  assign _09_ = ! (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *) \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$41.$result ;
  assign _10_ = \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$41.$result  == (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *) 2'h1;
  assign _11_ = \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$41.$result  == (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *) 2'h2;
  assign _12_ = \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$41.$result  == (* src = "FPNewBlackbox.preprocessed.v:7876.36-7876.85" *) 2'h3;
  assign _14_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) _13_;
  assign _18_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) _17_;
  assign _16_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) _15_;
  function [1:0] _41_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _41_ = b[1:0];
      3'b?1?:
        _41_ = b[3:2];
      3'b1??:
        _41_ = b[5:4];
      default:
        _41_ = a;
    endcase
  endfunction
  assign \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$41.$result  = _41_(2'h2, 6'h07, { _18_, _16_, _14_ });
  assign _13_[0] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'ha;
  assign _13_[1] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'hb;
  assign _13_[2] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'hc;
  assign _13_[3] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'hd;
  assign _13_[4] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'he;
  assign _15_[0] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'h4;
  assign _15_[1] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'h5;
  assign _17_[0] = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) op_i;
  assign _17_[1] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'h1;
  assign _17_[2] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'h2;
  assign _17_[3] = op_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7819.3-7825.10" *) 4'h3;
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:7944.18-7944.29" *) opgrp_busy;
  wire [3:0] _64_ = opgrp_in_ready;
  assign _19_ = _64_[\fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$41.$result  +: 1];
  assign \gen_operation_groups[0].input_boxed [0] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _00_;
  assign \gen_operation_groups[0].input_boxed [1] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _01_;
  assign \gen_operation_groups[0].input_boxed [2] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _02_;
  assign \gen_operation_groups[0].input_boxed [9] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _06_;
  assign \gen_operation_groups[0].input_boxed [10] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _07_;
  assign \gen_operation_groups[0].input_boxed [11] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _08_;
  assign \gen_operation_groups[0].input_boxed [12] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _03_;
  assign \gen_operation_groups[0].input_boxed [13] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _04_;
  assign \gen_operation_groups[0].input_boxed [14] = vectorial_op_i ? (* src = "FPNewBlackbox.preprocessed.v:7848.52-7848.445" *) 1'h1 : _05_;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7894.6-7917.5" *)
  \$paramod$941c43e1517496035a4b3be22a3fe9eaf2ce3d11\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[0].i_opgroup_block  (
    .busy_o(opgrp_busy[0]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[0]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[0]),
    .in_valid_i(\gen_operation_groups[0].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[0]),
    .out_valid_o(opgrp_out_valid[0]),
    .result_o(opgrp_outputs[70:7]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[6:2]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[1:0]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7894.6-7917.5" *)
  \$paramod$4449765975abbec500ab1b847f7eccfced30623d\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[1].i_opgroup_block  (
    .busy_o(opgrp_busy[1]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[1]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[1]),
    .in_valid_i(\gen_operation_groups[1].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[127:0]),
    .out_ready_i(opgrp_out_ready[1]),
    .out_valid_o(opgrp_out_valid[1]),
    .result_o(opgrp_outputs[141:78]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[77:73]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[72:71]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7894.6-7917.5" *)
  \$paramod$011e4d7ee08c34f246a38322dc9967d23ecc8081\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[2].i_opgroup_block  (
    .busy_o(opgrp_busy[2]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[2]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[2]),
    .in_valid_i(\gen_operation_groups[2].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[127:0]),
    .out_ready_i(opgrp_out_ready[2]),
    .out_valid_o(opgrp_out_valid[2]),
    .result_o(opgrp_outputs[212:149]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[148:144]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[143:142]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7894.6-7917.5" *)
  \$paramod$137875584cfbb9157576550a1c10e93971484e05\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[3].i_opgroup_block  (
    .busy_o(opgrp_busy[3]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[3]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[3]),
    .in_valid_i(\gen_operation_groups[3].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[3]),
    .out_valid_o(opgrp_out_valid[3]),
    .result_o(opgrp_outputs[283:220]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[219:215]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[214:213]),
    .vectorial_op_i(vectorial_op_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7929.4-7940.3" *)
  \$paramod$c2409bf6d6fec6245b3dea150ba71180ba9a6bc5\rr_arb_tree_DE4E6_76EE6  i_arbiter (
    .clk_i(clk_i),
    .data_i(opgrp_outputs),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(opgrp_out_ready),
    .req_i(opgrp_out_valid),
    .req_o(out_valid_o),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7827$198.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$214.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$230.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$246.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$FPNewBlackbox.preprocessed.v:7876$262.op  = 4'hx;
  assign \gen_operation_groups[0].input_boxed [8:3] = { \gen_operation_groups[0].input_boxed [14:12], 3'h7 };
  assign \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[1].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] };
  assign \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[2].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] };
  assign \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[3].input_boxed  = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] };
  assign \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign is_boxed = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] };
  assign result_o = arbiter_output[70:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[1:0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_classifier" *)
(* src = "FPNewBlackbox.preprocessed.v:4244.1-4313.10" *)
module \$paramod$aa198a329ffc044f9fef695fda54759a05728371\fpnew_classifier (operands_i, is_boxed_i, info_o);
  (* src = "FPNewBlackbox.preprocessed.v:4296.29-4296.387" *)
  wire _000_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.394-4296.449" *)
  wire _001_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.29-4296.387" *)
  wire _002_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.394-4296.449" *)
  wire _003_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.29-4296.387" *)
  wire _004_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.394-4296.449" *)
  wire _005_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.28-4298.386" *)
  wire _006_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.28-4298.386" *)
  wire _007_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.28-4298.386" *)
  wire _008_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *)
  wire _009_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *)
  wire _010_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *)
  wire _011_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *)
  wire _012_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *)
  wire _013_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *)
  wire _014_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.16-4296.388" *)
  wire _015_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.16-4296.388" *)
  wire _016_;
  (* src = "FPNewBlackbox.preprocessed.v:4296.16-4296.388" *)
  wire _017_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *)
  wire _018_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *)
  wire _019_;
  (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *)
  wire _020_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *)
  wire _021_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *)
  wire _022_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *)
  wire _023_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *)
  wire _024_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *)
  wire _025_;
  (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *)
  wire _026_;
  (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *)
  wire _027_;
  (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *)
  wire _028_;
  (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *)
  wire _029_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *)
  wire _030_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *)
  wire _031_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *)
  wire _032_;
  (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *)
  wire _033_;
  (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *)
  wire _034_;
  (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *)
  wire _035_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *)
  wire _036_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *)
  wire _037_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *)
  wire _038_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *)
  wire _039_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *)
  wire _040_;
  (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *)
  wire _041_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *)
  wire _042_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *)
  wire _043_;
  (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *)
  wire _044_;
  (* src = "FPNewBlackbox.preprocessed.v:4284.8-4284.16" *)
  wire \gen_num_values[0].is_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:4286.8-4286.14" *)
  wire \gen_num_values[0].is_inf ;
  (* src = "FPNewBlackbox.preprocessed.v:4287.8-4287.14" *)
  wire \gen_num_values[0].is_nan ;
  (* src = "FPNewBlackbox.preprocessed.v:4285.8-4285.17" *)
  wire \gen_num_values[0].is_normal ;
  (* src = "FPNewBlackbox.preprocessed.v:4289.8-4289.16" *)
  wire \gen_num_values[0].is_quiet ;
  (* src = "FPNewBlackbox.preprocessed.v:4288.8-4288.21" *)
  wire \gen_num_values[0].is_signalling ;
  (* src = "FPNewBlackbox.preprocessed.v:4291.8-4291.20" *)
  wire \gen_num_values[0].is_subnormal ;
  (* src = "FPNewBlackbox.preprocessed.v:4290.8-4290.15" *)
  wire \gen_num_values[0].is_zero ;
  (* src = "FPNewBlackbox.preprocessed.v:4283.44-4283.49" *)
  (* unused_bits = "31" *)
  wire [31:0] \gen_num_values[0].value ;
  (* src = "FPNewBlackbox.preprocessed.v:4284.8-4284.16" *)
  wire \gen_num_values[1].is_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:4286.8-4286.14" *)
  wire \gen_num_values[1].is_inf ;
  (* src = "FPNewBlackbox.preprocessed.v:4287.8-4287.14" *)
  wire \gen_num_values[1].is_nan ;
  (* src = "FPNewBlackbox.preprocessed.v:4285.8-4285.17" *)
  wire \gen_num_values[1].is_normal ;
  (* src = "FPNewBlackbox.preprocessed.v:4289.8-4289.16" *)
  wire \gen_num_values[1].is_quiet ;
  (* src = "FPNewBlackbox.preprocessed.v:4288.8-4288.21" *)
  wire \gen_num_values[1].is_signalling ;
  (* src = "FPNewBlackbox.preprocessed.v:4291.8-4291.20" *)
  wire \gen_num_values[1].is_subnormal ;
  (* src = "FPNewBlackbox.preprocessed.v:4290.8-4290.15" *)
  wire \gen_num_values[1].is_zero ;
  (* src = "FPNewBlackbox.preprocessed.v:4283.44-4283.49" *)
  (* unused_bits = "31" *)
  wire [31:0] \gen_num_values[1].value ;
  (* src = "FPNewBlackbox.preprocessed.v:4284.8-4284.16" *)
  wire \gen_num_values[2].is_boxed ;
  (* src = "FPNewBlackbox.preprocessed.v:4286.8-4286.14" *)
  wire \gen_num_values[2].is_inf ;
  (* src = "FPNewBlackbox.preprocessed.v:4287.8-4287.14" *)
  wire \gen_num_values[2].is_nan ;
  (* src = "FPNewBlackbox.preprocessed.v:4285.8-4285.17" *)
  wire \gen_num_values[2].is_normal ;
  (* src = "FPNewBlackbox.preprocessed.v:4289.8-4289.16" *)
  wire \gen_num_values[2].is_quiet ;
  (* src = "FPNewBlackbox.preprocessed.v:4288.8-4288.21" *)
  wire \gen_num_values[2].is_signalling ;
  (* src = "FPNewBlackbox.preprocessed.v:4291.8-4291.20" *)
  wire \gen_num_values[2].is_subnormal ;
  (* src = "FPNewBlackbox.preprocessed.v:4290.8-4290.15" *)
  wire \gen_num_values[2].is_zero ;
  (* src = "FPNewBlackbox.preprocessed.v:4283.44-4283.49" *)
  (* unused_bits = "31" *)
  wire [31:0] \gen_num_values[2].value ;
  (* src = "FPNewBlackbox.preprocessed.v:4265.39-4265.45" *)
  output [23:0] info_o;
  wire [23:0] info_o;
  (* src = "FPNewBlackbox.preprocessed.v:4264.33-4264.43" *)
  input [2:0] is_boxed_i;
  wire [2:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:4263.43-4263.53" *)
  input [95:0] operands_i;
  wire [95:0] operands_i;
  assign _000_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.34-4297.392" *) operands_i[30:23];
  assign _002_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.34-4297.392" *) operands_i[62:55];
  assign _004_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.34-4297.392" *) operands_i[94:87];
  assign _001_ = ! (* src = "FPNewBlackbox.preprocessed.v:4298.392-4298.447" *) operands_i[22:0];
  assign _003_ = ! (* src = "FPNewBlackbox.preprocessed.v:4298.392-4298.447" *) operands_i[54:32];
  assign _005_ = ! (* src = "FPNewBlackbox.preprocessed.v:4298.392-4298.447" *) operands_i[86:64];
  assign _006_ = operands_i[30:23] == (* src = "FPNewBlackbox.preprocessed.v:4299.29-4299.387" *) 8'hff;
  assign _007_ = operands_i[62:55] == (* src = "FPNewBlackbox.preprocessed.v:4299.29-4299.387" *) 8'hff;
  assign _008_ = operands_i[94:87] == (* src = "FPNewBlackbox.preprocessed.v:4299.29-4299.387" *) 8'hff;
  assign _009_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *) operands_i[22];
  assign _010_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *) operands_i[54];
  assign _011_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4300.46-4300.111" *) operands_i[86];
  assign _012_ = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *) _036_;
  assign \gen_num_values[0].is_normal  = _012_ && (* src = "FPNewBlackbox.preprocessed.v:4295.17-4295.755" *) _037_;
  assign _013_ = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *) _038_;
  assign \gen_num_values[1].is_normal  = _013_ && (* src = "FPNewBlackbox.preprocessed.v:4295.17-4295.755" *) _039_;
  assign _014_ = is_boxed_i[2] && (* src = "FPNewBlackbox.preprocessed.v:4295.18-4295.390" *) _040_;
  assign \gen_num_values[2].is_normal  = _014_ && (* src = "FPNewBlackbox.preprocessed.v:4295.17-4295.755" *) _041_;
  assign \gen_num_values[0].is_zero  = _015_ && (* src = "FPNewBlackbox.preprocessed.v:4296.15-4296.450" *) _001_;
  assign \gen_num_values[1].is_zero  = _016_ && (* src = "FPNewBlackbox.preprocessed.v:4296.15-4296.450" *) _003_;
  assign \gen_num_values[2].is_zero  = _017_ && (* src = "FPNewBlackbox.preprocessed.v:4296.15-4296.450" *) _005_;
  assign _015_ = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4297.21-4297.393" *) _000_;
  assign \gen_num_values[0].is_subnormal  = _015_ && (* src = "FPNewBlackbox.preprocessed.v:4297.20-4297.406" *) _027_;
  assign _016_ = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4297.21-4297.393" *) _002_;
  assign \gen_num_values[1].is_subnormal  = _016_ && (* src = "FPNewBlackbox.preprocessed.v:4297.20-4297.406" *) _028_;
  assign _017_ = is_boxed_i[2] && (* src = "FPNewBlackbox.preprocessed.v:4297.21-4297.393" *) _004_;
  assign \gen_num_values[2].is_subnormal  = _017_ && (* src = "FPNewBlackbox.preprocessed.v:4297.20-4297.406" *) _029_;
  assign _018_ = _006_ && (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *) _001_;
  assign \gen_num_values[0].is_inf  = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4298.14-4298.449" *) _018_;
  assign _019_ = _007_ && (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *) _003_;
  assign \gen_num_values[1].is_inf  = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4298.14-4298.449" *) _019_;
  assign _020_ = _008_ && (* src = "FPNewBlackbox.preprocessed.v:4298.27-4298.448" *) _005_;
  assign \gen_num_values[2].is_inf  = is_boxed_i[2] && (* src = "FPNewBlackbox.preprocessed.v:4298.14-4298.449" *) _020_;
  assign _021_ = _006_ && (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *) _042_;
  assign _022_ = _007_ && (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *) _043_;
  assign _023_ = _008_ && (* src = "FPNewBlackbox.preprocessed.v:4299.28-4299.449" *) _044_;
  assign _024_ = is_boxed_i[0] && (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *) \gen_num_values[0].is_nan ;
  assign \gen_num_values[0].is_signalling  = _024_ && (* src = "FPNewBlackbox.preprocessed.v:4300.21-4300.112" *) _009_;
  assign _025_ = is_boxed_i[1] && (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *) \gen_num_values[1].is_nan ;
  assign \gen_num_values[1].is_signalling  = _025_ && (* src = "FPNewBlackbox.preprocessed.v:4300.21-4300.112" *) _010_;
  assign _026_ = is_boxed_i[2] && (* src = "FPNewBlackbox.preprocessed.v:4300.22-4300.40" *) \gen_num_values[2].is_nan ;
  assign \gen_num_values[2].is_signalling  = _026_ && (* src = "FPNewBlackbox.preprocessed.v:4300.21-4300.112" *) _011_;
  assign \gen_num_values[0].is_quiet  = \gen_num_values[0].is_nan  && (* src = "FPNewBlackbox.preprocessed.v:4301.16-4301.40" *) _033_;
  assign \gen_num_values[1].is_quiet  = \gen_num_values[1].is_nan  && (* src = "FPNewBlackbox.preprocessed.v:4301.16-4301.40" *) _034_;
  assign \gen_num_values[2].is_quiet  = \gen_num_values[2].is_nan  && (* src = "FPNewBlackbox.preprocessed.v:4301.16-4301.40" *) _035_;
  assign _027_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *) \gen_num_values[0].is_zero ;
  assign _028_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *) \gen_num_values[1].is_zero ;
  assign _029_ = ! (* src = "FPNewBlackbox.preprocessed.v:4297.398-4297.406" *) \gen_num_values[2].is_zero ;
  assign _030_ = ! (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *) is_boxed_i[0];
  assign _031_ = ! (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *) is_boxed_i[1];
  assign _032_ = ! (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.23" *) is_boxed_i[2];
  assign _033_ = ! (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *) \gen_num_values[0].is_signalling ;
  assign _034_ = ! (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *) \gen_num_values[1].is_signalling ;
  assign _035_ = ! (* src = "FPNewBlackbox.preprocessed.v:4301.26-4301.40" *) \gen_num_values[2].is_signalling ;
  assign \gen_num_values[0].is_nan  = _030_ || (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.450" *) _021_;
  assign \gen_num_values[1].is_nan  = _031_ || (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.450" *) _022_;
  assign \gen_num_values[2].is_nan  = _032_ || (* src = "FPNewBlackbox.preprocessed.v:4299.14-4299.450" *) _023_;
  assign _036_ = | (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *) operands_i[30:23];
  assign _037_ = operands_i[30:23] != (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *) 8'hff;
  assign _038_ = | (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *) operands_i[62:55];
  assign _039_ = operands_i[62:55] != (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *) 8'hff;
  assign _040_ = | (* src = "FPNewBlackbox.preprocessed.v:4295.31-4295.389" *) operands_i[94:87];
  assign _041_ = operands_i[94:87] != (* src = "FPNewBlackbox.preprocessed.v:4295.396-4295.754" *) 8'hff;
  assign _042_ = | (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *) operands_i[22:0];
  assign _043_ = | (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *) operands_i[54:32];
  assign _044_ = | (* src = "FPNewBlackbox.preprocessed.v:4299.393-4299.448" *) operands_i[86:64];
  assign \gen_num_values[0].is_boxed  = is_boxed_i[0];
  assign \gen_num_values[0].value  = operands_i[31:0];
  assign \gen_num_values[1].is_boxed  = is_boxed_i[1];
  assign \gen_num_values[1].value  = operands_i[63:32];
  assign \gen_num_values[2].is_boxed  = is_boxed_i[2];
  assign \gen_num_values[2].value  = operands_i[95:64];
  assign info_o = { \gen_num_values[2].is_normal , \gen_num_values[2].is_subnormal , \gen_num_values[2].is_zero , \gen_num_values[2].is_inf , \gen_num_values[2].is_nan , \gen_num_values[2].is_signalling , \gen_num_values[2].is_quiet , is_boxed_i[2], \gen_num_values[1].is_normal , \gen_num_values[1].is_subnormal , \gen_num_values[1].is_zero , \gen_num_values[1].is_inf , \gen_num_values[1].is_nan , \gen_num_values[1].is_signalling , \gen_num_values[1].is_quiet , is_boxed_i[1], \gen_num_values[0].is_normal , \gen_num_values[0].is_subnormal , \gen_num_values[0].is_zero , \gen_num_values[0].is_inf , \gen_num_values[0].is_nan , \gen_num_values[0].is_signalling , \gen_num_values[0].is_quiet , is_boxed_i[0] };
endmodule

(* dynports =  1  *)
(* hdlname = "\\rr_arb_tree_DE4E6_76EE6" *)
(* src = "FPNewBlackbox.preprocessed.v:179.1-356.10" *)
module \$paramod$c2409bf6d6fec6245b3dea150ba71180ba9a6bc5\rr_arb_tree_DE4E6_76EE6 (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  (* src = "FPNewBlackbox.preprocessed.v:306.5-313.8" *)
  wire [1:0] _00_;
  (* src = "FPNewBlackbox.preprocessed.v:326.38-326.88" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:326.38-326.88" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:346.40-346.91" *)
  wire _03_;
  wire _04_;
  (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *)
  wire _05_;
  (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *)
  wire _06_;
  (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *)
  wire _07_;
  (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *)
  wire _08_;
  (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *)
  wire _09_;
  (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *)
  wire _10_;
  (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *)
  wire _11_;
  (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *)
  wire _12_;
  (* src = "FPNewBlackbox.preprocessed.v:301.21-301.35" *)
  wire _13_;
  (* src = "FPNewBlackbox.preprocessed.v:326.21-326.34" *)
  wire _14_;
  (* src = "FPNewBlackbox.preprocessed.v:326.21-326.34" *)
  wire _15_;
  (* src = "FPNewBlackbox.preprocessed.v:329.79-329.83" *)
  wire _16_;
  (* src = "FPNewBlackbox.preprocessed.v:329.79-329.83" *)
  wire _17_;
  (* src = "FPNewBlackbox.preprocessed.v:346.20-346.36" *)
  wire _18_;
  (* src = "FPNewBlackbox.preprocessed.v:349.50-349.54" *)
  wire _19_;
  (* src = "FPNewBlackbox.preprocessed.v:201.13-201.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:207.83-207.89" *)
  input [283:0] data_i;
  wire [283:0] data_i;
  (* src = "FPNewBlackbox.preprocessed.v:210.74-210.80" *)
  output [70:0] data_o;
  wire [70:0] data_o;
  (* src = "FPNewBlackbox.preprocessed.v:203.13-203.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:230.407-230.417" *)
  wire [212:0] \gen_arbiter.data_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:276.28-276.37" *)
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  (* src = "FPNewBlackbox.preprocessed.v:274.25-274.35" *)
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  (* src = "FPNewBlackbox.preprocessed.v:277.28-277.36" *)
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  (* src = "FPNewBlackbox.preprocessed.v:278.11-278.22" *)
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  (* src = "FPNewBlackbox.preprocessed.v:275.28-275.37" *)
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  (* src = "FPNewBlackbox.preprocessed.v:273.25-273.35" *)
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  (* src = "FPNewBlackbox.preprocessed.v:245.27-245.31" *)
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  (* src = "FPNewBlackbox.preprocessed.v:320.11-320.14" *)
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:320.11-320.14" *)
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:320.11-320.14" *)
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:231.34-231.43" *)
  wire [2:0] \gen_arbiter.gnt_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:229.235-229.246" *)
  wire [5:0] \gen_arbiter.index_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:234.23-234.28" *)
  wire [3:0] \gen_arbiter.req_d ;
  (* src = "FPNewBlackbox.preprocessed.v:232.34-232.43" *)
  wire [2:0] \gen_arbiter.req_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:233.25-233.29" *)
  reg [1:0] \gen_arbiter.rr_q ;
  (* src = "FPNewBlackbox.preprocessed.v:209.13-209.18" *)
  input gnt_i;
  wire gnt_i;
  (* src = "FPNewBlackbox.preprocessed.v:206.28-206.33" *)
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  (* src = "FPNewBlackbox.preprocessed.v:211.31-211.36" *)
  output [1:0] idx_o;
  wire [1:0] idx_o;
  (* src = "FPNewBlackbox.preprocessed.v:205.27-205.32" *)
  input [3:0] req_i;
  wire [3:0] req_i;
  (* src = "FPNewBlackbox.preprocessed.v:208.14-208.19" *)
  output req_o;
  wire req_o;
  (* src = "FPNewBlackbox.preprocessed.v:204.30-204.34" *)
  input [1:0] rr_i;
  wire [1:0] rr_i;
  (* src = "FPNewBlackbox.preprocessed.v:202.13-202.19" *)
  input rst_ni;
  wire rst_ni;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:213.30-213.33" *)
  wire [1:0] \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:327$496.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:213.30-213.33" *)
  wire [1:0] \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:327$497.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:213.30-213.33" *)
  wire [1:0] \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:347$494.inp ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:213.30-213.33" *)
  wire [1:0] \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:347$495.inp ;
  assign _01_ = req_i[1] & (* src = "FPNewBlackbox.preprocessed.v:326.38-326.88" *) \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & (* src = "FPNewBlackbox.preprocessed.v:326.38-326.88" *) \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [1] & (* src = "FPNewBlackbox.preprocessed.v:329.30-329.83" *) _16_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [2] & (* src = "FPNewBlackbox.preprocessed.v:329.30-329.83" *) _17_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [1] & (* src = "FPNewBlackbox.preprocessed.v:330.36-330.94" *) \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [2] & (* src = "FPNewBlackbox.preprocessed.v:330.36-330.94" *) \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _03_ = \gen_arbiter.req_nodes [2] & (* src = "FPNewBlackbox.preprocessed.v:346.40-346.91" *) \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & (* src = "FPNewBlackbox.preprocessed.v:349.32-349.54" *) _19_;
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & (* src = "FPNewBlackbox.preprocessed.v:350.36-350.57" *) \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  (* src = "FPNewBlackbox.preprocessed.v:306.5-313.8" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 2'h0;
    else if (_04_) \gen_arbiter.rr_q  <= _00_;
  assign _04_ = | { _13_, flush_i };
  assign _05_ = 32'd0 > (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *) \gen_arbiter.rr_q ;
  assign _06_ = 32'd1 > (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *) \gen_arbiter.rr_q ;
  assign _07_ = 32'd2 > (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *) \gen_arbiter.rr_q ;
  assign _08_ = 32'd3 > (* src = "FPNewBlackbox.preprocessed.v:282.31-282.39" *) \gen_arbiter.rr_q ;
  assign _09_ = 32'd0 <= (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *) \gen_arbiter.rr_q ;
  assign _10_ = 32'd1 <= (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *) \gen_arbiter.rr_q ;
  assign _11_ = 32'd2 <= (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *) \gen_arbiter.rr_q ;
  assign _12_ = 32'd3 <= (* src = "FPNewBlackbox.preprocessed.v:283.31-283.40" *) \gen_arbiter.rr_q ;
  assign _13_ = gnt_i && (* src = "FPNewBlackbox.preprocessed.v:301.21-301.35" *) req_o;
  assign _14_ = ~ (* src = "FPNewBlackbox.preprocessed.v:326.21-326.34" *) req_i[0];
  assign _15_ = ~ (* src = "FPNewBlackbox.preprocessed.v:326.21-326.34" *) req_i[2];
  assign _16_ = ~ (* src = "FPNewBlackbox.preprocessed.v:329.79-329.83" *) \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign _17_ = ~ (* src = "FPNewBlackbox.preprocessed.v:329.79-329.83" *) \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _18_ = ~ (* src = "FPNewBlackbox.preprocessed.v:346.20-346.36" *) \gen_arbiter.req_nodes [1];
  assign _19_ = ~ (* src = "FPNewBlackbox.preprocessed.v:349.50-349.54" *) \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [1] = req_i[0] | (* src = "FPNewBlackbox.preprocessed.v:325.33-325.66" *) req_i[1];
  assign \gen_arbiter.req_nodes [2] = req_i[2] | (* src = "FPNewBlackbox.preprocessed.v:325.33-325.66" *) req_i[3];
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _14_ | (* src = "FPNewBlackbox.preprocessed.v:326.21-326.89" *) _01_;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = _15_ | (* src = "FPNewBlackbox.preprocessed.v:326.21-326.89" *) _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | (* src = "FPNewBlackbox.preprocessed.v:345.32-345.69" *) \gen_arbiter.req_nodes [2];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _18_ | (* src = "FPNewBlackbox.preprocessed.v:346.20-346.92" *) _03_;
  assign _00_ = flush_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:309.15-309.22|FPNewBlackbox.preprocessed.v:309.11-312.20" *) 2'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _05_ ? (* src = "FPNewBlackbox.preprocessed.v:282.31-282.57" *) req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _06_ ? (* src = "FPNewBlackbox.preprocessed.v:282.31-282.57" *) req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _07_ ? (* src = "FPNewBlackbox.preprocessed.v:282.31-282.57" *) req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _08_ ? (* src = "FPNewBlackbox.preprocessed.v:282.31-282.57" *) req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _09_ ? (* src = "FPNewBlackbox.preprocessed.v:283.31-283.58" *) req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _10_ ? (* src = "FPNewBlackbox.preprocessed.v:283.31-283.58" *) req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _11_ ? (* src = "FPNewBlackbox.preprocessed.v:283.31-283.58" *) req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _12_ ? (* src = "FPNewBlackbox.preprocessed.v:283.31-283.58" *) req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? (* src = "FPNewBlackbox.preprocessed.v:300.25-300.60" *) \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _13_ ? (* src = "FPNewBlackbox.preprocessed.v:301.21-301.53" *) \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 2'hx;
  assign \gen_arbiter.data_nodes [141:71] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:328.204-328.459" *) data_i[141:71] : data_i[70:0];
  assign \gen_arbiter.data_nodes [212:142] = \gen_arbiter.gen_levels[1].gen_level[1].sel  ? (* src = "FPNewBlackbox.preprocessed.v:328.204-328.459" *) data_i[283:213] : data_i[212:142];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:347.120-347.1111" *) { 1'h1, \gen_arbiter.gen_levels[1].gen_level[1].sel  } : { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? (* src = "FPNewBlackbox.preprocessed.v:348.203-348.592" *) \gen_arbiter.data_nodes [212:142] : \gen_arbiter.data_nodes [141:71];
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:296.8-299.7" *)
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:288.8-292.7" *)
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign \gen_arbiter.data_nodes [70:0] = data_o;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.index_nodes  = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel , 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel , idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign \gen_arbiter.req_nodes [0] = req_o;
  assign \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:327$496.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:327$497.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:347$494.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$FPNewBlackbox.preprocessed.v:347$495.inp  = 2'hx;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_cast_multi_BB75A_A18A7" *)
(* src = "FPNewBlackbox.preprocessed.v:3376.1-4243.10" *)
module \$paramod$c93a4c7035490d3070510f71b74f71f6511466e7\fpnew_cast_multi_BB75A_A18A7 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, tag_i, aux_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, aux_o, out_valid_o
, out_ready_i, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [31:0] _000_;
  (* src = "FPNewBlackbox.preprocessed.v:3600.4-3604.120" *)
  wire _001_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [4:0] _002_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [8:0] _003_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [31:0] _004_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire _005_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [48:0] _006_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [4:0] _007_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [8:0] _008_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire _009_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [4:0] _010_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [8:0] _011_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [4:0] _012_;
  (* src = "FPNewBlackbox.preprocessed.v:3967.2-4000.5" *)
  wire [4:0] _013_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _014_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _015_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _016_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _017_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _018_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _019_;
  (* src = "FPNewBlackbox.preprocessed.v:3499.47-3499.68" *)
  wire [31:0] _020_;
  (* src = "FPNewBlackbox.preprocessed.v:3503.47-3503.68" *)
  wire [31:0] _021_;
  (* src = "FPNewBlackbox.preprocessed.v:3747.60-3747.81" *)
  wire [31:0] _022_;
  (* src = "FPNewBlackbox.preprocessed.v:3751.45-3751.64" *)
  wire [31:0] _023_;
  (* src = "FPNewBlackbox.preprocessed.v:3772.35-3772.58" *)
  wire [8:0] _024_;
  (* src = "FPNewBlackbox.preprocessed.v:3776.27-3776.73" *)
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _025_;
  (* src = "FPNewBlackbox.preprocessed.v:3976.31-3976.80" *)
  wire [31:0] _026_;
  (* src = "FPNewBlackbox.preprocessed.v:3992.30-3992.46" *)
  wire [31:0] _027_;
  (* src = "FPNewBlackbox.preprocessed.v:3997.30-3997.46" *)
  wire [31:0] _028_;
  (* src = "FPNewBlackbox.preprocessed.v:3997.29-3997.80" *)
  (* unused_bits = "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _029_;
  (* src = "FPNewBlackbox.preprocessed.v:4073.62-4073.91" *)
  wire _030_;
  (* src = "FPNewBlackbox.preprocessed.v:4147.96-4147.120" *)
  wire _031_;
  (* src = "FPNewBlackbox.preprocessed.v:4147.95-4147.145" *)
  wire _032_;
  (* src = "FPNewBlackbox.preprocessed.v:4158.49-4158.96" *)
  wire _033_;
  wire _034_;
  (* src = "FPNewBlackbox.preprocessed.v:3976.8-3976.81" *)
  wire _035_;
  (* src = "FPNewBlackbox.preprocessed.v:3985.13-3985.84" *)
  wire _036_;
  (* src = "FPNewBlackbox.preprocessed.v:3990.40-3990.101" *)
  wire _037_;
  (* src = "FPNewBlackbox.preprocessed.v:3985.90-3985.116" *)
  wire _038_;
  (* src = "FPNewBlackbox.preprocessed.v:3990.12-3990.102" *)
  wire _039_;
  (* src = "FPNewBlackbox.preprocessed.v:3985.12-3985.117" *)
  wire _040_;
  (* src = "FPNewBlackbox.preprocessed.v:3980.13-3980.29" *)
  wire _041_;
  (* src = "FPNewBlackbox.preprocessed.v:3990.13-3990.34" *)
  wire _042_;
  (* src = "FPNewBlackbox.preprocessed.v:3995.12-3995.72" *)
  wire _043_;
  (* src = "FPNewBlackbox.preprocessed.v:3499.48-3499.62" *)
  wire [31:0] _044_;
  (* src = "FPNewBlackbox.preprocessed.v:3747.61-3747.75" *)
  wire [31:0] _045_;
  (* src = "FPNewBlackbox.preprocessed.v:3739.46-3739.56" *)
  wire [23:0] _046_;
  (* src = "FPNewBlackbox.preprocessed.v:3990.61-3990.101" *)
  wire [31:0] _047_;
  (* src = "FPNewBlackbox.preprocessed.v:4091.53-4091.65" *)
  wire [31:0] _048_;
  (* src = "FPNewBlackbox.preprocessed.v:3599.55-3599.79" *)
  wire _049_;
  (* src = "FPNewBlackbox.preprocessed.v:3738.51-3738.60" *)
  wire _050_;
  (* src = "FPNewBlackbox.preprocessed.v:3985.90-3985.103" *)
  wire _051_;
  (* src = "FPNewBlackbox.preprocessed.v:4119.75-4119.85" *)
  wire _052_;
  (* src = "FPNewBlackbox.preprocessed.v:4147.124-4147.145" *)
  wire _053_;
  (* src = "FPNewBlackbox.preprocessed.v:4158.49-4158.59" *)
  wire _054_;
  (* src = "FPNewBlackbox.preprocessed.v:4119.50-4119.71" *)
  wire _055_;
  (* src = "FPNewBlackbox.preprocessed.v:4119.49-4119.85" *)
  wire _056_;
  (* src = "FPNewBlackbox.preprocessed.v:4147.36-4147.57" *)
  wire _057_;
  (* src = "FPNewBlackbox.preprocessed.v:4147.35-4147.76" *)
  wire _058_;
  (* src = "FPNewBlackbox.preprocessed.v:4147.34-4147.90" *)
  wire _059_;
  (* src = "FPNewBlackbox.preprocessed.v:4156.48-4156.80" *)
  wire _060_;
  (* src = "FPNewBlackbox.preprocessed.v:4160.72-4160.145" *)
  wire _061_;
  wire [31:0] _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  (* src = "FPNewBlackbox.preprocessed.v:4160.48-4160.69" *)
  wire _067_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [23:0] _068_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire _069_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _070_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _071_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _072_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _073_;
  (* src = "FPNewBlackbox.preprocessed.v:3747.31-3747.91" *)
  wire [31:0] _074_;
  (* src = "FPNewBlackbox.preprocessed.v:3747.31-3747.91" *)
  wire [31:0] _075_;
  (* src = "FPNewBlackbox.preprocessed.v:3985.43-3985.78" *)
  wire [31:0] _076_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _077_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _078_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _079_;
  (* src = "FPNewBlackbox.preprocessed.v:3499.49-3499.56" *)
  (* unused_bits = "26 27 28 29 30 31" *)
  wire [31:0] _080_;
  (* src = "FPNewBlackbox.preprocessed.v:3747.62-3747.69" *)
  (* unused_bits = "26 27 28 29 30 31" *)
  wire [31:0] _081_;
  (* src = "FPNewBlackbox.preprocessed.v:3747.37-3747.90" *)
  wire [31:0] _082_;
  (* src = "FPNewBlackbox.preprocessed.v:3747.37-3747.90" *)
  wire [31:0] _083_;
  (* src = "FPNewBlackbox.preprocessed.v:3772.34-3772.70" *)
  wire [8:0] _084_;
  (* src = "FPNewBlackbox.preprocessed.v:3772.33-3772.90" *)
  wire [8:0] _085_;
  (* src = "FPNewBlackbox.preprocessed.v:3773.33-3773.71" *)
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _086_;
  (* src = "FPNewBlackbox.preprocessed.v:3970.18-3970.65" *)
  (* unused_bits = "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _087_;
  (* src = "FPNewBlackbox.preprocessed.v:3975.29-3975.62" *)
  (* unused_bits = "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _088_;
  (* src = "FPNewBlackbox.preprocessed.v:3976.32-3976.67" *)
  wire [31:0] _089_;
  (* src = "FPNewBlackbox.preprocessed.v:3985.35-3985.83" *)
  wire [31:0] _090_;
  (* src = "FPNewBlackbox.preprocessed.v:3986.26-3986.67" *)
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _091_;
  (* src = "FPNewBlackbox.preprocessed.v:3992.29-3992.67" *)
  (* unused_bits = "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _092_;
  (* src = "FPNewBlackbox.preprocessed.v:3604.52-3604.117" *)
  wire _093_;
  (* src = "FPNewBlackbox.preprocessed.v:3483.38-3483.43" *)
  input [4:0] aux_i;
  wire [4:0] aux_i;
  (* src = "FPNewBlackbox.preprocessed.v:3491.39-3491.44" *)
  output [4:0] aux_o;
  wire [4:0] aux_o;
  (* src = "FPNewBlackbox.preprocessed.v:3494.14-3494.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:3471.13-3471.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:3961.40-3961.52" *)
  wire [4:0] denorm_shamt;
  (* src = "FPNewBlackbox.preprocessed.v:3775.36-3775.51" *)
  wire [8:0] destination_exp;
  (* src = "FPNewBlackbox.preprocessed.v:3780.36-3780.53" *)
  wire [8:0] destination_exp_q;
  (* src = "FPNewBlackbox.preprocessed.v:3958.29-3958.45" *)
  wire [48:0] destination_mant;
  (* src = "FPNewBlackbox.preprocessed.v:3480.19-3480.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:3535.13-3535.22" *)
  wire [2:0] dst_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3788.13-3788.23" *)
  wire [2:0] dst_fmt_q2;
  (* src = "FPNewBlackbox.preprocessed.v:3665.7-3665.17" *)
  wire dst_is_int;
  (* src = "FPNewBlackbox.preprocessed.v:3782.7-3782.19" *)
  wire dst_is_int_q;
  (* src = "FPNewBlackbox.preprocessed.v:3668.29-3668.41" *)
  wire [23:0] encoded_mant;
  (* src = "FPNewBlackbox.preprocessed.v:4168.7-4168.20" *)
  wire extension_bit;
  (* src = "FPNewBlackbox.preprocessed.v:3489.14-3489.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:3956.28-3956.37" *)
  (* unused_bits = "8" *)
  wire [8:0] final_exp;
  (* src = "FPNewBlackbox.preprocessed.v:3960.29-3960.38" *)
  wire [-1:0] final_int;
  (* src = "FPNewBlackbox.preprocessed.v:3959.30-3959.40" *)
  wire [22:0] final_mant;
  (* src = "FPNewBlackbox.preprocessed.v:3486.13-3486.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:3670.52-3670.64" *)
  wire [44:0] fmt_exponent;
  (* src = "FPNewBlackbox.preprocessed.v:3671.45-3671.57" *)
  wire [119:0] fmt_mantissa;
  (* src = "FPNewBlackbox.preprocessed.v:4013.12-4013.30" *)
  wire [4:0] fmt_of_after_round;
  (* src = "FPNewBlackbox.preprocessed.v:4012.36-4012.53" *)
  wire [159:0] fmt_pre_round_abs;
  (* src = "FPNewBlackbox.preprocessed.v:4062.36-4062.46" *)
  wire [159:0] fmt_result;
  (* src = "FPNewBlackbox.preprocessed.v:3672.52-3672.74" *)
  wire [44:0] fmt_shift_compensation;
  (* src = "FPNewBlackbox.preprocessed.v:3669.13-3669.21" *)
  wire [4:0] fmt_sign;
  (* src = "FPNewBlackbox.preprocessed.v:4096.36-4096.54" *)
  wire [159:0] fmt_special_result;
  (* src = "FPNewBlackbox.preprocessed.v:4014.12-4014.30" *)
  wire [4:0] fmt_uf_after_round;
  (* src = "FPNewBlackbox.preprocessed.v:3757.36-3757.48" *)
  wire [8:0] fp_input_exp;
  (* src = "FPNewBlackbox.preprocessed.v:4151.13-4151.30" *)
  wire [4:0] fp_regular_status;
  (* src = "FPNewBlackbox.preprocessed.v:4152.21-4152.30" *)
  wire [31:0] fp_result;
  (* src = "FPNewBlackbox.preprocessed.v:4095.7-4095.27" *)
  wire fp_result_is_special;
  (* src = "FPNewBlackbox.preprocessed.v:3962.13-3962.33" *)
  wire [1:0] fp_round_sticky_bits;
  (* src = "FPNewBlackbox.preprocessed.v:4093.21-4093.38" *)
  wire [31:0] fp_special_result;
  (* src = "FPNewBlackbox.preprocessed.v:4094.13-4094.30" *)
  wire [4:0] fp_special_status;
  (* src = "FPNewBlackbox.preprocessed.v:4154.13-4154.22" *)
  wire [4:0] fp_status;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3749$4285.$result ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3746.19-3746.22" *)
  wire [2:0] \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3749$4420.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3776$4286.$result ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3746.19-3746.22" *)
  wire [2:0] \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3776$4421.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3498.19-3498.22" *)
  wire [2:0] \fpnew_pkg_exp_bits$func$FPNewBlackbox.preprocessed.v:3985$4294.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3498.19-3498.22" *)
  wire [2:0] \fpnew_pkg_exp_bits$func$FPNewBlackbox.preprocessed.v:3986$4295.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3444.19-3444.23" *)
  wire [1:0] \fpnew_pkg_int_width$func$FPNewBlackbox.preprocessed.v:3976$4288.ifmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3502.19-3502.22" *)
  wire [2:0] \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3970$4287.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3502.19-3502.22" *)
  wire [2:0] \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3990$4296.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3502.19-3502.22" *)
  wire [2:0] \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3995$4297.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3502.19-3502.22" *)
  wire [2:0] \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3997$4298.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:3598.9-3598.16" *)
  wire \gen_input_pipeline[0].reg_ena ;
  (* src = "FPNewBlackbox.preprocessed.v:4045.24-4045.38" *)
  wire [32:1] \gen_int_res_sign_ext[0].inactive_format.sv2v_tmp_F6FA8 ;
  (* src = "FPNewBlackbox.preprocessed.v:4045.24-4045.38" *)
  wire [32:1] \gen_int_res_sign_ext[1].inactive_format.sv2v_tmp_F6FA8 ;
  (* src = "FPNewBlackbox.preprocessed.v:4045.24-4045.38" *)
  wire [32:1] \gen_int_res_sign_ext[2].inactive_format.sv2v_tmp_F6FA8 ;
  (* src = "FPNewBlackbox.preprocessed.v:4045.24-4045.38" *)
  wire [32:1] \gen_int_res_sign_ext[3].inactive_format.sv2v_tmp_F6FA8 ;
  (* src = "FPNewBlackbox.preprocessed.v:4031.24-4031.38" *)
  wire [32:1] \gen_res_assemble[1].inactive_format.sv2v_tmp_C33E0 ;
  (* src = "FPNewBlackbox.preprocessed.v:4031.24-4031.38" *)
  wire [32:1] \gen_res_assemble[2].inactive_format.sv2v_tmp_C33E0 ;
  (* src = "FPNewBlackbox.preprocessed.v:4031.24-4031.38" *)
  wire [32:1] \gen_res_assemble[3].inactive_format.sv2v_tmp_C33E0 ;
  (* src = "FPNewBlackbox.preprocessed.v:4031.24-4031.38" *)
  wire [32:1] \gen_res_assemble[4].inactive_format.sv2v_tmp_C33E0 ;
  (* src = "FPNewBlackbox.preprocessed.v:3731.32-3731.46" *)
  wire [24:1] \gen_sign_extend_int[0].inactive_format.sv2v_tmp_5B946 ;
  (* src = "FPNewBlackbox.preprocessed.v:3731.32-3731.46" *)
  wire [24:1] \gen_sign_extend_int[1].inactive_format.sv2v_tmp_5B946 ;
  (* src = "FPNewBlackbox.preprocessed.v:3731.32-3731.46" *)
  wire [24:1] \gen_sign_extend_int[2].inactive_format.sv2v_tmp_5B946 ;
  (* src = "FPNewBlackbox.preprocessed.v:3731.32-3731.46" *)
  wire [24:1] \gen_sign_extend_int[3].inactive_format.sv2v_tmp_5B946 ;
  (* src = "FPNewBlackbox.preprocessed.v:4077.16-4077.30" *)
  wire \gen_sign_inject[1].inactive_format.sv2v_tmp_4A747 ;
  (* src = "FPNewBlackbox.preprocessed.v:4083.24-4083.38" *)
  wire [32:1] \gen_sign_inject[1].inactive_format.sv2v_tmp_649FB ;
  (* src = "FPNewBlackbox.preprocessed.v:4080.16-4080.30" *)
  wire \gen_sign_inject[1].inactive_format.sv2v_tmp_90681 ;
  (* src = "FPNewBlackbox.preprocessed.v:4077.16-4077.30" *)
  wire \gen_sign_inject[2].inactive_format.sv2v_tmp_4A747 ;
  (* src = "FPNewBlackbox.preprocessed.v:4083.24-4083.38" *)
  wire [32:1] \gen_sign_inject[2].inactive_format.sv2v_tmp_649FB ;
  (* src = "FPNewBlackbox.preprocessed.v:4080.16-4080.30" *)
  wire \gen_sign_inject[2].inactive_format.sv2v_tmp_90681 ;
  (* src = "FPNewBlackbox.preprocessed.v:4077.16-4077.30" *)
  wire \gen_sign_inject[3].inactive_format.sv2v_tmp_4A747 ;
  (* src = "FPNewBlackbox.preprocessed.v:4083.24-4083.38" *)
  wire [32:1] \gen_sign_inject[3].inactive_format.sv2v_tmp_649FB ;
  (* src = "FPNewBlackbox.preprocessed.v:4080.16-4080.30" *)
  wire \gen_sign_inject[3].inactive_format.sv2v_tmp_90681 ;
  (* src = "FPNewBlackbox.preprocessed.v:4077.16-4077.30" *)
  wire \gen_sign_inject[4].inactive_format.sv2v_tmp_4A747 ;
  (* src = "FPNewBlackbox.preprocessed.v:4083.24-4083.38" *)
  wire [32:1] \gen_sign_inject[4].inactive_format.sv2v_tmp_649FB ;
  (* src = "FPNewBlackbox.preprocessed.v:4080.16-4080.30" *)
  wire \gen_sign_inject[4].inactive_format.sv2v_tmp_90681 ;
  (* src = "FPNewBlackbox.preprocessed.v:4106.27-4106.38" *)
  wire [31:0] \gen_special_results[0].active_format.special_results.special_res ;
  (* src = "FPNewBlackbox.preprocessed.v:4113.24-4113.38" *)
  wire [32:1] \gen_special_results[1].inactive_format.sv2v_tmp_B718F ;
  (* src = "FPNewBlackbox.preprocessed.v:4113.24-4113.38" *)
  wire [32:1] \gen_special_results[2].inactive_format.sv2v_tmp_B718F ;
  (* src = "FPNewBlackbox.preprocessed.v:4113.24-4113.38" *)
  wire [32:1] \gen_special_results[3].inactive_format.sv2v_tmp_B718F ;
  (* src = "FPNewBlackbox.preprocessed.v:4113.24-4113.38" *)
  wire [32:1] \gen_special_results[4].inactive_format.sv2v_tmp_B718F ;
  (* src = "FPNewBlackbox.preprocessed.v:4141.24-4141.38" *)
  wire [32:1] \gen_special_results_int[0].inactive_format.sv2v_tmp_99B6D ;
  (* src = "FPNewBlackbox.preprocessed.v:4141.24-4141.38" *)
  wire [32:1] \gen_special_results_int[1].inactive_format.sv2v_tmp_99B6D ;
  (* src = "FPNewBlackbox.preprocessed.v:4141.24-4141.38" *)
  wire [32:1] \gen_special_results_int[2].inactive_format.sv2v_tmp_99B6D ;
  (* src = "FPNewBlackbox.preprocessed.v:4141.24-4141.38" *)
  wire [32:1] \gen_special_results_int[3].inactive_format.sv2v_tmp_99B6D ;
  (* src = "FPNewBlackbox.preprocessed.v:3674.48-3674.62" *)
  wire [95:0] ifmt_input_val;
  (* src = "FPNewBlackbox.preprocessed.v:4015.40-4015.58" *)
  wire [127:0] ifmt_pre_round_abs;
  (* src = "FPNewBlackbox.preprocessed.v:4125.40-4125.59" *)
  wire [127:0] ifmt_special_result;
  (* src = "FPNewBlackbox.preprocessed.v:3485.14-3485.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:3484.13-3484.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:3673.14-3673.18" *)
  wire [39:0] info;
  (* src = "FPNewBlackbox.preprocessed.v:3783.13-3783.19" *)
  (* unused_bits = "1 6 7" *)
  wire [7:0] info_q;
  (* src = "FPNewBlackbox.preprocessed.v:3546.216-3546.230" *)
  wire [9:0] inp_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:3543.248-3543.266" *)
  wire [5:0] inp_pipe_dst_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3544.252-3544.270" *)
  wire [3:0] inp_pipe_int_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3538.196-3538.215" *)
  (* unused_bits = "1 2 3 4" *)
  wire [9:0] inp_pipe_is_boxed_q;
  (* src = "FPNewBlackbox.preprocessed.v:3541.23-3541.40" *)
  wire [0:1] inp_pipe_op_mod_q;
  (* src = "FPNewBlackbox.preprocessed.v:3540.220-3540.233" *)
  wire [7:0] inp_pipe_op_q;
  (* src = "FPNewBlackbox.preprocessed.v:3537.172-3537.191" *)
  wire [63:0] inp_pipe_operands_q;
  (* src = "FPNewBlackbox.preprocessed.v:3548.24-3548.38" *)
  wire [0:1] inp_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:3539.156-3539.175" *)
  wire [5:0] inp_pipe_rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:3542.248-3542.266" *)
  wire [5:0] inp_pipe_src_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3545.316-3545.330" *)
  wire [3:0] inp_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:3547.23-3547.39" *)
  wire [0:1] inp_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:3754.36-3754.45" *)
  wire [8:0] input_exp;
  (* src = "FPNewBlackbox.preprocessed.v:3778.36-3778.47" *)
  wire [8:0] input_exp_q;
  (* src = "FPNewBlackbox.preprocessed.v:3755.29-3755.39" *)
  wire [23:0] input_mant;
  (* src = "FPNewBlackbox.preprocessed.v:3779.29-3779.41" *)
  wire [23:0] input_mant_q;
  (* src = "FPNewBlackbox.preprocessed.v:3753.7-3753.17" *)
  wire input_sign;
  (* src = "FPNewBlackbox.preprocessed.v:3777.7-3777.19" *)
  wire input_sign_q;
  (* src = "FPNewBlackbox.preprocessed.v:3481.19-3481.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:3536.13-3536.22" *)
  wire [1:0] int_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3789.13-3789.23" *)
  wire [1:0] int_fmt_q2;
  (* src = "FPNewBlackbox.preprocessed.v:3758.36-3758.49" *)
  wire [8:0] int_input_exp;
  (* src = "FPNewBlackbox.preprocessed.v:3677.29-3677.41" *)
  wire [23:0] int_mantissa;
  (* src = "FPNewBlackbox.preprocessed.v:4150.13-4150.31" *)
  wire [4:0] int_regular_status;
  (* src = "FPNewBlackbox.preprocessed.v:4153.21-4153.31" *)
  wire [31:0] int_result;
  (* src = "FPNewBlackbox.preprocessed.v:4124.7-4124.28" *)
  wire int_result_is_special;
  (* src = "FPNewBlackbox.preprocessed.v:3963.13-3963.34" *)
  wire [1:0] int_round_sticky_bits;
  (* src = "FPNewBlackbox.preprocessed.v:3675.7-3675.15" *)
  wire int_sign;
  (* src = "FPNewBlackbox.preprocessed.v:4122.21-4122.39" *)
  wire [31:0] int_special_result;
  (* src = "FPNewBlackbox.preprocessed.v:4123.13-4123.31" *)
  wire [4:0] int_special_status;
  (* src = "FPNewBlackbox.preprocessed.v:4155.13-4155.23" *)
  wire [4:0] int_status;
  (* src = "FPNewBlackbox.preprocessed.v:3676.29-3676.38" *)
  wire [23:0] int_value;
  (* src = "FPNewBlackbox.preprocessed.v:3474.19-3474.29" *)
  input [4:0] is_boxed_i;
  wire [4:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:3532.13-3532.23" *)
  (* unused_bits = "1 2 3 4" *)
  wire [4:0] is_boxed_q;
  (* src = "FPNewBlackbox.preprocessed.v:3756.7-3756.19" *)
  wire mant_is_zero;
  (* src = "FPNewBlackbox.preprocessed.v:3784.7-3784.21" *)
  wire mant_is_zero_q;
  (* src = "FPNewBlackbox.preprocessed.v:3804.216-3804.230" *)
  wire [4:0] mid_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:3793.211-3793.230" *)
  wire [8:0] mid_pipe_dest_exp_q;
  (* src = "FPNewBlackbox.preprocessed.v:3801.248-3801.266" *)
  wire [2:0] mid_pipe_dst_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3795.23-3795.44" *)
  wire mid_pipe_dst_is_int_q;
  (* src = "FPNewBlackbox.preprocessed.v:3796.156-3796.171" *)
  (* unused_bits = "1 6 7" *)
  wire [7:0] mid_pipe_info_q;
  (* src = "FPNewBlackbox.preprocessed.v:3791.211-3791.231" *)
  wire [8:0] mid_pipe_input_exp_q;
  (* src = "FPNewBlackbox.preprocessed.v:3792.204-3792.225" *)
  wire [23:0] mid_pipe_input_mant_q;
  (* src = "FPNewBlackbox.preprocessed.v:3790.23-3790.44" *)
  wire mid_pipe_input_sign_q;
  (* src = "FPNewBlackbox.preprocessed.v:3802.252-3802.270" *)
  wire [1:0] mid_pipe_int_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3797.23-3797.43" *)
  wire mid_pipe_mant_zero_q;
  (* src = "FPNewBlackbox.preprocessed.v:3798.23-3798.40" *)
  wire mid_pipe_op_mod_q;
  (* src = "FPNewBlackbox.preprocessed.v:3806.24-3806.38" *)
  wire mid_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:3799.156-3799.175" *)
  wire [2:0] mid_pipe_rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:3800.248-3800.266" *)
  wire [2:0] mid_pipe_src_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3794.23-3794.44" *)
  wire mid_pipe_src_is_int_q;
  (* src = "FPNewBlackbox.preprocessed.v:3803.316-3803.330" *)
  wire [1:0] mid_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:3805.23-3805.39" *)
  wire mid_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:4010.7-4010.21" *)
  wire of_after_round;
  (* src = "FPNewBlackbox.preprocessed.v:3965.6-3965.21" *)
  wire of_before_round;
  (* src = "FPNewBlackbox.preprocessed.v:3477.19-3477.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:3478.13-3478.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:3533.7-3533.15" *)
  wire op_mod_q;
  (* src = "FPNewBlackbox.preprocessed.v:3785.7-3785.16" *)
  wire op_mod_q2;
  (* src = "FPNewBlackbox.preprocessed.v:3473.27-3473.37" *)
  input [31:0] operands_i;
  wire [31:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:3531.21-3531.31" *)
  wire [31:0] operands_q;
  (* src = "FPNewBlackbox.preprocessed.v:4176.216-4176.230" *)
  wire [4:0] out_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:4174.23-4174.41" *)
  wire out_pipe_ext_bit_q;
  (* src = "FPNewBlackbox.preprocessed.v:4178.24-4178.38" *)
  wire out_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:4172.172-4172.189" *)
  wire [31:0] out_pipe_result_q;
  (* src = "FPNewBlackbox.preprocessed.v:4173.156-4173.173" *)
  wire [4:0] out_pipe_status_q;
  (* src = "FPNewBlackbox.preprocessed.v:4175.316-4175.330" *)
  wire [1:0] out_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:4177.23-4177.39" *)
  wire out_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:3493.13-3493.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:3492.14-3492.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:4009.21-4009.34" *)
  wire [31:0] pre_round_abs;
  (* src = "FPNewBlackbox.preprocessed.v:3957.28-3957.41" *)
  wire [48:0] preshift_mant;
  (* src = "FPNewBlackbox.preprocessed.v:3759.32-3759.44" *)
  wire [4:0] renorm_shamt;
  (* src = "FPNewBlackbox.preprocessed.v:3760.28-3760.44" *)
  wire [5:0] renorm_shamt_sgn;
  (* src = "FPNewBlackbox.preprocessed.v:4166.21-4166.29" *)
  wire [31:0] result_d;
  (* src = "FPNewBlackbox.preprocessed.v:3487.28-3487.36" *)
  output [31:0] result_o;
  wire [31:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:4018.7-4018.23" *)
  (* unused_bits = "0" *)
  wire result_true_zero;
  (* src = "FPNewBlackbox.preprocessed.v:3475.19-3475.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:3786.13-3786.23" *)
  wire [2:0] rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:3964.13-3964.30" *)
  wire [1:0] round_sticky_bits;
  (* src = "FPNewBlackbox.preprocessed.v:4017.21-4017.32" *)
  wire [31:0] rounded_abs;
  (* src = "FPNewBlackbox.preprocessed.v:4019.21-4019.36" *)
  wire [31:0] rounded_int_res;
  (* src = "FPNewBlackbox.preprocessed.v:4020.7-4020.27" *)
  wire rounded_int_res_zero;
  (* src = "FPNewBlackbox.preprocessed.v:4016.7-4016.19" *)
  wire rounded_sign;
  (* src = "FPNewBlackbox.preprocessed.v:3472.13-3472.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:3741.36-3741.44" *)
  wire [8:0] src_bias;
  (* src = "FPNewBlackbox.preprocessed.v:3742.36-3742.43" *)
  wire [8:0] src_exp;
  (* src = "FPNewBlackbox.preprocessed.v:3479.19-3479.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:3534.13-3534.22" *)
  wire [2:0] src_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:3787.13-3787.23" *)
  wire [2:0] src_fmt_q2;
  (* src = "FPNewBlackbox.preprocessed.v:3664.7-3664.17" *)
  wire src_is_int;
  (* src = "FPNewBlackbox.preprocessed.v:3781.7-3781.19" *)
  wire src_is_int_q;
  (* src = "FPNewBlackbox.preprocessed.v:3744.36-3744.46" *)
  wire [8:0] src_offset;
  (* src = "FPNewBlackbox.preprocessed.v:3743.36-3743.49" *)
  wire [8:0] src_subnormal;
  (* src = "FPNewBlackbox.preprocessed.v:4167.13-4167.21" *)
  wire [4:0] status_d;
  (* src = "FPNewBlackbox.preprocessed.v:3488.20-3488.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:4188.57-4188.71" *)
  wire [2:1] sv2v_tmp_03C65;
  (* src = "FPNewBlackbox.preprocessed.v:4191.32-4191.46" *)
  wire [5:1] sv2v_tmp_14D79;
  (* src = "FPNewBlackbox.preprocessed.v:3573.57-3573.71" *)
  wire [2:1] sv2v_tmp_18FC5;
  (* src = "FPNewBlackbox.preprocessed.v:4194.13-4194.27" *)
  wire sv2v_tmp_25EE6;
  (* src = "FPNewBlackbox.preprocessed.v:3843.13-3843.27" *)
  wire [2:1] sv2v_tmp_2AE08;
  (* src = "FPNewBlackbox.preprocessed.v:3834.13-3834.27" *)
  wire [3:1] sv2v_tmp_32E16;
  (* src = "FPNewBlackbox.preprocessed.v:3813.29-3813.43" *)
  wire [24:1] sv2v_tmp_3BE44;
  (* src = "FPNewBlackbox.preprocessed.v:3819.13-3819.27" *)
  wire sv2v_tmp_3D9F8;
  (* src = "FPNewBlackbox.preprocessed.v:3807.13-3807.27" *)
  wire sv2v_tmp_3DFAC;
  (* src = "FPNewBlackbox.preprocessed.v:4179.21-4179.35" *)
  wire [32:1] sv2v_tmp_4086F;
  (* src = "FPNewBlackbox.preprocessed.v:3828.13-3828.27" *)
  wire sv2v_tmp_4351A;
  (* src = "FPNewBlackbox.preprocessed.v:3555.13-3555.27" *)
  wire [3:1] sv2v_tmp_45ED9;
  (* src = "FPNewBlackbox.preprocessed.v:3825.13-3825.27" *)
  (* unused_bits = "1 6 7" *)
  wire [8:1] sv2v_tmp_48E57;
  (* src = "FPNewBlackbox.preprocessed.v:3822.13-3822.27" *)
  wire sv2v_tmp_4E95C;
  (* src = "FPNewBlackbox.preprocessed.v:3567.13-3567.27" *)
  wire [3:1] sv2v_tmp_6AF63;
  (* src = "FPNewBlackbox.preprocessed.v:3549.21-3549.35" *)
  wire [32:1] sv2v_tmp_6E45B;
  (* src = "FPNewBlackbox.preprocessed.v:3579.13-3579.27" *)
  wire sv2v_tmp_73AEA;
  (* src = "FPNewBlackbox.preprocessed.v:3831.13-3831.27" *)
  wire sv2v_tmp_88AB6;
  (* src = "FPNewBlackbox.preprocessed.v:4185.13-4185.27" *)
  wire sv2v_tmp_8F736;
  (* src = "FPNewBlackbox.preprocessed.v:3810.29-3810.43" *)
  wire [9:1] sv2v_tmp_9AB08;
  (* src = "FPNewBlackbox.preprocessed.v:3558.13-3558.27" *)
  wire [4:1] sv2v_tmp_AD1FB;
  (* src = "FPNewBlackbox.preprocessed.v:3846.57-3846.71" *)
  wire [2:1] sv2v_tmp_B46A2;
  (* src = "FPNewBlackbox.preprocessed.v:4182.13-4182.27" *)
  wire [5:1] sv2v_tmp_B7C45;
  (* src = "FPNewBlackbox.preprocessed.v:3849.32-3849.46" *)
  wire [5:1] sv2v_tmp_C23AE;
  (* src = "FPNewBlackbox.preprocessed.v:3552.13-3552.27" *)
  wire [5:1] sv2v_tmp_C47E1;
  (* src = "FPNewBlackbox.preprocessed.v:3570.13-3570.27" *)
  wire [2:1] sv2v_tmp_CA55F;
  (* src = "FPNewBlackbox.preprocessed.v:3852.13-3852.27" *)
  wire sv2v_tmp_CB10A;
  (* src = "FPNewBlackbox.preprocessed.v:3564.13-3564.27" *)
  wire [3:1] sv2v_tmp_CB295;
  (* src = "FPNewBlackbox.preprocessed.v:3561.13-3561.27" *)
  wire sv2v_tmp_D1C37;
  (* src = "FPNewBlackbox.preprocessed.v:3576.32-3576.46" *)
  wire [5:1] sv2v_tmp_D4403;
  (* src = "FPNewBlackbox.preprocessed.v:3837.13-3837.27" *)
  wire [3:1] sv2v_tmp_DE9EA;
  (* src = "FPNewBlackbox.preprocessed.v:3816.29-3816.43" *)
  wire [9:1] sv2v_tmp_F626F;
  (* src = "FPNewBlackbox.preprocessed.v:3840.13-3840.27" *)
  wire [3:1] sv2v_tmp_FC1E4;
  (* src = "FPNewBlackbox.preprocessed.v:3482.63-3482.68" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:3490.64-3490.69" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:4011.7-4011.21" *)
  wire uf_after_round;
  assign _017_ = _021_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _019_ = _022_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _018_ = _020_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _021_ = { _044_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:3503.47-3503.68" *) 32'd31;
  assign _022_ = { _045_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:3747.60-3747.81" *) 32'd63;
  assign _020_ = { _044_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:3747.60-3747.81" *) 32'd63;
  assign _023_ = { 26'h0000000, inp_pipe_src_fmt_q[2:0], 3'h0 } + (* src = "FPNewBlackbox.preprocessed.v:3751.45-3751.64" *) 32'd6;
  assign _024_ = src_exp + (* src = "FPNewBlackbox.preprocessed.v:3772.35-3772.58" *) { 8'h00, src_subnormal[0] };
  assign fp_input_exp = _085_ + (* src = "FPNewBlackbox.preprocessed.v:3772.32-3772.104" *) src_offset;
  assign { _025_[31:9], destination_exp_q } = $signed(input_exp) + (* src = "FPNewBlackbox.preprocessed.v:3776.27-3776.73" *) $signed(\fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3776$4286.$result );
  assign _026_ = _089_ + (* src = "FPNewBlackbox.preprocessed.v:3976.31-3976.80" *) inp_pipe_op_mod_q[1];
  assign _027_ = _087_[4:0] + (* src = "FPNewBlackbox.preprocessed.v:3992.30-3992.46" *) 32'd1;
  assign _028_ = _087_[4:0] + (* src = "FPNewBlackbox.preprocessed.v:3997.30-3997.46" *) 32'd2;
  assign _029_ = _028_ + (* src = "FPNewBlackbox.preprocessed.v:3997.29-3997.80" *) _000_;
  assign \gen_input_pipeline[0].reg_ena  = in_ready_o & (* src = "FPNewBlackbox.preprocessed.v:3605.21-3605.60" *) in_valid_i;
  assign int_sign = int_value[23] & (* src = "FPNewBlackbox.preprocessed.v:3738.20-3738.60" *) _050_;
  assign _030_ = src_is_int & (* src = "FPNewBlackbox.preprocessed.v:4073.62-4073.91" *) mant_is_zero;
  assign fp_result_is_special = _051_ & (* src = "FPNewBlackbox.preprocessed.v:4119.32-4119.86" *) _056_;
  assign _031_ = input_sign_q & (* src = "FPNewBlackbox.preprocessed.v:4147.96-4147.120" *) inp_pipe_op_mod_q[1];
  assign _032_ = _031_ & (* src = "FPNewBlackbox.preprocessed.v:4147.95-4147.145" *) _053_;
  assign fp_regular_status[4] = src_is_int & (* src = "FPNewBlackbox.preprocessed.v:4156.32-4156.81" *) _060_;
  assign fp_regular_status[2] = _051_ & (* src = "FPNewBlackbox.preprocessed.v:4158.32-4158.97" *) _033_;
  assign fp_regular_status[1] = uf_after_round & (* src = "FPNewBlackbox.preprocessed.v:4159.32-4159.69" *) fp_regular_status[0];
  assign _033_ = _054_ & (* src = "FPNewBlackbox.preprocessed.v:4160.97-4160.144" *) _060_;
  reg [4:0] _118_;
  (* src = "FPNewBlackbox.preprocessed.v:3611.4-3615.316" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _118_ <= 5'h00;
    else if (\gen_input_pipeline[0].reg_ena ) _118_ <= is_boxed_i;
  assign inp_pipe_is_boxed_q[4:0] = _118_;
  reg \inp_pipe_op_mod_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:3626.4-3630.94" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_op_mod_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_op_mod_q_reg[0]  <= op_mod_i;
  assign inp_pipe_op_mod_q[1] = \inp_pipe_op_mod_q_reg[0] ;
  reg [2:0] _120_;
  (* src = "FPNewBlackbox.preprocessed.v:3631.4-3635.391" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _120_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _120_ <= src_fmt_i;
  assign inp_pipe_src_fmt_q[2:0] = _120_;
  reg \inp_pipe_valid_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:3600.4-3604.120" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_valid_q_reg[0]  <= 1'h0;
    else if (_034_) \inp_pipe_valid_q_reg[0]  <= _001_;
  assign inp_pipe_valid_q[1] = \inp_pipe_valid_q_reg[0] ;
  reg [2:0] _122_;
  (* src = "FPNewBlackbox.preprocessed.v:3636.4-3640.391" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _122_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _122_ <= dst_fmt_i;
  assign inp_pipe_dst_fmt_q[2:0] = _122_;
  reg [1:0] _123_;
  (* src = "FPNewBlackbox.preprocessed.v:3641.4-3645.397" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _123_ <= 2'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _123_ <= int_fmt_i;
  assign inp_pipe_int_fmt_q[1:0] = _123_;
  reg [2:0] _124_;
  (* src = "FPNewBlackbox.preprocessed.v:3616.4-3620.256" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _124_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _124_ <= rnd_mode_i;
  assign inp_pipe_rnd_mode_q[2:0] = _124_;
  reg [1:0] _125_;
  (* src = "FPNewBlackbox.preprocessed.v:3646.4-3650.481" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _125_ <= 2'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _125_ <= tag_i;
  assign inp_pipe_tag_q[1:0] = _125_;
  reg [4:0] _126_;
  (* src = "FPNewBlackbox.preprocessed.v:3651.4-3655.331" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _126_ <= 5'h00;
    else if (\gen_input_pipeline[0].reg_ena ) _126_ <= aux_i;
  assign inp_pipe_aux_q[4:0] = _126_;
  reg [3:0] _127_;
  (* src = "FPNewBlackbox.preprocessed.v:3621.4-3625.334" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _127_ <= 4'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _127_ <= op_i;
  assign inp_pipe_op_q[3:0] = _127_;
  reg [31:0] _128_;
  (* src = "FPNewBlackbox.preprocessed.v:3606.4-3610.280" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _128_ <= 32'd0;
    else if (\gen_input_pipeline[0].reg_ena ) _128_ <= operands_i;
  assign inp_pipe_operands_q[31:0] = _128_;
  assign _034_ = | { in_ready_o, flush_i };
  assign src_is_int = inp_pipe_op_q[3:0] == (* src = "FPNewBlackbox.preprocessed.v:3666.22-3666.163" *) 4'hc;
  assign dst_is_int_q = inp_pipe_op_q[3:0] == (* src = "FPNewBlackbox.preprocessed.v:3667.22-3667.163" *) 4'hb;
  assign fmt_uf_after_round[0] = ! (* src = "FPNewBlackbox.preprocessed.v:4070.32-4070.232" *) rounded_abs[30:23];
  assign fmt_of_after_round[0] = rounded_abs[30:23] == (* src = "FPNewBlackbox.preprocessed.v:4071.32-4071.232" *) 8'hff;
  assign rounded_int_res_zero = ! (* src = "FPNewBlackbox.preprocessed.v:4092.32-4092.66" *) rounded_int_res;
  assign _035_ = $signed(input_exp) >= (* src = "FPNewBlackbox.preprocessed.v:3976.8-3976.81" *) $signed(_026_);
  assign _036_ = $signed(destination_exp_q) >= (* src = "FPNewBlackbox.preprocessed.v:3985.13-3985.84" *) $signed(_090_);
  assign _037_ = $signed(destination_exp_q) >= (* src = "FPNewBlackbox.preprocessed.v:3990.40-3990.101" *) $signed(_047_);
  assign _038_ = _051_ && (* src = "FPNewBlackbox.preprocessed.v:3985.90-3985.116" *) info_q[4];
  assign _039_ = _042_ && (* src = "FPNewBlackbox.preprocessed.v:3990.12-3990.102" *) _037_;
  assign _040_ = _036_ || (* src = "FPNewBlackbox.preprocessed.v:3985.12-3985.117" *) _038_;
  assign _041_ = $signed(input_exp) < (* src = "FPNewBlackbox.preprocessed.v:3980.13-3980.29" *) $signed(32'd4294967295);
  assign _042_ = $signed(destination_exp_q) < (* src = "FPNewBlackbox.preprocessed.v:3990.13-3990.34" *) $signed(32'd1);
  assign _043_ = $signed(destination_exp_q) < (* src = "FPNewBlackbox.preprocessed.v:3995.12-3995.72" *) $signed(_047_);
  assign _014_[31:3] = inp_pipe_int_fmt_q[1:0] * (* src = "FPNewBlackbox.preprocessed.v:3737.36-3737.61" *) 29'h00000003;
  assign _015_[31:3] = inp_pipe_src_fmt_q[2:0] * (* src = "FPNewBlackbox.preprocessed.v:3740.66-3740.91" *) 29'h00000003;
  assign _016_ = inp_pipe_src_fmt_q[2:0] * (* src = "FPNewBlackbox.preprocessed.v:3752.45-3752.70" *) 32'd9;
  assign _046_ = - (* src = "FPNewBlackbox.preprocessed.v:3739.46-3739.56" *) int_value;
  assign _047_ = - (* src = "FPNewBlackbox.preprocessed.v:3995.32-3995.72" *) $signed(_000_);
  assign _048_ = - (* src = "FPNewBlackbox.preprocessed.v:4091.53-4091.65" *) rounded_abs;
  assign _049_ = ~ (* src = "FPNewBlackbox.preprocessed.v:3599.55-3599.79" *) inp_pipe_valid_q[1];
  assign _050_ = ~ (* src = "FPNewBlackbox.preprocessed.v:3738.51-3738.60" *) inp_pipe_op_mod_q[1];
  assign _052_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4147.80-4147.90" *) info_q[0];
  assign _053_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4147.124-4147.145" *) rounded_int_res_zero;
  assign _051_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4158.32-4158.45" *) src_is_int;
  assign _054_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4160.97-4160.107" *) info_q[4];
  assign in_ready_o = out_ready_i | (* src = "FPNewBlackbox.preprocessed.v:3599.31-3599.79" *) _049_;
  assign _055_ = info_q[5] | (* src = "FPNewBlackbox.preprocessed.v:4119.50-4119.71" *) info_q[3];
  assign _056_ = _055_ | (* src = "FPNewBlackbox.preprocessed.v:4119.49-4119.85" *) _052_;
  assign _057_ = info_q[3] | (* src = "FPNewBlackbox.preprocessed.v:4147.36-4147.57" *) info_q[4];
  assign _058_ = _057_ | (* src = "FPNewBlackbox.preprocessed.v:4147.35-4147.76" *) of_before_round;
  assign _059_ = _058_ | (* src = "FPNewBlackbox.preprocessed.v:4147.34-4147.90" *) _052_;
  assign int_result_is_special = _059_ | (* src = "FPNewBlackbox.preprocessed.v:4147.33-4147.146" *) _032_;
  assign _060_ = of_before_round | (* src = "FPNewBlackbox.preprocessed.v:4160.111-4160.143" *) of_after_round;
  assign _061_ = _067_ | (* src = "FPNewBlackbox.preprocessed.v:4160.72-4160.145" *) _033_;
  assign _013_ = _043_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3995.12-3995.72|FPNewBlackbox.preprocessed.v:3995.8-3999.6" *) _029_[4:0] : _087_[4:0];
  assign _011_ = _043_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3995.12-3995.72|FPNewBlackbox.preprocessed.v:3995.8-3999.6" *) 9'h000 : destination_exp_q;
  assign _012_ = _039_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3990.12-3990.102|FPNewBlackbox.preprocessed.v:3990.8-3999.6" *) _092_[4:0] : _013_;
  assign _008_ = _039_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3990.12-3990.102|FPNewBlackbox.preprocessed.v:3990.8-3999.6" *) 9'h000 : _011_;
  assign _009_ = _040_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3985.12-3985.117|FPNewBlackbox.preprocessed.v:3985.8-3999.6" *) 1'h1 : 1'h0;
  assign _006_ = _040_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3985.12-3985.117|FPNewBlackbox.preprocessed.v:3985.8-3999.6" *) 49'h1ffffffffffff : { input_mant, 25'h0000000 };
  assign _003_ = _040_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3985.12-3985.117|FPNewBlackbox.preprocessed.v:3985.8-3999.6" *) _091_[8:0] : _008_;
  assign _010_ = _040_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3985.12-3985.117|FPNewBlackbox.preprocessed.v:3985.8-3999.6" *) _087_[4:0] : _012_;
  assign _007_ = _041_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3980.13-3980.29|FPNewBlackbox.preprocessed.v:3980.9-3983.7" *) 5'h01 : _088_[4:0];
  assign _005_ = _035_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3976.8-3976.81|FPNewBlackbox.preprocessed.v:3976.4-3983.7" *) 1'h1 : 1'h0;
  assign _002_ = _035_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3976.8-3976.81|FPNewBlackbox.preprocessed.v:3976.4-3983.7" *) 5'h00 : _007_;
  function [31:0] _176_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3445.3-3453.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _176_ = b[31:0];
      4'b??1?:
        _176_ = b[63:32];
      4'b?1??:
        _176_ = b[95:64];
      4'b1???:
        _176_ = b[127:96];
      default:
        _176_ = a;
    endcase
  endfunction
  assign _062_ = _176_(32'hxxxxxxxx, 128'h00000008000000100000002000000040, { _066_, _065_, _064_, _063_ });
  assign _063_ = inp_pipe_int_fmt_q[1:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3445.3-3453.10" *) 2'h3;
  assign _064_ = inp_pipe_int_fmt_q[1:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3445.3-3453.10" *) 2'h2;
  assign _065_ = inp_pipe_int_fmt_q[1:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3445.3-3453.10" *) 2'h1;
  assign _066_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3445.3-3453.10" *) inp_pipe_int_fmt_q[1:0];
  assign _004_ = dst_is_int_q ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3974.7-3974.19|FPNewBlackbox.preprocessed.v:3974.3-3999.6" *) _062_ : 32'hxxxxxxxx;
  assign of_before_round = dst_is_int_q ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3974.7-3974.19|FPNewBlackbox.preprocessed.v:3974.3-3999.6" *) _005_ : _009_;
  assign denorm_shamt = dst_is_int_q ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3974.7-3974.19|FPNewBlackbox.preprocessed.v:3974.3-3999.6" *) _002_ : _010_;
  assign preshift_mant = dst_is_int_q ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3974.7-3974.19|FPNewBlackbox.preprocessed.v:3974.3-3999.6" *) { input_mant, 25'h0000000 } : _006_;
  assign final_exp = dst_is_int_q ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3974.7-3974.19|FPNewBlackbox.preprocessed.v:3974.3-3999.6" *) destination_exp_q : _003_;
  assign fp_round_sticky_bits[0] = | (* src = "FPNewBlackbox.preprocessed.v:4006.35-4006.75" *) destination_mant[23:0];
  assign int_round_sticky_bits[0] = | (* src = "FPNewBlackbox.preprocessed.v:4007.36-4007.77" *) destination_mant[47:0];
  assign _067_ = | (* src = "FPNewBlackbox.preprocessed.v:4160.72-4160.93" *) destination_mant[24:0];
  assign int_regular_status[0] = | (* src = "FPNewBlackbox.preprocessed.v:4161.40-4161.62" *) destination_mant;
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:4242.18-4242.73" *) { inp_pipe_valid_q[1], in_valid_i };
  wire [95:0] _249_ = 96'hffffffffffffffffffffffff;
  assign int_value = _249_[$signed({ _014_[31:3], 3'h0 }) +: 24];
  wire [119:0] _250_ = { 96'hffffffffffffffffffffffff, fmt_mantissa[23], inp_pipe_operands_q[22:0] };
  assign _068_ = _250_[$signed({ _015_[31:3], 3'h0 }) +: 24];
  wire [44:0] _251_ = { 37'h1ffffffffe, inp_pipe_operands_q[30:23] };
  assign src_exp = _251_[$signed(_016_) +: 9];
  wire [39:0] _252_ = { 32'hffffffff, fmt_mantissa[23], info[6:0] };
  assign src_subnormal[0] = _252_[$signed(_023_) +: 1];
  wire [44:0] _253_ = 45'h1ffffffffe00;
  assign src_offset = _253_[$signed(_016_) +: 9];
  wire [4:0] _254_ = { 4'hf, inp_pipe_operands_q[31] };
  assign _069_ = _254_[inp_pipe_src_fmt_q[2:0] +: 1];
  wire [39:0] _255_ = { 32'hffffffff, fmt_mantissa[23], info[6:0] };
  assign info_q = _255_[$signed({ 26'h0000000, inp_pipe_src_fmt_q[2:0], 3'h0 }) +: 8];
  wire [319:0] _256_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _000_ = _256_[$signed(_077_) +: 32];
  wire [159:0] _257_ = { 129'h1fffffffffffffffffffffffffffffffe, final_exp[7:0], destination_mant[47:25] };
  assign _071_ = _257_[$signed({ 24'h000000, inp_pipe_dst_fmt_q[2:0], 5'h00 }) +: 32];
  wire [4:0] _258_ = { 4'hf, fmt_uf_after_round[0] };
  assign uf_after_round = _258_[inp_pipe_dst_fmt_q[2:0] +: 1];
  wire [4:0] _259_ = { 4'hf, fmt_of_after_round[0] };
  assign of_after_round = _259_[inp_pipe_dst_fmt_q[2:0] +: 1];
  wire [159:0] _260_ = { 128'hffffffffffffffffffffffffffffffff, \gen_special_results[0].active_format.special_results.special_res  };
  assign fp_special_result = _260_[$signed({ 24'h000000, inp_pipe_dst_fmt_q[2:0], 5'h00 }) +: 32];
  wire [127:0] _261_ = 128'hffffffffffffffffffffffffffffffff;
  assign int_special_result = _261_[$signed({ 25'h0000000, inp_pipe_int_fmt_q[1:0], 5'h00 }) +: 32];
  wire [159:0] _262_ = { 128'hffffffffffffffffffffffffffffffff, fmt_result[31:0] };
  assign _072_ = _262_[$signed({ 24'h000000, inp_pipe_dst_fmt_q[2:0], 5'h00 }) +: 32];
  wire [319:0] _263_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _073_ = _263_[$signed(_079_) +: 32];
  wire [319:0] _264_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _070_ = _264_[$signed(_078_) +: 32];
  assign _074_ = $signed(32'd1) << (* src = "FPNewBlackbox.preprocessed.v:3747.31-3747.91" *) _082_;
  assign _075_ = $signed(32'd1) << (* src = "FPNewBlackbox.preprocessed.v:3747.31-3747.91" *) _083_;
  assign input_mant = encoded_mant << (* src = "FPNewBlackbox.preprocessed.v:3771.22-3771.50" *) renorm_shamt;
  assign _076_ = $signed(32'd1) << (* src = "FPNewBlackbox.preprocessed.v:3986.27-3986.62" *) _070_;
  assign destination_mant = preshift_mant >> (* src = "FPNewBlackbox.preprocessed.v:4003.28-4003.57" *) denorm_shamt;
  assign _077_ = _017_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign _079_ = _019_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign _078_ = _018_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign { _081_[31:26], _045_[31:6] } = 32'd4 - (* src = "FPNewBlackbox.preprocessed.v:3747.62-3747.69" *) inp_pipe_src_fmt_q[2:0];
  assign _082_ = _073_ - (* src = "FPNewBlackbox.preprocessed.v:3747.37-3747.90" *) 32'd1;
  assign \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3749$4285.$result  = $signed(_074_) - (* src = "FPNewBlackbox.preprocessed.v:3747.30-3747.96" *) $signed(32'd1);
  assign { _080_[31:26], _044_[31:6] } = 32'd4 - (* src = "FPNewBlackbox.preprocessed.v:3747.62-3747.69" *) inp_pipe_dst_fmt_q[2:0];
  assign _083_ = _070_ - (* src = "FPNewBlackbox.preprocessed.v:3747.37-3747.90" *) 32'd1;
  assign \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3776$4286.$result  = $signed(_075_) - (* src = "FPNewBlackbox.preprocessed.v:3747.30-3747.96" *) $signed(32'd1);
  assign _084_ = _024_ - (* src = "FPNewBlackbox.preprocessed.v:3772.34-3772.70" *) \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3749$4285.$result [8:0];
  assign _085_ = _084_ - (* src = "FPNewBlackbox.preprocessed.v:3772.33-3772.90" *) { 1'h0, renorm_shamt };
  assign { _086_[31:9], int_input_exp } = 32'd23 - (* src = "FPNewBlackbox.preprocessed.v:3773.33-3773.71" *) { 1'h0, renorm_shamt };
  assign _087_ = 32'd23 - (* src = "FPNewBlackbox.preprocessed.v:3970.18-3970.65" *) _000_;
  assign _088_ = 32'd4294967295 - (* src = "FPNewBlackbox.preprocessed.v:3975.29-3975.62" *) input_exp;
  assign _089_ = _004_ - (* src = "FPNewBlackbox.preprocessed.v:3976.32-3976.67" *) 32'd1;
  assign _090_ = $signed(_076_) - (* src = "FPNewBlackbox.preprocessed.v:3985.35-3985.83" *) $signed(32'd1);
  assign _091_ = $signed(_076_) - (* src = "FPNewBlackbox.preprocessed.v:3986.26-3986.67" *) $signed(32'd2);
  assign _092_ = _027_ - (* src = "FPNewBlackbox.preprocessed.v:3992.29-3992.67" *) destination_exp_q;
  assign _093_ = in_ready_o ? (* src = "FPNewBlackbox.preprocessed.v:3604.52-3604.117" *) in_valid_i : 1'hx;
  assign _001_ = flush_i ? (* src = "FPNewBlackbox.preprocessed.v:3604.34-3604.118" *) 1'h0 : _093_;
  assign int_mantissa = int_sign ? (* src = "FPNewBlackbox.preprocessed.v:3739.25-3739.69" *) _046_ : int_value;
  assign encoded_mant = src_is_int ? (* src = "FPNewBlackbox.preprocessed.v:3740.25-3740.107" *) int_mantissa : _068_;
  assign input_sign_q = src_is_int ? (* src = "FPNewBlackbox.preprocessed.v:3770.23-3770.66" *) int_sign : _069_;
  assign input_exp = src_is_int ? (* src = "FPNewBlackbox.preprocessed.v:3774.22-3774.63" *) int_input_exp : fp_input_exp;
  assign round_sticky_bits = dst_is_int_q ? (* src = "FPNewBlackbox.preprocessed.v:4008.30-4008.89" *) { destination_mant[48], int_round_sticky_bits[0] } : { destination_mant[24], fp_round_sticky_bits[0] };
  assign pre_round_abs = dst_is_int_q ? (* src = "FPNewBlackbox.preprocessed.v:4051.26-4051.133" *) int_special_result : _071_;
  assign fmt_result[31:0] = _030_ ? (* src = "FPNewBlackbox.preprocessed.v:4073.62-4073.175" *) 32'd0 : { rounded_sign, rounded_abs[30:0] };
  assign rounded_int_res = rounded_sign ? (* src = "FPNewBlackbox.preprocessed.v:4091.28-4091.80" *) _048_ : rounded_abs;
  assign \gen_special_results[0].active_format.special_results.special_res  = info_q[5] ? (* src = "FPNewBlackbox.preprocessed.v:4107.21-4107.102" *) { input_sign_q, 31'h00000000 } : 32'd2143289344;
  assign fp_regular_status[0] = src_is_int ? (* src = "FPNewBlackbox.preprocessed.v:4160.33-4160.145" *) _067_ : _061_;
  assign fp_result = fp_result_is_special ? (* src = "FPNewBlackbox.preprocessed.v:4162.22-4162.102" *) fp_special_result : _072_;
  assign fp_status = fp_result_is_special ? (* src = "FPNewBlackbox.preprocessed.v:4163.22-4163.82" *) { info_q[2], 4'h0 } : { fp_regular_status[4], 1'h0, fp_regular_status[2:0] };
  assign int_result = int_result_is_special ? (* src = "FPNewBlackbox.preprocessed.v:4164.23-4164.83" *) int_special_result : rounded_int_res;
  assign int_status = int_result_is_special ? (* src = "FPNewBlackbox.preprocessed.v:4165.23-4165.86" *) 5'h10 : { 4'h0, int_regular_status[0] };
  assign result_o = dst_is_int_q ? (* src = "FPNewBlackbox.preprocessed.v:4169.21-4169.58" *) int_result : fp_result;
  assign status_o = dst_is_int_q ? (* src = "FPNewBlackbox.preprocessed.v:4170.21-4170.58" *) int_status : fp_status;
  assign extension_bit_o = dst_is_int_q ? (* src = "FPNewBlackbox.preprocessed.v:4171.26-4171.69" *) int_result[31] : 1'h1;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3697.7-3701.6" *)
  \$paramod$62f5c6c40baf3ab700fec6049fa36a166c5bea61\fpnew_classifier  \fmt_init_inputs[0].active_format.i_fpnew_classifier  (
    .info_o({ fmt_mantissa[23], info[6:0] }),
    .is_boxed_i(inp_pipe_is_boxed_q[0]),
    .operands_i(inp_pipe_operands_q[31:0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:4052.37-4061.3" *)
  \$paramod\fpnew_rounding\AbsWidth=32'00000000000000000000000000100000  i_fpnew_rounding (
    .abs_rounded_o(rounded_abs),
    .abs_value_i(pre_round_abs),
    .effective_subtraction_i(1'h0),
    .exact_zero_o(result_true_zero),
    .rnd_mode_i(inp_pipe_rnd_mode_q[2:0]),
    .round_sticky_bits_i(round_sticky_bits),
    .sign_i(input_sign_q),
    .sign_o(rounded_sign)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3764.4-3768.3" *)
  \$paramod$33927d67db2764900ac78ba84de6c8e59d432344\lzc  i_lzc (
    .cnt_o(renorm_shamt),
    .empty_o(mant_is_zero),
    .in_i(encoded_mant)
  );
  assign _014_[2:0] = 3'h0;
  assign _015_[2:0] = 3'h0;
  assign _025_[8:0] = destination_exp_q;
  assign _044_[5:0] = 6'h00;
  assign _045_[5:0] = 6'h00;
  assign _080_[25:0] = _044_[31:6];
  assign _081_[25:0] = _045_[31:6];
  assign _086_[8:0] = int_input_exp;
  assign aux_o = inp_pipe_aux_q[4:0];
  assign destination_exp = destination_exp_q;
  assign dst_fmt_q = inp_pipe_dst_fmt_q[2:0];
  assign dst_fmt_q2 = inp_pipe_dst_fmt_q[2:0];
  assign dst_is_int = dst_is_int_q;
  assign extension_bit = extension_bit_o;
  assign final_int = 2'h0;
  assign final_mant = destination_mant[47:25];
  assign fmt_exponent = { 37'h1ffffffffe, inp_pipe_operands_q[30:23] };
  assign { fmt_mantissa[119:24], fmt_mantissa[22:0] } = { 96'hffffffffffffffffffffffff, inp_pipe_operands_q[22:0] };
  assign fmt_of_after_round[4:1] = 4'hf;
  assign fmt_pre_round_abs = { 129'h1fffffffffffffffffffffffffffffffe, final_exp[7:0], destination_mant[47:25] };
  assign fmt_result[159:32] = 128'hffffffffffffffffffffffffffffffff;
  assign fmt_shift_compensation = 45'h1ffffffffe00;
  assign fmt_sign = { 4'hf, inp_pipe_operands_q[31] };
  assign fmt_special_result = { 128'hffffffffffffffffffffffffffffffff, \gen_special_results[0].active_format.special_results.special_res  };
  assign fmt_uf_after_round[4:1] = 4'hf;
  assign fp_regular_status[3] = 1'h0;
  assign fp_round_sticky_bits[1] = destination_mant[24];
  assign fp_special_status = { info_q[2], 4'h0 };
  assign \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3749$4420.fmt  = 3'hx;
  assign \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3776$4421.fmt  = 3'hx;
  assign \fpnew_pkg_exp_bits$func$FPNewBlackbox.preprocessed.v:3985$4294.fmt  = 3'hx;
  assign \fpnew_pkg_exp_bits$func$FPNewBlackbox.preprocessed.v:3986$4295.fmt  = 3'hx;
  assign \fpnew_pkg_int_width$func$FPNewBlackbox.preprocessed.v:3976$4288.ifmt  = 2'hx;
  assign \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3970$4287.fmt  = 3'hx;
  assign \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3990$4296.fmt  = 3'hx;
  assign \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3995$4297.fmt  = 3'hx;
  assign \fpnew_pkg_man_bits$func$FPNewBlackbox.preprocessed.v:3997$4298.fmt  = 3'hx;
  assign \gen_int_res_sign_ext[0].inactive_format.sv2v_tmp_F6FA8  = 32'd4294967295;
  assign \gen_int_res_sign_ext[1].inactive_format.sv2v_tmp_F6FA8  = 32'd4294967295;
  assign \gen_int_res_sign_ext[2].inactive_format.sv2v_tmp_F6FA8  = 32'd4294967295;
  assign \gen_int_res_sign_ext[3].inactive_format.sv2v_tmp_F6FA8  = 32'd4294967295;
  assign \gen_res_assemble[1].inactive_format.sv2v_tmp_C33E0  = 32'd4294967295;
  assign \gen_res_assemble[2].inactive_format.sv2v_tmp_C33E0  = 32'd4294967295;
  assign \gen_res_assemble[3].inactive_format.sv2v_tmp_C33E0  = 32'd4294967295;
  assign \gen_res_assemble[4].inactive_format.sv2v_tmp_C33E0  = 32'd4294967295;
  assign \gen_sign_extend_int[0].inactive_format.sv2v_tmp_5B946  = 24'hffffff;
  assign \gen_sign_extend_int[1].inactive_format.sv2v_tmp_5B946  = 24'hffffff;
  assign \gen_sign_extend_int[2].inactive_format.sv2v_tmp_5B946  = 24'hffffff;
  assign \gen_sign_extend_int[3].inactive_format.sv2v_tmp_5B946  = 24'hffffff;
  assign \gen_sign_inject[1].inactive_format.sv2v_tmp_4A747  = 1'h1;
  assign \gen_sign_inject[1].inactive_format.sv2v_tmp_649FB  = 32'd4294967295;
  assign \gen_sign_inject[1].inactive_format.sv2v_tmp_90681  = 1'h1;
  assign \gen_sign_inject[2].inactive_format.sv2v_tmp_4A747  = 1'h1;
  assign \gen_sign_inject[2].inactive_format.sv2v_tmp_649FB  = 32'd4294967295;
  assign \gen_sign_inject[2].inactive_format.sv2v_tmp_90681  = 1'h1;
  assign \gen_sign_inject[3].inactive_format.sv2v_tmp_4A747  = 1'h1;
  assign \gen_sign_inject[3].inactive_format.sv2v_tmp_649FB  = 32'd4294967295;
  assign \gen_sign_inject[3].inactive_format.sv2v_tmp_90681  = 1'h1;
  assign \gen_sign_inject[4].inactive_format.sv2v_tmp_4A747  = 1'h1;
  assign \gen_sign_inject[4].inactive_format.sv2v_tmp_649FB  = 32'd4294967295;
  assign \gen_sign_inject[4].inactive_format.sv2v_tmp_90681  = 1'h1;
  assign \gen_special_results[1].inactive_format.sv2v_tmp_B718F  = 32'd4294967295;
  assign \gen_special_results[2].inactive_format.sv2v_tmp_B718F  = 32'd4294967295;
  assign \gen_special_results[3].inactive_format.sv2v_tmp_B718F  = 32'd4294967295;
  assign \gen_special_results[4].inactive_format.sv2v_tmp_B718F  = 32'd4294967295;
  assign \gen_special_results_int[0].inactive_format.sv2v_tmp_99B6D  = 32'd4294967295;
  assign \gen_special_results_int[1].inactive_format.sv2v_tmp_99B6D  = 32'd4294967295;
  assign \gen_special_results_int[2].inactive_format.sv2v_tmp_99B6D  = 32'd4294967295;
  assign \gen_special_results_int[3].inactive_format.sv2v_tmp_99B6D  = 32'd4294967295;
  assign ifmt_input_val = 96'hffffffffffffffffffffffff;
  assign ifmt_pre_round_abs = 128'hffffffffffffffffffffffffffffffff;
  assign ifmt_special_result = 128'hffffffffffffffffffffffffffffffff;
  assign info[39:7] = { 32'hffffffff, fmt_mantissa[23] };
  assign inp_pipe_aux_q[9:5] = aux_i;
  assign inp_pipe_dst_fmt_q[5:3] = dst_fmt_i;
  assign inp_pipe_int_fmt_q[3:2] = int_fmt_i;
  assign inp_pipe_is_boxed_q[9:5] = is_boxed_i;
  assign inp_pipe_op_mod_q[0] = op_mod_i;
  assign inp_pipe_op_q[7:4] = op_i;
  assign inp_pipe_operands_q[63:32] = operands_i;
  assign inp_pipe_ready = { in_ready_o, out_ready_i };
  assign inp_pipe_rnd_mode_q[5:3] = rnd_mode_i;
  assign inp_pipe_src_fmt_q[5:3] = src_fmt_i;
  assign inp_pipe_tag_q[3:2] = tag_i;
  assign inp_pipe_valid_q[0] = in_valid_i;
  assign input_exp_q = input_exp;
  assign input_mant_q = input_mant;
  assign input_sign = input_sign_q;
  assign int_fmt_q = inp_pipe_int_fmt_q[1:0];
  assign int_fmt_q2 = inp_pipe_int_fmt_q[1:0];
  assign int_regular_status[4:1] = 4'h0;
  assign int_round_sticky_bits[1] = destination_mant[48];
  assign int_special_status = 5'h10;
  assign is_boxed_q = inp_pipe_is_boxed_q[4:0];
  assign mant_is_zero_q = mant_is_zero;
  assign mid_pipe_aux_q = inp_pipe_aux_q[4:0];
  assign mid_pipe_dest_exp_q = destination_exp_q;
  assign mid_pipe_dst_fmt_q = inp_pipe_dst_fmt_q[2:0];
  assign mid_pipe_dst_is_int_q = dst_is_int_q;
  assign mid_pipe_info_q = info_q;
  assign mid_pipe_input_exp_q = input_exp;
  assign mid_pipe_input_mant_q = input_mant;
  assign mid_pipe_input_sign_q = input_sign_q;
  assign mid_pipe_int_fmt_q = inp_pipe_int_fmt_q[1:0];
  assign mid_pipe_mant_zero_q = mant_is_zero;
  assign mid_pipe_op_mod_q = inp_pipe_op_mod_q[1];
  assign mid_pipe_ready = out_ready_i;
  assign mid_pipe_rnd_mode_q = inp_pipe_rnd_mode_q[2:0];
  assign mid_pipe_src_fmt_q = inp_pipe_src_fmt_q[2:0];
  assign mid_pipe_src_is_int_q = src_is_int;
  assign mid_pipe_tag_q = inp_pipe_tag_q[1:0];
  assign mid_pipe_valid_q = inp_pipe_valid_q[1];
  assign op_mod_q = inp_pipe_op_mod_q[1];
  assign op_mod_q2 = inp_pipe_op_mod_q[1];
  assign operands_q = inp_pipe_operands_q[31:0];
  assign out_pipe_aux_q = inp_pipe_aux_q[4:0];
  assign out_pipe_ext_bit_q = extension_bit_o;
  assign out_pipe_ready = out_ready_i;
  assign out_pipe_result_q = result_o;
  assign out_pipe_status_q = status_o;
  assign out_pipe_tag_q = inp_pipe_tag_q[1:0];
  assign out_pipe_valid_q = inp_pipe_valid_q[1];
  assign out_valid_o = inp_pipe_valid_q[1];
  assign renorm_shamt_sgn = { 1'h0, renorm_shamt };
  assign result_d = result_o;
  assign rnd_mode_q = inp_pipe_rnd_mode_q[2:0];
  assign src_bias = \fpnew_pkg_bias$func$FPNewBlackbox.preprocessed.v:3749$4285.$result [8:0];
  assign src_fmt_q = inp_pipe_src_fmt_q[2:0];
  assign src_fmt_q2 = inp_pipe_src_fmt_q[2:0];
  assign src_is_int_q = src_is_int;
  assign src_subnormal[8:1] = 8'h00;
  assign status_d = status_o;
  assign sv2v_tmp_03C65 = inp_pipe_tag_q[1:0];
  assign sv2v_tmp_14D79 = inp_pipe_aux_q[4:0];
  assign sv2v_tmp_18FC5 = tag_i;
  assign sv2v_tmp_25EE6 = inp_pipe_valid_q[1];
  assign sv2v_tmp_2AE08 = inp_pipe_int_fmt_q[1:0];
  assign sv2v_tmp_32E16 = inp_pipe_rnd_mode_q[2:0];
  assign sv2v_tmp_3BE44 = input_mant;
  assign sv2v_tmp_3D9F8 = src_is_int;
  assign sv2v_tmp_3DFAC = input_sign_q;
  assign sv2v_tmp_4086F = result_o;
  assign sv2v_tmp_4351A = mant_is_zero;
  assign sv2v_tmp_45ED9 = rnd_mode_i;
  assign sv2v_tmp_48E57 = info_q;
  assign sv2v_tmp_4E95C = dst_is_int_q;
  assign sv2v_tmp_6AF63 = dst_fmt_i;
  assign sv2v_tmp_6E45B = operands_i;
  assign sv2v_tmp_73AEA = in_valid_i;
  assign sv2v_tmp_88AB6 = inp_pipe_op_mod_q[1];
  assign sv2v_tmp_8F736 = extension_bit_o;
  assign sv2v_tmp_9AB08 = input_exp;
  assign sv2v_tmp_AD1FB = op_i;
  assign sv2v_tmp_B46A2 = inp_pipe_tag_q[1:0];
  assign sv2v_tmp_B7C45 = status_o;
  assign sv2v_tmp_C23AE = inp_pipe_aux_q[4:0];
  assign sv2v_tmp_C47E1 = is_boxed_i;
  assign sv2v_tmp_CA55F = int_fmt_i;
  assign sv2v_tmp_CB10A = inp_pipe_valid_q[1];
  assign sv2v_tmp_CB295 = src_fmt_i;
  assign sv2v_tmp_D1C37 = op_mod_i;
  assign sv2v_tmp_D4403 = aux_i;
  assign sv2v_tmp_DE9EA = inp_pipe_src_fmt_q[2:0];
  assign sv2v_tmp_F626F = destination_exp_q;
  assign sv2v_tmp_FC1E4 = inp_pipe_dst_fmt_q[2:0];
  assign tag_o = inp_pipe_tag_q[1:0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_opgroup_multifmt_slice_607F1_85D30" *)
(* src = "FPNewBlackbox.preprocessed.v:7137.1-7695.10" *)
module \$paramod$ca1ccc60aacaa31ef41dedd0ed417009e3aa91a5\fpnew_opgroup_multifmt_slice_607F1_85D30 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:7462.5-7478.8" *)
  wire [31:0] _000_;
  (* src = "FPNewBlackbox.preprocessed.v:7462.5-7478.8" *)
  wire [31:0] _001_;
  (* src = "FPNewBlackbox.preprocessed.v:7462.5-7478.8" *)
  wire [31:0] _002_;
  (* src = "FPNewBlackbox.preprocessed.v:7462.5-7478.8" *)
  wire [31:0] _003_;
  (* src = "FPNewBlackbox.preprocessed.v:7462.5-7478.8" *)
  wire [31:0] _004_;
  (* src = "FPNewBlackbox.preprocessed.v:7462.5-7478.8" *)
  wire [31:0] _005_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _006_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _007_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _008_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _009_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.48-7211.69" *)
  wire [31:0] _010_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.100-7211.121" *)
  wire [31:0] _011_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.25-7211.126" *)
  wire [31:0] _012_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.48-7211.69" *)
  wire [31:0] _013_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.100-7211.121" *)
  wire [31:0] _014_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.25-7211.126" *)
  wire [31:0] _015_;
  (* src = "FPNewBlackbox.preprocessed.v:7473.286-7473.345" *)
  wire [31:0] _016_;
  (* src = "FPNewBlackbox.preprocessed.v:7331.44-7331.71" *)
  wire _017_;
  (* src = "FPNewBlackbox.preprocessed.v:7331.77-7331.104" *)
  wire _018_;
  (* src = "FPNewBlackbox.preprocessed.v:7469.11-7469.38" *)
  wire _019_;
  (* src = "FPNewBlackbox.preprocessed.v:7471.16-7471.43" *)
  wire _020_;
  (* src = "FPNewBlackbox.preprocessed.v:7472.13-7472.37" *)
  wire _021_;
  (* src = "FPNewBlackbox.preprocessed.v:7472.12-7472.52" *)
  wire _022_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.49-7211.63" *)
  wire [31:0] _023_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.49-7211.63" *)
  wire [31:0] _024_;
  wire [31:0] _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [63:0] _030_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [63:0] _031_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _032_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _033_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _034_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _035_;
  (* src = "FPNewBlackbox.preprocessed.v:7466.493-7466.563" *)
  (* unused_bits = "32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63" *)
  wire [63:0] _036_;
  (* src = "FPNewBlackbox.preprocessed.v:7470.260-7470.323" *)
  (* unused_bits = "32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63" *)
  wire [63:0] _037_;
  (* src = "FPNewBlackbox.preprocessed.v:7473.261-7473.346" *)
  (* unused_bits = "32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63" *)
  wire [63:0] _038_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _039_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _040_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _041_;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] _042_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.50-7211.57" *)
  (* unused_bits = "26 27 28 29 30 31" *)
  wire [31:0] _043_;
  (* src = "FPNewBlackbox.preprocessed.v:7211.50-7211.57" *)
  (* unused_bits = "26 27 28 29 30 31" *)
  wire [31:0] _044_;
  (* src = "FPNewBlackbox.preprocessed.v:7301.24-7301.32" *)
  wire [4:0] aux_data;
  (* src = "FPNewBlackbox.preprocessed.v:7347.22-7347.25" *)
  wire [31:0] \boxed_2op.sv2v_autoblock_4.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7207.14-7207.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:7183.13-7183.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:7300.24-7300.31" *)
  wire [2:0] dst_fmt;
  (* src = "FPNewBlackbox.preprocessed.v:7193.19-7193.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7302.7-7302.21" *)
  wire dst_fmt_is_int;
  (* src = "FPNewBlackbox.preprocessed.v:7303.7-7303.17" *)
  wire dst_is_cpk;
  (* src = "FPNewBlackbox.preprocessed.v:7203.14-7203.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:7200.13-7200.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:7309.37-7309.53" *)
  wire [319:0] fmt_slice_result;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2180.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2181.fmt ;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$588.$result ;
  (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *)
  wire [31:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$589.$result ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$2182.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$2183.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1003.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1100.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1197.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1775.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1872.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1969.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7473$1270.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7210.19-7210.22" *)
  wire [2:0] \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7473$2042.fmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7242.19-7242.23" *)
  wire [1:0] \fpnew_pkg_int_width$func$FPNewBlackbox.preprocessed.v:7470$1231.ifmt ;
  (* nosync = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7242.19-7242.23" *)
  wire [1:0] \fpnew_pkg_int_width$func$FPNewBlackbox.preprocessed.v:7470$2003.ifmt ;
  (* src = "FPNewBlackbox.preprocessed.v:7455.10-7455.18" *)
  wire \gen_num_lanes[0].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7458.45-7458.59" *)
  (* unused_bits = "64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95" *)
  wire [95:0] \gen_num_lanes[0].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7459.29-7459.38" *)
  wire [31:0] \gen_num_lanes[0].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7460.16-7460.25" *)
  wire [4:0] \gen_num_lanes[0].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7457.10-7457.19" *)
  wire \gen_num_lanes[0].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7456.10-7456.19" *)
  wire \gen_num_lanes[0].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7464.18-7464.19" *)
  wire [31:0] \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_11.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7453.28-7453.40" *)
  wire [31:0] \gen_num_lanes[0].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7455.10-7455.18" *)
  wire \gen_num_lanes[1].active_lane.in_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7458.45-7458.59" *)
  (* unused_bits = "32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95" *)
  wire [95:0] \gen_num_lanes[1].active_lane.local_operands ;
  (* src = "FPNewBlackbox.preprocessed.v:7459.29-7459.38" *)
  wire [31:0] \gen_num_lanes[1].active_lane.op_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7460.16-7460.25" *)
  wire [4:0] \gen_num_lanes[1].active_lane.op_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7457.10-7457.19" *)
  wire \gen_num_lanes[1].active_lane.out_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7456.10-7456.19" *)
  wire \gen_num_lanes[1].active_lane.out_valid ;
  (* src = "FPNewBlackbox.preprocessed.v:7464.18-7464.19" *)
  wire [31:0] \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_11.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7453.28-7453.40" *)
  wire [31:0] \gen_num_lanes[1].local_result ;
  (* src = "FPNewBlackbox.preprocessed.v:7310.41-7310.58" *)
  wire [255:0] ifmt_slice_result;
  (* src = "FPNewBlackbox.preprocessed.v:7199.14-7199.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:7198.13-7198.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:7195.19-7195.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7343.12-7343.24" *)
  wire [4:0] is_boxed_1op;
  (* src = "FPNewBlackbox.preprocessed.v:7344.12-7344.24" *)
  (* unused_bits = "1 3 5 7 9" *)
  wire [9:0] is_boxed_2op;
  (* src = "FPNewBlackbox.preprocessed.v:7186.50-7186.60" *)
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:7307.7-7307.17" *)
  wire is_up_cast;
  (* src = "FPNewBlackbox.preprocessed.v:7317.38-7317.46" *)
  (* unused_bits = "5 6 7 8 9" *)
  wire [9:0] lane_aux;
  (* src = "FPNewBlackbox.preprocessed.v:7318.25-7318.34" *)
  wire [1:0] lane_busy;
  (* src = "FPNewBlackbox.preprocessed.v:7315.25-7315.37" *)
  wire [1:0] lane_ext_bit;
  (* src = "FPNewBlackbox.preprocessed.v:7297.25-7297.38" *)
  (* unused_bits = "1" *)
  wire [1:0] lane_in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:7298.25-7298.39" *)
  wire [1:0] lane_out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:7314.31-7314.42" *)
  wire [9:0] lane_status;
  (* src = "FPNewBlackbox.preprocessed.v:7316.63-7316.72" *)
  (* unused_bits = "2 3" *)
  wire [3:0] lane_tags;
  (* src = "FPNewBlackbox.preprocessed.v:7189.19-7189.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:7190.13-7190.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:7185.44-7185.54" *)
  input [191:0] operands_i;
  wire [191:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:7206.13-7206.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:7205.14-7205.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:7689.22-7689.23" *)
  wire [31:0] \output_processing.sv2v_autoblock_12.i ;
  (* src = "FPNewBlackbox.preprocessed.v:7686.13-7686.24" *)
  wire [4:0] \output_processing.temp_status ;
  (* src = "FPNewBlackbox.preprocessed.v:7320.24-7320.34" *)
  wire [2:0] result_fmt;
  (* src = "FPNewBlackbox.preprocessed.v:7321.7-7321.24" *)
  wire result_fmt_is_int;
  (* src = "FPNewBlackbox.preprocessed.v:7319.7-7319.23" *)
  wire result_is_vector;
  (* src = "FPNewBlackbox.preprocessed.v:7201.28-7201.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:7187.19-7187.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:7184.13-7184.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:7192.19-7192.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7202.19-7202.27" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:7197.55-7197.60" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:7204.56-7204.61" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:7305.13-7305.25" *)
  (* unused_bits = "1 2" *)
  wire [2:0] target_aux_d;
  (* src = "FPNewBlackbox.preprocessed.v:7638.152-7638.166" *)
  (* unused_bits = "0 1 2 4 5" *)
  wire [5:0] \target_regs.byp_pipe_aux_q ;
  (* src = "FPNewBlackbox.preprocessed.v:7640.25-7640.39" *)
  (* unused_bits = "1" *)
  wire [0:1] \target_regs.byp_pipe_ready ;
  (* src = "FPNewBlackbox.preprocessed.v:7639.24-7639.40" *)
  (* unused_bits = "0" *)
  wire [0:1] \target_regs.byp_pipe_valid_q ;
  (* src = "FPNewBlackbox.preprocessed.v:7647.15-7647.29" *)
  wire \target_regs.sv2v_tmp_49222 ;
  (* src = "FPNewBlackbox.preprocessed.v:7644.15-7644.29" *)
  (* unused_bits = "1 2" *)
  wire [3:1] \target_regs.sv2v_tmp_A0A5D ;
  (* src = "FPNewBlackbox.preprocessed.v:7299.7-7299.19" *)
  wire vectorial_op;
  (* src = "FPNewBlackbox.preprocessed.v:7196.13-7196.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  assign _006_ = _010_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _007_ = _011_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _009_ = _014_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _008_ = _013_ + (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd1;
  assign _010_ = { _023_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:7211.48-7211.69" *) 32'd63;
  assign _011_ = { _023_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:7211.100-7211.121" *) 32'd31;
  assign _012_ = _032_ + (* src = "FPNewBlackbox.preprocessed.v:7211.25-7211.126" *) _033_;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$588.$result  = _012_ + (* src = "FPNewBlackbox.preprocessed.v:7211.24-7211.131" *) 32'd1;
  assign _015_ = _034_ + (* src = "FPNewBlackbox.preprocessed.v:7211.25-7211.126" *) _035_;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$589.$result  = _015_ + (* src = "FPNewBlackbox.preprocessed.v:7211.24-7211.131" *) 32'd1;
  assign _014_ = { _024_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:7211.100-7211.121" *) 32'd31;
  assign _013_ = { _024_[31:6], 6'h00 } + (* src = "FPNewBlackbox.preprocessed.v:7211.48-7211.69" *) 32'd63;
  assign _016_ = \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$589.$result  + (* src = "FPNewBlackbox.preprocessed.v:7473.286-7473.345" *) 32'd16;
  assign lane_out_valid[1] = \gen_num_lanes[1].active_lane.out_valid  & (* src = "FPNewBlackbox.preprocessed.v:7579.35-7579.79" *) lane_aux[3];
  assign \gen_num_lanes[1].active_lane.in_valid  = in_valid_i & (* src = "FPNewBlackbox.preprocessed.v:7648.28-7648.53" *) vectorial_op_i;
  assign \gen_num_lanes[1].active_lane.out_ready  = out_ready_i & (* src = "FPNewBlackbox.preprocessed.v:7671.41-7671.71" *) lane_aux[3];
  assign dst_fmt_is_int = op_i == (* src = "FPNewBlackbox.preprocessed.v:7330.47-7330.74" *) 4'hb;
  assign _017_ = op_i == (* src = "FPNewBlackbox.preprocessed.v:7331.44-7331.71" *) 4'hd;
  assign _018_ = op_i == (* src = "FPNewBlackbox.preprocessed.v:7332.43-7332.70" *) 4'he;
  assign _019_ = op_i == (* src = "FPNewBlackbox.preprocessed.v:7469.11-7469.38" *) 4'hc;
  assign _020_ = op_i == (* src = "FPNewBlackbox.preprocessed.v:7471.16-7471.43" *) 4'ha;
  assign is_up_cast = \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$588.$result  > (* src = "FPNewBlackbox.preprocessed.v:7333.22-7333.83" *) \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$589.$result ;
  assign _021_ = vectorial_op_i && (* src = "FPNewBlackbox.preprocessed.v:7472.13-7472.37" *) op_mod_i;
  assign _022_ = _021_ && (* src = "FPNewBlackbox.preprocessed.v:7472.12-7472.52" *) is_up_cast;
  assign dst_is_cpk = _017_ || (* src = "FPNewBlackbox.preprocessed.v:7331.43-7331.105" *) _018_;
  assign status_o = lane_status[4:0] | (* src = "FPNewBlackbox.preprocessed.v:7691.19-7691.54" *) lane_status[9:5];
  assign _005_ = dst_is_cpk ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7475.16-7475.26|FPNewBlackbox.preprocessed.v:7475.12-7477.310" *) operands_i[95:64] : _036_[31:0];
  assign _004_ = _022_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7472.12-7472.52|FPNewBlackbox.preprocessed.v:7472.8-7473.347" *) _038_[31:0] : _036_[31:0];
  assign _002_ = _020_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7471.16-7471.43|FPNewBlackbox.preprocessed.v:7471.12-7477.310" *) _004_ : _005_;
  function [31:0] _074_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7243.3-7251.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _074_ = b[31:0];
      4'b??1?:
        _074_ = b[63:32];
      4'b?1??:
        _074_ = b[95:64];
      4'b1???:
        _074_ = b[127:96];
      default:
        _074_ = a;
    endcase
  endfunction
  assign _025_ = _074_(32'hxxxxxxxx, 128'h00000008000000100000002000000040, { _029_, _028_, _027_, _026_ });
  assign _026_ = int_fmt_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7243.3-7251.10" *) 2'h3;
  assign _000_ = _019_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7469.11-7469.38|FPNewBlackbox.preprocessed.v:7469.7-7477.310" *) _025_ : 32'hxxxxxxxx;
  assign \gen_num_lanes[1].active_lane.local_operands [31:0] = _019_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7469.11-7469.38|FPNewBlackbox.preprocessed.v:7469.7-7477.310" *) _037_[31:0] : _002_;
  assign _003_ = _022_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7472.12-7472.52|FPNewBlackbox.preprocessed.v:7472.8-7473.347" *) operands_i[47:16] : operands_i[31:0];
  assign _001_ = _020_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7471.16-7471.43|FPNewBlackbox.preprocessed.v:7471.12-7477.310" *) _003_ : operands_i[31:0];
  assign _027_ = int_fmt_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7243.3-7251.10" *) 2'h2;
  assign _028_ = int_fmt_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7243.3-7251.10" *) 2'h1;
  assign _029_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7243.3-7251.10" *) int_fmt_i;
  assign \gen_num_lanes[0].active_lane.local_operands [31:0] = _019_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:7469.11-7469.38|FPNewBlackbox.preprocessed.v:7469.7-7477.310" *) operands_i[31:0] : _001_;
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:7683.18-7683.28" *) lane_busy;
  wire [255:0] _106_ = { 128'h00000000000000000000000000000000, ifmt_slice_result[127:96], 32'h00000000, ifmt_slice_result[63:16], 16'h0000 };
  assign _030_ = _106_[$signed({ 23'h000000, lane_aux[2:0], 6'h00 }) +: 64];
  wire [319:0] _107_ = { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign _031_ = _107_[$signed({ 23'h000000, lane_aux[2:0], 6'h00 }) +: 64];
  wire [319:0] _108_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _032_ = _108_[$signed(_039_) +: 32];
  wire [319:0] _109_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _033_ = _109_[$signed(_040_) +: 32];
  wire [319:0] _110_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _035_ = _110_[$signed(_042_) +: 32];
  wire [319:0] _111_ = 320'h00000008000000170000000b00000034000000050000000a00000005000000020000000800000007;
  assign _034_ = _111_[$signed(_041_) +: 32];
  assign _036_ = operands_i[63:0] >> (* src = "FPNewBlackbox.preprocessed.v:7466.493-7466.563" *) \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$589.$result ;
  assign _037_ = operands_i[63:0] >> (* src = "FPNewBlackbox.preprocessed.v:7470.260-7470.323" *) _000_;
  assign _038_ = operands_i[63:0] >> (* src = "FPNewBlackbox.preprocessed.v:7473.261-7473.346" *) _016_;
  assign _039_ = _006_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign _040_ = _007_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign _042_ = _009_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign _041_ = _008_ - (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0" *) 32'd32;
  assign { _043_[31:26], _023_[31:6] } = 32'd4 - (* src = "FPNewBlackbox.preprocessed.v:7211.102-7211.109" *) dst_fmt_i;
  assign { _044_[31:26], _024_[31:6] } = 32'd4 - (* src = "FPNewBlackbox.preprocessed.v:7211.102-7211.109" *) src_fmt_i;
  assign dst_fmt = dst_fmt_is_int ? (* src = "FPNewBlackbox.preprocessed.v:7335.20-7335.58" *) { 1'h0, int_fmt_i } : dst_fmt_i;
  assign \gen_num_lanes[0].local_result  = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7580.28-7580.347" *) \gen_num_lanes[0].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign \gen_num_lanes[1].local_result  = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7580.28-7580.347" *) \gen_num_lanes[1].active_lane.op_result  : { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o };
  assign lane_status[4:0] = \gen_num_lanes[0].active_lane.out_valid  ? (* src = "FPNewBlackbox.preprocessed.v:7581.40-7581.86" *) \gen_num_lanes[0].active_lane.op_status  : 5'h00;
  assign lane_status[9:5] = lane_out_valid[1] ? (* src = "FPNewBlackbox.preprocessed.v:7581.40-7581.86" *) \gen_num_lanes[1].active_lane.op_status  : 5'h00;
  assign result_o = lane_aux[4] ? (* src = "FPNewBlackbox.preprocessed.v:7680.21-7680.131" *) _030_ : _031_;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7552.8-7576.7" *)
  \$paramod$c93a4c7035490d3070510f71b74f71f6511466e7\fpnew_cast_multi_BB75A_A18A7  \gen_num_lanes[0].active_lane.genblk1.genblk1.genblk1.lane_instance.i_fpnew_cast_multi  (
    .aux_i({ dst_fmt_is_int, vectorial_op_i, dst_fmt }),
    .aux_o(lane_aux[4:0]),
    .busy_o(lane_busy[0]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(extension_bit_o),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ is_boxed_i[12], is_boxed_i[9], is_boxed_i[6], is_boxed_i[3], is_boxed_i[0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(\gen_num_lanes[0].active_lane.local_operands [31:0]),
    .out_ready_i(out_ready_i),
    .out_valid_o(\gen_num_lanes[0].active_lane.out_valid ),
    .result_o(\gen_num_lanes[0].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(\gen_num_lanes[0].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(tag_o)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:7552.8-7576.7" *)
  \$paramod$c93a4c7035490d3070510f71b74f71f6511466e7\fpnew_cast_multi_BB75A_A18A7  \gen_num_lanes[1].active_lane.genblk1.genblk1.genblk1.lane_instance.i_fpnew_cast_multi  (
    .aux_i({ dst_fmt_is_int, vectorial_op_i, dst_fmt }),
    .aux_o(lane_aux[9:5]),
    .busy_o(lane_busy[1]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(fmt_slice_result[287]),
    .flush_i(flush_i),
    .in_ready_o(lane_in_ready[1]),
    .in_valid_i(\gen_num_lanes[1].active_lane.in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ is_boxed_i[12], is_boxed_i[9], is_boxed_i[6], is_boxed_i[3], is_boxed_i[0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(\gen_num_lanes[1].active_lane.local_operands [31:0]),
    .out_ready_i(\gen_num_lanes[1].active_lane.out_ready ),
    .out_valid_o(\gen_num_lanes[1].active_lane.out_valid ),
    .result_o(\gen_num_lanes[1].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(\gen_num_lanes[1].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(lane_tags[3:2])
  );
  assign _023_[5:0] = 6'h00;
  assign _024_[5:0] = 6'h00;
  assign _043_[25:0] = _023_[31:6];
  assign _044_[25:0] = _024_[31:6];
  assign aux_data = { dst_fmt_is_int, vectorial_op_i, dst_fmt };
  assign \boxed_2op.sv2v_autoblock_4.fmt  = 32'd5;
  assign { fmt_slice_result[319:288], fmt_slice_result[286:0] } = { extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], fmt_slice_result[287], extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, extension_bit_o, \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2180.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7333$2181.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$2182.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7334$2183.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1003.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1100.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1197.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1775.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1872.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7466$1969.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7473$1270.fmt  = 3'hx;
  assign \fpnew_pkg_fp_width$func$FPNewBlackbox.preprocessed.v:7473$2042.fmt  = 3'hx;
  assign \fpnew_pkg_int_width$func$FPNewBlackbox.preprocessed.v:7470$1231.ifmt  = 2'hx;
  assign \fpnew_pkg_int_width$func$FPNewBlackbox.preprocessed.v:7470$2003.ifmt  = 2'hx;
  assign \gen_num_lanes[0].active_lane.in_valid  = in_valid_i;
  assign \gen_num_lanes[0].active_lane.local_operands [95:32] = { operands_i[159:128], operands_i[95:64] };
  assign \gen_num_lanes[0].active_lane.out_ready  = out_ready_i;
  assign \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_11.i  = 32'd3;
  assign \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_11.i  = 32'd3;
  assign { ifmt_slice_result[255:128], ifmt_slice_result[95:64], ifmt_slice_result[15:0] } = 176'h00000000000000000000000000000000000000000000;
  assign is_boxed_1op = { is_boxed_i[12], is_boxed_i[9], is_boxed_i[6], is_boxed_i[3], is_boxed_i[0] };
  assign is_boxed_2op = { is_boxed_i[13:12], is_boxed_i[10:9], is_boxed_i[7:6], is_boxed_i[4:3], is_boxed_i[1:0] };
  assign lane_ext_bit = { fmt_slice_result[287], extension_bit_o };
  assign lane_in_ready[0] = in_ready_o;
  assign lane_out_valid[0] = \gen_num_lanes[0].active_lane.out_valid ;
  assign lane_tags[1:0] = tag_o;
  assign out_valid_o = \gen_num_lanes[0].active_lane.out_valid ;
  assign \output_processing.sv2v_autoblock_12.i  = 32'd2;
  assign \output_processing.temp_status  = status_o;
  assign result_fmt = lane_aux[2:0];
  assign result_fmt_is_int = lane_aux[4];
  assign result_is_vector = lane_aux[3];
  assign target_aux_d[0] = dst_is_cpk;
  assign \target_regs.byp_pipe_aux_q [3] = dst_is_cpk;
  assign \target_regs.byp_pipe_ready [1] = \gen_num_lanes[1].active_lane.out_ready ;
  assign \target_regs.byp_pipe_valid_q [0] = \gen_num_lanes[1].active_lane.in_valid ;
  assign \target_regs.sv2v_tmp_49222  = \gen_num_lanes[1].active_lane.in_valid ;
  assign \target_regs.sv2v_tmp_A0A5D [1] = dst_is_cpk;
  assign vectorial_op = vectorial_op_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\lzc" *)
(* src = "FPNewBlackbox.preprocessed.v:357.1-429.10" *)
module \$paramod$f63662f9b52d30dc01537496e32d795d2895a3c6\lzc (in_i, cnt_o, empty_o);
  (* src = "FPNewBlackbox.preprocessed.v:370.32-370.37" *)
  output [5:0] cnt_o;
  wire [5:0] cnt_o;
  (* src = "FPNewBlackbox.preprocessed.v:371.14-371.21" *)
  output empty_o;
  wire empty_o;
  (* src = "FPNewBlackbox.preprocessed.v:385.17-385.18" *)
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:382.22-382.28" *)
  wire [52:0] \gen_lzc.in_tmp ;
  (* src = "FPNewBlackbox.preprocessed.v:379.37-379.46" *)
  wire [317:0] \gen_lzc.index_lut ;
  (* src = "FPNewBlackbox.preprocessed.v:381.48-381.59" *)
  (* unused_bits = "378 379 380 381 382 383" *)
  wire [383:0] \gen_lzc.index_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:380.34-380.43" *)
  (* unused_bits = "63" *)
  wire [63:0] \gen_lzc.sel_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:369.27-369.31" *)
  input [52:0] in_i;
  wire [52:0] in_i;
  assign empty_o = ~ (* src = "FPNewBlackbox.preprocessed.v:426.49-426.62" *) \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [31] = in_i[52] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[51];
  assign \gen_lzc.sel_nodes [32] = in_i[50] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[49];
  assign \gen_lzc.sel_nodes [33] = in_i[48] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[47];
  assign \gen_lzc.sel_nodes [34] = in_i[46] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[45];
  assign \gen_lzc.sel_nodes [35] = in_i[44] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[43];
  assign \gen_lzc.sel_nodes [36] = in_i[42] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[41];
  assign \gen_lzc.sel_nodes [37] = in_i[40] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[39];
  assign \gen_lzc.sel_nodes [38] = in_i[38] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[37];
  assign \gen_lzc.sel_nodes [39] = in_i[36] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[35];
  assign \gen_lzc.sel_nodes [40] = in_i[34] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[33];
  assign \gen_lzc.sel_nodes [41] = in_i[32] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[31];
  assign \gen_lzc.sel_nodes [42] = in_i[30] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[29];
  assign \gen_lzc.sel_nodes [43] = in_i[28] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[27];
  assign \gen_lzc.sel_nodes [44] = in_i[26] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[25];
  assign \gen_lzc.sel_nodes [45] = in_i[24] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[23];
  assign \gen_lzc.sel_nodes [46] = in_i[22] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[21];
  assign \gen_lzc.sel_nodes [47] = in_i[20] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[19];
  assign \gen_lzc.sel_nodes [48] = in_i[18] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[17];
  assign \gen_lzc.sel_nodes [49] = in_i[16] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[15];
  assign \gen_lzc.sel_nodes [50] = in_i[14] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[13];
  assign \gen_lzc.sel_nodes [51] = in_i[12] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[11];
  assign \gen_lzc.sel_nodes [52] = in_i[10] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[9];
  assign \gen_lzc.sel_nodes [53] = in_i[8] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[7];
  assign \gen_lzc.sel_nodes [54] = in_i[6] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[5];
  assign \gen_lzc.sel_nodes [55] = in_i[4] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[3];
  assign \gen_lzc.sel_nodes [56] = in_i[2] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[1];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [2];
  assign \gen_lzc.sel_nodes [1] = \gen_lzc.sel_nodes [3] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [4];
  assign \gen_lzc.sel_nodes [2] = \gen_lzc.sel_nodes [5] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [6];
  assign \gen_lzc.sel_nodes [3] = \gen_lzc.sel_nodes [7] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [8];
  assign \gen_lzc.sel_nodes [4] = \gen_lzc.sel_nodes [9] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [10];
  assign \gen_lzc.sel_nodes [5] = \gen_lzc.sel_nodes [11] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [12];
  assign \gen_lzc.sel_nodes [7] = \gen_lzc.sel_nodes [15] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [16];
  assign \gen_lzc.sel_nodes [8] = \gen_lzc.sel_nodes [17] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [18];
  assign \gen_lzc.sel_nodes [9] = \gen_lzc.sel_nodes [19] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [20];
  assign \gen_lzc.sel_nodes [10] = \gen_lzc.sel_nodes [21] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [22];
  assign \gen_lzc.sel_nodes [11] = \gen_lzc.sel_nodes [23] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [24];
  assign \gen_lzc.sel_nodes [12] = \gen_lzc.sel_nodes [25] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [26];
  assign \gen_lzc.sel_nodes [6] = \gen_lzc.sel_nodes [27] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) in_i[0];
  assign \gen_lzc.sel_nodes [15] = \gen_lzc.sel_nodes [31] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [32];
  assign \gen_lzc.sel_nodes [16] = \gen_lzc.sel_nodes [33] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [34];
  assign \gen_lzc.sel_nodes [17] = \gen_lzc.sel_nodes [35] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [36];
  assign \gen_lzc.sel_nodes [18] = \gen_lzc.sel_nodes [37] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [38];
  assign \gen_lzc.sel_nodes [19] = \gen_lzc.sel_nodes [39] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [40];
  assign \gen_lzc.sel_nodes [20] = \gen_lzc.sel_nodes [41] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [42];
  assign \gen_lzc.sel_nodes [21] = \gen_lzc.sel_nodes [43] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [44];
  assign \gen_lzc.sel_nodes [22] = \gen_lzc.sel_nodes [45] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [46];
  assign \gen_lzc.sel_nodes [23] = \gen_lzc.sel_nodes [47] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [48];
  assign \gen_lzc.sel_nodes [24] = \gen_lzc.sel_nodes [49] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [50];
  assign \gen_lzc.sel_nodes [25] = \gen_lzc.sel_nodes [51] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [52];
  assign \gen_lzc.sel_nodes [26] = \gen_lzc.sel_nodes [53] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [54];
  assign \gen_lzc.sel_nodes [27] = \gen_lzc.sel_nodes [55] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [56];
  assign \gen_lzc.index_nodes [191:186] = in_i[52] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h00 : 6'h01;
  assign \gen_lzc.index_nodes [197:192] = in_i[50] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h02 : 6'h03;
  assign \gen_lzc.index_nodes [203:198] = in_i[48] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h04 : 6'h05;
  assign \gen_lzc.index_nodes [209:204] = in_i[46] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h06 : 6'h07;
  assign \gen_lzc.index_nodes [215:210] = in_i[44] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h08 : 6'h09;
  assign \gen_lzc.index_nodes [221:216] = in_i[42] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h0a : 6'h0b;
  assign \gen_lzc.index_nodes [227:222] = in_i[40] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h0c : 6'h0d;
  assign \gen_lzc.index_nodes [233:228] = in_i[38] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h0e : 6'h0f;
  assign \gen_lzc.index_nodes [239:234] = in_i[36] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h10 : 6'h11;
  assign \gen_lzc.index_nodes [245:240] = in_i[34] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h12 : 6'h13;
  assign \gen_lzc.index_nodes [251:246] = in_i[32] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h14 : 6'h15;
  assign \gen_lzc.index_nodes [257:252] = in_i[30] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h16 : 6'h17;
  assign \gen_lzc.index_nodes [263:258] = in_i[28] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h18 : 6'h19;
  assign \gen_lzc.index_nodes [269:264] = in_i[26] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h1a : 6'h1b;
  assign \gen_lzc.index_nodes [275:270] = in_i[24] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h1c : 6'h1d;
  assign \gen_lzc.index_nodes [281:276] = in_i[22] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h1e : 6'h1f;
  assign \gen_lzc.index_nodes [287:282] = in_i[20] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h20 : 6'h21;
  assign \gen_lzc.index_nodes [293:288] = in_i[18] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h22 : 6'h23;
  assign \gen_lzc.index_nodes [299:294] = in_i[16] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h24 : 6'h25;
  assign \gen_lzc.index_nodes [305:300] = in_i[14] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h26 : 6'h27;
  assign \gen_lzc.index_nodes [311:306] = in_i[12] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h28 : 6'h29;
  assign \gen_lzc.index_nodes [317:312] = in_i[10] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h2a : 6'h2b;
  assign \gen_lzc.index_nodes [323:318] = in_i[8] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h2c : 6'h2d;
  assign \gen_lzc.index_nodes [329:324] = in_i[6] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h2e : 6'h2f;
  assign \gen_lzc.index_nodes [335:330] = in_i[4] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h30 : 6'h31;
  assign \gen_lzc.index_nodes [341:336] = in_i[2] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 6'h32 : 6'h33;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [11:6] : \gen_lzc.index_nodes [17:12];
  assign \gen_lzc.index_nodes [11:6] = \gen_lzc.sel_nodes [3] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [23:18] : \gen_lzc.index_nodes [29:24];
  assign \gen_lzc.index_nodes [17:12] = \gen_lzc.sel_nodes [5] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [35:30] : \gen_lzc.index_nodes [41:36];
  assign \gen_lzc.index_nodes [23:18] = \gen_lzc.sel_nodes [7] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [47:42] : \gen_lzc.index_nodes [53:48];
  assign \gen_lzc.index_nodes [29:24] = \gen_lzc.sel_nodes [9] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [59:54] : \gen_lzc.index_nodes [65:60];
  assign \gen_lzc.index_nodes [35:30] = \gen_lzc.sel_nodes [11] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [71:66] : \gen_lzc.index_nodes [77:72];
  assign \gen_lzc.index_nodes [41:36] = \gen_lzc.sel_nodes [6] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [83:78] : 6'h00;
  assign \gen_lzc.index_nodes [47:42] = \gen_lzc.sel_nodes [15] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [95:90] : \gen_lzc.index_nodes [101:96];
  assign \gen_lzc.index_nodes [53:48] = \gen_lzc.sel_nodes [17] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [107:102] : \gen_lzc.index_nodes [113:108];
  assign \gen_lzc.index_nodes [59:54] = \gen_lzc.sel_nodes [19] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [119:114] : \gen_lzc.index_nodes [125:120];
  assign \gen_lzc.index_nodes [65:60] = \gen_lzc.sel_nodes [21] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [131:126] : \gen_lzc.index_nodes [137:132];
  assign \gen_lzc.index_nodes [71:66] = \gen_lzc.sel_nodes [23] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [143:138] : \gen_lzc.index_nodes [149:144];
  assign \gen_lzc.index_nodes [77:72] = \gen_lzc.sel_nodes [25] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [155:150] : \gen_lzc.index_nodes [161:156];
  assign \gen_lzc.index_nodes [83:78] = \gen_lzc.sel_nodes [27] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [167:162] : \gen_lzc.index_nodes [173:168];
  assign \gen_lzc.index_nodes [95:90] = \gen_lzc.sel_nodes [31] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [191:186] : \gen_lzc.index_nodes [197:192];
  assign \gen_lzc.index_nodes [101:96] = \gen_lzc.sel_nodes [33] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [203:198] : \gen_lzc.index_nodes [209:204];
  assign \gen_lzc.index_nodes [107:102] = \gen_lzc.sel_nodes [35] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [215:210] : \gen_lzc.index_nodes [221:216];
  assign \gen_lzc.index_nodes [113:108] = \gen_lzc.sel_nodes [37] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [227:222] : \gen_lzc.index_nodes [233:228];
  assign \gen_lzc.index_nodes [119:114] = \gen_lzc.sel_nodes [39] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [239:234] : \gen_lzc.index_nodes [245:240];
  assign \gen_lzc.index_nodes [125:120] = \gen_lzc.sel_nodes [41] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [251:246] : \gen_lzc.index_nodes [257:252];
  assign \gen_lzc.index_nodes [131:126] = \gen_lzc.sel_nodes [43] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [263:258] : \gen_lzc.index_nodes [269:264];
  assign \gen_lzc.index_nodes [137:132] = \gen_lzc.sel_nodes [45] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [275:270] : \gen_lzc.index_nodes [281:276];
  assign \gen_lzc.index_nodes [143:138] = \gen_lzc.sel_nodes [47] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [287:282] : \gen_lzc.index_nodes [293:288];
  assign \gen_lzc.index_nodes [149:144] = \gen_lzc.sel_nodes [49] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [299:294] : \gen_lzc.index_nodes [305:300];
  assign \gen_lzc.index_nodes [155:150] = \gen_lzc.sel_nodes [51] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [311:306] : \gen_lzc.index_nodes [317:312];
  assign \gen_lzc.index_nodes [161:156] = \gen_lzc.sel_nodes [53] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [323:318] : \gen_lzc.index_nodes [329:324];
  assign \gen_lzc.index_nodes [167:162] = \gen_lzc.sel_nodes [55] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [335:330] : \gen_lzc.index_nodes [341:336];
  assign \gen_lzc.index_nodes [173:168] = in_i[0] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) 6'h34 : 6'h00;
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd53;
  assign \gen_lzc.in_tmp  = { in_i[0], in_i[1], in_i[2], in_i[3], in_i[4], in_i[5], in_i[6], in_i[7], in_i[8], in_i[9], in_i[10], in_i[11], in_i[12], in_i[13], in_i[14], in_i[15], in_i[16], in_i[17], in_i[18], in_i[19], in_i[20], in_i[21], in_i[22], in_i[23], in_i[24], in_i[25], in_i[26], in_i[27], in_i[28], in_i[29], in_i[30], in_i[31], in_i[32], in_i[33], in_i[34], in_i[35], in_i[36], in_i[37], in_i[38], in_i[39], in_i[40], in_i[41], in_i[42], in_i[43], in_i[44], in_i[45], in_i[46], in_i[47], in_i[48], in_i[49], in_i[50], in_i[51], in_i[52] };
  assign \gen_lzc.index_lut  = 318'h34cf2c70beeb6caeaa689e69648e28607de75c6da6585d65544d24503ce34c2ca2481c61440c2040;
  assign { \gen_lzc.index_nodes [377:342], \gen_lzc.index_nodes [185:174], \gen_lzc.index_nodes [89:84], \gen_lzc.index_nodes [5:0] } = { 54'h00000000d00000, cnt_o };
  assign { \gen_lzc.sel_nodes [62:57], \gen_lzc.sel_nodes [30:28], \gen_lzc.sel_nodes [14:13] } = { 5'h00, in_i[0], 2'h0, in_i[0], 1'h0, \gen_lzc.sel_nodes [6] };
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_divsqrt_multi_1A2E7_2C16F" *)
(* src = "FPNewBlackbox.preprocessed.v:4314.1-4687.10" *)
module \$paramod$f6673df41972a38bb7f5225f99782dfef82340fd\fpnew_divsqrt_multi_1A2E7_2C16F (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, dst_fmt_i, tag_i, aux_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, aux_o, out_valid_o, out_ready_i, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:4448.4-4452.120" *)
  wire _000_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _001_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire [1:0] _002_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _003_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _004_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _005_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _006_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire [1:0] _007_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _008_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _009_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire [1:0] _010_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire _011_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire [1:0] _012_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire [1:0] _013_;
  (* src = "FPNewBlackbox.preprocessed.v:4523.2-4572.5" *)
  wire [1:0] _014_;
  (* src = "FPNewBlackbox.preprocessed.v:4520.23-4520.64" *)
  wire _015_;
  (* src = "FPNewBlackbox.preprocessed.v:4520.22-4520.76" *)
  wire _016_;
  (* src = "FPNewBlackbox.preprocessed.v:4521.24-4521.65" *)
  wire _017_;
  (* src = "FPNewBlackbox.preprocessed.v:4521.23-4521.77" *)
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  (* src = "FPNewBlackbox.preprocessed.v:4520.37-4520.63" *)
  wire _025_;
  (* src = "FPNewBlackbox.preprocessed.v:4533.9-4533.33" *)
  wire _026_;
  (* src = "FPNewBlackbox.preprocessed.v:4521.38-4521.64" *)
  wire _027_;
  (* src = "FPNewBlackbox.preprocessed.v:4447.55-4447.79" *)
  wire _028_;
  (* src = "FPNewBlackbox.preprocessed.v:4520.80-4520.88" *)
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  (* src = "FPNewBlackbox.preprocessed.v:4452.52-4452.117" *)
  wire _036_;
  (* src = "FPNewBlackbox.preprocessed.v:4597.21-4597.36" *)
  wire [31:0] adjusted_result;
  (* src = "FPNewBlackbox.preprocessed.v:4382.38-4382.43" *)
  input [4:0] aux_i;
  wire [4:0] aux_i;
  (* src = "FPNewBlackbox.preprocessed.v:4390.39-4390.44" *)
  output [4:0] aux_o;
  wire [4:0] aux_o;
  (* src = "FPNewBlackbox.preprocessed.v:4393.14-4393.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:4373.13-4373.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:4515.6-4515.18" *)
  wire data_is_held;
  (* src = "FPNewBlackbox.preprocessed.v:4507.7-4507.16" *)
  wire div_valid;
  (* src = "FPNewBlackbox.preprocessed.v:4491.12-4491.23" *)
  wire [1:0] divsqrt_fmt;
  (* src = "FPNewBlackbox.preprocessed.v:4492.14-4492.30" *)
  wire [127:0] divsqrt_operands;
  (* src = "FPNewBlackbox.preprocessed.v:4380.19-4380.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:4399.13-4399.22" *)
  wire [2:0] dst_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:4388.14-4388.29" *)
  output extension_bit_o;
  wire extension_bit_o;
  (* src = "FPNewBlackbox.preprocessed.v:4385.13-4385.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:4446.9-4446.16" *)
  wire \gen_input_pipeline[0].reg_ena ;
  (* src = "FPNewBlackbox.preprocessed.v:4598.20-4598.33" *)
  reg [31:0] held_result_q;
  (* src = "FPNewBlackbox.preprocessed.v:4600.12-4600.25" *)
  reg [4:0] held_status_q;
  (* src = "FPNewBlackbox.preprocessed.v:4514.6-4514.17" *)
  wire hold_result;
  (* src = "FPNewBlackbox.preprocessed.v:4506.6-4506.14" *)
  wire in_ready;
  (* src = "FPNewBlackbox.preprocessed.v:4384.14-4384.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:4383.13-4383.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:4400.7-4400.17" *)
  wire in_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:4406.216-4406.230" *)
  wire [9:0] inp_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:4404.248-4404.266" *)
  wire [5:0] inp_pipe_dst_fmt_q;
  (* src = "FPNewBlackbox.preprocessed.v:4403.220-4403.233" *)
  wire [7:0] inp_pipe_op_q;
  (* src = "FPNewBlackbox.preprocessed.v:4401.1006-4401.1025" *)
  wire [127:0] inp_pipe_operands_q;
  (* src = "FPNewBlackbox.preprocessed.v:4408.24-4408.38" *)
  wire [0:1] inp_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:4402.156-4402.175" *)
  wire [5:0] inp_pipe_rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:4405.316-4405.330" *)
  wire [3:0] inp_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:4407.23-4407.39" *)
  wire [0:1] inp_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:4493.6-4493.18" *)
  wire input_is_fp8;
  (* src = "FPNewBlackbox.preprocessed.v:4376.19-4376.29" *)
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  (* src = "FPNewBlackbox.preprocessed.v:4379.19-4379.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:4398.13-4398.17" *)
  wire [3:0] op_q;
  (* src = "FPNewBlackbox.preprocessed.v:4511.7-4511.18" *)
  wire op_starting;
  (* src = "FPNewBlackbox.preprocessed.v:4375.33-4375.43" *)
  input [63:0] operands_i;
  wire [63:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:4396.27-4396.37" *)
  wire [63:0] operands_q;
  (* src = "FPNewBlackbox.preprocessed.v:4628.216-4628.230" *)
  wire [4:0] out_pipe_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:4630.24-4630.38" *)
  wire out_pipe_ready;
  (* src = "FPNewBlackbox.preprocessed.v:4625.172-4625.189" *)
  wire [31:0] out_pipe_result_q;
  (* src = "FPNewBlackbox.preprocessed.v:4626.156-4626.173" *)
  wire [4:0] out_pipe_status_q;
  (* src = "FPNewBlackbox.preprocessed.v:4627.316-4627.330" *)
  wire [1:0] out_pipe_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:4629.23-4629.39" *)
  wire out_pipe_valid_q;
  (* src = "FPNewBlackbox.preprocessed.v:4513.7-4513.16" *)
  wire out_ready;
  (* src = "FPNewBlackbox.preprocessed.v:4392.13-4392.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:4512.6-4512.15" *)
  wire out_valid;
  (* src = "FPNewBlackbox.preprocessed.v:4391.14-4391.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:4580.31-4580.43" *)
  reg [4:0] result_aux_q;
  (* src = "FPNewBlackbox.preprocessed.v:4621.21-4621.29" *)
  wire [31:0] result_d;
  (* src = "FPNewBlackbox.preprocessed.v:4578.6-4578.21" *)
  wire result_is_fp8_q;
  (* src = "FPNewBlackbox.preprocessed.v:4386.28-4386.36" *)
  output [31:0] result_o;
  wire [31:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:4579.56-4579.68" *)
  reg [1:0] result_tag_q;
  (* src = "FPNewBlackbox.preprocessed.v:4377.19-4377.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:4397.13-4397.23" *)
  wire [2:0] rnd_mode_q;
  (* src = "FPNewBlackbox.preprocessed.v:4374.13-4374.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:4508.7-4508.17" *)
  wire sqrt_valid;
  (* src = "FPNewBlackbox.preprocessed.v:4518.12-4518.19" *)
  wire [1:0] state_d;
  (* src = "FPNewBlackbox.preprocessed.v:4517.12-4517.19" *)
  reg [1:0] state_q;
  (* src = "FPNewBlackbox.preprocessed.v:4622.13-4622.21" *)
  wire [4:0] status_d;
  (* src = "FPNewBlackbox.preprocessed.v:4387.20-4387.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:4637.57-4637.71" *)
  wire [2:1] sv2v_tmp_20175;
  (* src = "FPNewBlackbox.preprocessed.v:4424.32-4424.46" *)
  wire [5:1] sv2v_tmp_22101;
  (* src = "FPNewBlackbox.preprocessed.v:4640.32-4640.46" *)
  wire [5:1] sv2v_tmp_2BF73;
  (* src = "FPNewBlackbox.preprocessed.v:4634.13-4634.27" *)
  wire [5:1] sv2v_tmp_2ED07;
  (* src = "FPNewBlackbox.preprocessed.v:4415.13-4415.27" *)
  wire [4:1] sv2v_tmp_4BFFB;
  (* src = "FPNewBlackbox.preprocessed.v:4418.13-4418.27" *)
  wire [3:1] sv2v_tmp_54055;
  (* src = "FPNewBlackbox.preprocessed.v:4631.21-4631.35" *)
  wire [32:1] sv2v_tmp_6C30D;
  (* src = "FPNewBlackbox.preprocessed.v:4427.13-4427.27" *)
  wire sv2v_tmp_73AEA;
  (* src = "FPNewBlackbox.preprocessed.v:4421.57-4421.71" *)
  wire [2:1] sv2v_tmp_74963;
  (* src = "FPNewBlackbox.preprocessed.v:4409.21-4409.35" *)
  wire [64:1] sv2v_tmp_83757;
  (* src = "FPNewBlackbox.preprocessed.v:4412.13-4412.27" *)
  wire [3:1] sv2v_tmp_857E9;
  (* src = "FPNewBlackbox.preprocessed.v:4643.13-4643.27" *)
  wire sv2v_tmp_D06FD;
  (* src = "FPNewBlackbox.preprocessed.v:4381.63-4381.68" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:4389.64-4389.69" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:4516.6-4516.15" *)
  wire unit_busy;
  (* src = "FPNewBlackbox.preprocessed.v:4510.7-4510.16" *)
  wire unit_done;
  (* src = "FPNewBlackbox.preprocessed.v:4509.7-4509.17" *)
  wire unit_ready;
  (* src = "FPNewBlackbox.preprocessed.v:4596.14-4596.25" *)
  (* unused_bits = "32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63" *)
  wire [63:0] unit_result;
  (* src = "FPNewBlackbox.preprocessed.v:4599.13-4599.24" *)
  wire [4:0] unit_status;
  assign \gen_input_pipeline[0].reg_ena  = in_ready_o & (* src = "FPNewBlackbox.preprocessed.v:4453.21-4453.60" *) in_valid_i;
  assign _015_ = inp_pipe_valid_q[1] & (* src = "FPNewBlackbox.preprocessed.v:4520.23-4520.64" *) _025_;
  assign _016_ = _015_ & (* src = "FPNewBlackbox.preprocessed.v:4520.22-4520.76" *) in_ready;
  assign div_valid = _016_ & (* src = "FPNewBlackbox.preprocessed.v:4520.21-4520.88" *) _029_;
  assign _017_ = inp_pipe_valid_q[1] & (* src = "FPNewBlackbox.preprocessed.v:4521.24-4521.65" *) _027_;
  assign _018_ = _017_ & (* src = "FPNewBlackbox.preprocessed.v:4521.23-4521.77" *) in_ready;
  assign sqrt_valid = _018_ & (* src = "FPNewBlackbox.preprocessed.v:4521.22-4521.89" *) _029_;
  (* src = "FPNewBlackbox.preprocessed.v:4573.2-4577.23" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) state_q <= 2'h0;
    else if (_023_) state_q <= state_d;
  (* src = "FPNewBlackbox.preprocessed.v:4586.2-4590.219" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) result_tag_q <= 2'h0;
    else if (op_starting) result_tag_q <= inp_pipe_tag_q[1:0];
  (* src = "FPNewBlackbox.preprocessed.v:4591.2-4595.169" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) result_aux_q <= 5'h00;
    else if (op_starting) result_aux_q <= inp_pipe_aux_q[4:0];
  (* src = "FPNewBlackbox.preprocessed.v:4619.2-4619.91" *)
  always @(posedge clk_i)
    if (hold_result) held_result_q <= unit_result[31:0];
  reg [63:0] _048_;
  (* src = "FPNewBlackbox.preprocessed.v:4454.4-4458.2698" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _048_ <= 64'h0000000000000000;
    else if (\gen_input_pipeline[0].reg_ena ) _048_ <= operands_i;
  assign inp_pipe_operands_q[63:0] = _048_;
  (* src = "FPNewBlackbox.preprocessed.v:4620.2-4620.87" *)
  always @(posedge clk_i)
    if (hold_result) held_status_q <= unit_status;
  reg [4:0] _050_;
  (* src = "FPNewBlackbox.preprocessed.v:4479.4-4483.331" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _050_ <= 5'h00;
    else if (\gen_input_pipeline[0].reg_ena ) _050_ <= aux_i;
  assign inp_pipe_aux_q[4:0] = _050_;
  reg [1:0] _051_;
  (* src = "FPNewBlackbox.preprocessed.v:4474.4-4478.481" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _051_ <= 2'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _051_ <= tag_i;
  assign inp_pipe_tag_q[1:0] = _051_;
  reg [2:0] _052_;
  (* src = "FPNewBlackbox.preprocessed.v:4469.4-4473.391" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _052_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _052_ <= dst_fmt_i;
  assign inp_pipe_dst_fmt_q[2:0] = _052_;
  reg [3:0] _053_;
  (* src = "FPNewBlackbox.preprocessed.v:4464.4-4468.334" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _053_ <= 4'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _053_ <= op_i;
  assign inp_pipe_op_q[3:0] = _053_;
  reg \inp_pipe_valid_q_reg[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:4448.4-4452.120" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_valid_q_reg[0]  <= 1'h0;
    else if (_022_) \inp_pipe_valid_q_reg[0]  <= _000_;
  assign inp_pipe_valid_q[1] = \inp_pipe_valid_q_reg[0] ;
  reg [2:0] _055_;
  (* src = "FPNewBlackbox.preprocessed.v:4459.4-4463.256" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _055_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _055_ <= rnd_mode_i;
  assign inp_pipe_rnd_mode_q[2:0] = _055_;
  assign _019_ = { _030_, out_ready_i, flush_i } != 3'h4;
  assign _020_ = { _031_, unit_done, flush_i } != 3'h4;
  assign _021_ = { _032_, _026_, flush_i } != 3'h4;
  assign _022_ = | { in_ready_o, flush_i };
  assign _023_ = & { _020_, _021_, _019_ };
  assign _024_ = | { _031_, _030_ };
  assign _025_ = inp_pipe_op_q[3:0] == (* src = "FPNewBlackbox.preprocessed.v:4520.37-4520.63" *) 4'h4;
  assign _026_ = inp_pipe_valid_q[1] && (* src = "FPNewBlackbox.preprocessed.v:4559.10-4559.34" *) unit_ready;
  assign _027_ = inp_pipe_op_q[3:0] != (* src = "FPNewBlackbox.preprocessed.v:4521.38-4521.64" *) 4'h4;
  assign _028_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4447.55-4447.79" *) inp_pipe_valid_q[1];
  assign _029_ = ~ (* src = "FPNewBlackbox.preprocessed.v:4521.81-4521.89" *) flush_i;
  assign in_ready_o = in_ready | (* src = "FPNewBlackbox.preprocessed.v:4447.31-4447.79" *) _028_;
  assign op_starting = div_valid | (* src = "FPNewBlackbox.preprocessed.v:4522.23-4522.45" *) sqrt_valid;
  assign state_d = flush_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4567.7-4567.14|FPNewBlackbox.preprocessed.v:4567.3-4571.6" *) 2'h0 : _002_;
  assign out_valid_o = flush_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4567.7-4567.14|FPNewBlackbox.preprocessed.v:4567.3-4571.6" *) 1'h0 : _001_;
  assign unit_busy = flush_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4567.7-4567.14|FPNewBlackbox.preprocessed.v:4567.3-4571.6" *) 1'h0 : _003_;
  assign _014_ = out_ready_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4557.9-4557.18|FPNewBlackbox.preprocessed.v:4557.5-4563.8" *) _013_ : 2'hx;
  assign _009_ = out_ready_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4557.9-4557.18|FPNewBlackbox.preprocessed.v:4557.5-4563.8" *) _011_ : 1'h0;
  assign _013_ = _026_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4542.11-4542.35|FPNewBlackbox.preprocessed.v:4542.7-4545.10" *) 2'h1 : 2'h0;
  assign _011_ = _026_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4542.11-4542.35|FPNewBlackbox.preprocessed.v:4542.7-4545.10" *) 1'h1 : 1'h0;
  assign _012_ = out_ready_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4540.10-4540.19|FPNewBlackbox.preprocessed.v:4540.6-4550.9" *) _013_ : 2'h2;
  assign _008_ = out_ready_i ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4540.10-4540.19|FPNewBlackbox.preprocessed.v:4540.6-4550.9" *) 1'h0 : 1'h1;
  assign _010_ = unit_done ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4538.9-4538.18|FPNewBlackbox.preprocessed.v:4538.5-4551.8" *) _012_ : 2'hx;
  assign _004_ = unit_done ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4538.9-4538.18|FPNewBlackbox.preprocessed.v:4538.5-4551.8" *) _008_ : 1'h0;
  assign _005_ = unit_done ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4538.9-4538.18|FPNewBlackbox.preprocessed.v:4538.5-4551.8" *) _009_ : 1'h0;
  assign _006_ = unit_done ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4538.9-4538.18|FPNewBlackbox.preprocessed.v:4538.5-4551.8" *) 1'h1 : 1'h0;
  assign _007_ = _026_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:4533.9-4533.33|FPNewBlackbox.preprocessed.v:4533.5-4534.21" *) 2'h1 : 2'hx;
  function [1:0] _083_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _083_ = b[1:0];
      3'b?1?:
        _083_ = b[3:2];
      3'b1??:
        _083_ = b[5:4];
      default:
        _083_ = a;
    endcase
  endfunction
  assign _002_ = _083_(2'h0, { _007_, _010_, _014_ }, { _032_, _031_, _030_ });
  function [0:0] _084_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _084_ = b[0:0];
      3'b?1?:
        _084_ = b[1:1];
      3'b1??:
        _084_ = b[2:2];
      default:
        _084_ = a;
    endcase
  endfunction
  assign in_ready = _084_(1'h0, { 1'h1, _005_, _009_ }, { _032_, _031_, _030_ });
  assign _032_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *) state_q;
  assign _003_ = _024_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *) 1'h1 : 1'h0;
  assign data_is_held = _030_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *) 1'h1 : 1'h0;
  assign hold_result = _031_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *) _004_ : 1'h0;
  function [0:0] _089_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _089_ = b[0:0];
      2'b1?:
        _089_ = b[1:1];
      default:
        _089_ = a;
    endcase
  endfunction
  assign _001_ = _089_(1'h0, { _006_, 1'h1 }, { _031_, _030_ });
  assign _030_ = state_q == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *) 2'h2;
  assign _031_ = state_q == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4530.3-4566.10" *) 2'h1;
  function [1:0] _092_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4495.3-4501.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _092_ = b[1:0];
      3'b?1?:
        _092_ = b[3:2];
      3'b1??:
        _092_ = b[5:4];
      default:
        _092_ = a;
    endcase
  endfunction
  assign divsqrt_fmt = _092_(2'h2, 6'h07, { _035_, _034_, _033_ });
  assign _033_ = inp_pipe_dst_fmt_q[2:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4495.3-4501.10" *) 3'h4;
  assign _034_ = inp_pipe_dst_fmt_q[2:0] == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4495.3-4501.10" *) 3'h1;
  assign _035_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:4495.3-4501.10" *) inp_pipe_dst_fmt_q[2:0];
  assign busy_o = | (* src = "FPNewBlackbox.preprocessed.v:4686.18-4686.66" *) { unit_busy, inp_pipe_valid_q[1], out_valid_o, in_valid_i };
  assign _036_ = in_ready_o ? (* src = "FPNewBlackbox.preprocessed.v:4452.52-4452.117" *) in_valid_i : 1'hx;
  assign _000_ = flush_i ? (* src = "FPNewBlackbox.preprocessed.v:4452.34-4452.118" *) 1'h0 : _036_;
  assign result_o = data_is_held ? (* src = "FPNewBlackbox.preprocessed.v:4623.21-4623.67" *) held_result_q : unit_result[31:0];
  assign status_o = data_is_held ? (* src = "FPNewBlackbox.preprocessed.v:4624.21-4624.63" *) held_status_q : unit_status;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:4602.19-4617.3" *)
  div_sqrt_top_mvp i_divsqrt_lei (
    .Clk_CI(clk_i),
    .Div_start_SI(div_valid),
    .Done_SO(unit_done),
    .Fflags_SO(unit_status),
    .Format_sel_SI(divsqrt_fmt),
    .Kill_SI(flush_i),
    .Operand_a_DI({ 32'h00000000, inp_pipe_operands_q[31:0] }),
    .Operand_b_DI({ 32'h00000000, inp_pipe_operands_q[63:32] }),
    .Precision_ctl_SI(6'h00),
    .RM_SI(inp_pipe_rnd_mode_q[2:0]),
    .Ready_SO(unit_ready),
    .Result_DO(unit_result),
    .Rst_RBI(rst_ni),
    .Sqrt_start_SI(sqrt_valid)
  );
  assign adjusted_result = unit_result[31:0];
  assign aux_o = result_aux_q;
  assign divsqrt_operands = { 32'h00000000, inp_pipe_operands_q[63:32], 32'h00000000, inp_pipe_operands_q[31:0] };
  assign dst_fmt_q = inp_pipe_dst_fmt_q[2:0];
  assign extension_bit_o = 1'h1;
  assign in_valid_q = inp_pipe_valid_q[1];
  assign inp_pipe_aux_q[9:5] = aux_i;
  assign inp_pipe_dst_fmt_q[5:3] = dst_fmt_i;
  assign inp_pipe_op_q[7:4] = op_i;
  assign inp_pipe_operands_q[127:64] = operands_i;
  assign inp_pipe_ready = { in_ready_o, in_ready };
  assign inp_pipe_rnd_mode_q[5:3] = rnd_mode_i;
  assign inp_pipe_tag_q[3:2] = tag_i;
  assign inp_pipe_valid_q[0] = in_valid_i;
  assign input_is_fp8 = 1'h0;
  assign op_q = inp_pipe_op_q[3:0];
  assign operands_q = inp_pipe_operands_q[63:0];
  assign out_pipe_aux_q = result_aux_q;
  assign out_pipe_ready = out_ready_i;
  assign out_pipe_result_q = result_o;
  assign out_pipe_status_q = status_o;
  assign out_pipe_tag_q = result_tag_q;
  assign out_pipe_valid_q = out_valid_o;
  assign out_ready = out_ready_i;
  assign out_valid = out_valid_o;
  assign result_d = result_o;
  assign result_is_fp8_q = 1'h0;
  assign rnd_mode_q = inp_pipe_rnd_mode_q[2:0];
  assign status_d = status_o;
  assign sv2v_tmp_20175 = result_tag_q;
  assign sv2v_tmp_22101 = aux_i;
  assign sv2v_tmp_2BF73 = result_aux_q;
  assign sv2v_tmp_2ED07 = status_o;
  assign sv2v_tmp_4BFFB = op_i;
  assign sv2v_tmp_54055 = dst_fmt_i;
  assign sv2v_tmp_6C30D = result_o;
  assign sv2v_tmp_73AEA = in_valid_i;
  assign sv2v_tmp_74963 = tag_i;
  assign sv2v_tmp_83757 = operands_i;
  assign sv2v_tmp_857E9 = rnd_mode_i;
  assign sv2v_tmp_D06FD = out_valid_o;
  assign tag_o = result_tag_q;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_rounding" *)
(* src = "FPNewBlackbox.preprocessed.v:7696.1-7736.10" *)
module \$paramod\fpnew_rounding\AbsWidth=32'00000000000000000000000000011111 (abs_value_i, sign_i, round_sticky_bits_i, rnd_mode_i, effective_subtraction_i, abs_rounded_o, sign_o, exact_zero_o);
  (* src = "FPNewBlackbox.preprocessed.v:7717.2-7732.5" *)
  wire _00_;
  (* src = "FPNewBlackbox.preprocessed.v:7734.25-7734.58" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:7734.64-7734.98" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:7735.61-7735.81" *)
  wire _03_;
  (* src = "FPNewBlackbox.preprocessed.v:7735.19-7735.58" *)
  wire _04_;
  (* src = "FPNewBlackbox.preprocessed.v:7728.47-7728.54" *)
  wire _05_;
  wire _06_;
  wire _07_;
  wire [1:0] _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  (* src = "FPNewBlackbox.preprocessed.v:7727.24-7727.44" *)
  wire _14_;
  (* src = "FPNewBlackbox.preprocessed.v:7727.24-7727.60" *)
  wire _15_;
  (* src = "FPNewBlackbox.preprocessed.v:7728.24-7728.61" *)
  wire _16_;
  (* src = "FPNewBlackbox.preprocessed.v:7712.31-7712.44" *)
  output [30:0] abs_rounded_o;
  wire [30:0] abs_rounded_o;
  (* src = "FPNewBlackbox.preprocessed.v:7707.30-7707.41" *)
  input [30:0] abs_value_i;
  wire [30:0] abs_value_i;
  (* src = "FPNewBlackbox.preprocessed.v:7711.13-7711.36" *)
  input effective_subtraction_i;
  wire effective_subtraction_i;
  (* src = "FPNewBlackbox.preprocessed.v:7714.14-7714.26" *)
  output exact_zero_o;
  wire exact_zero_o;
  (* src = "FPNewBlackbox.preprocessed.v:7710.19-7710.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:7709.19-7709.38" *)
  input [1:0] round_sticky_bits_i;
  wire [1:0] round_sticky_bits_i;
  (* src = "FPNewBlackbox.preprocessed.v:7715.6-7715.14" *)
  wire round_up;
  (* src = "FPNewBlackbox.preprocessed.v:7708.13-7708.19" *)
  input sign_i;
  wire sign_i;
  (* src = "FPNewBlackbox.preprocessed.v:7713.14-7713.20" *)
  output sign_o;
  wire sign_o;
  assign abs_rounded_o = abs_value_i + (* src = "FPNewBlackbox.preprocessed.v:7733.25-7733.47" *) round_up;
  assign _01_ = ! (* src = "FPNewBlackbox.preprocessed.v:7734.25-7734.58" *) abs_value_i;
  assign exact_zero_o = _01_ && (* src = "FPNewBlackbox.preprocessed.v:7734.24-7734.99" *) _02_;
  assign _04_ = exact_zero_o && (* src = "FPNewBlackbox.preprocessed.v:7735.19-7735.58" *) effective_subtraction_i;
  assign _05_ = ~ (* src = "FPNewBlackbox.preprocessed.v:7728.47-7728.54" *) sign_i;
  function [0:0] _22_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _22_ = b[0:0];
      3'b?1?:
        _22_ = b[1:1];
      3'b1??:
        _22_ = b[2:2];
      default:
        _22_ = a;
    endcase
  endfunction
  assign _00_ = _22_(1'hx, { 1'h0, abs_value_i[0], 1'h1 }, { _09_, _07_, _06_ });
  assign _06_ = round_sticky_bits_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) 2'h3;
  assign _07_ = round_sticky_bits_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) 2'h2;
  assign _09_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) { _08_[1], _02_ };
  assign _02_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) round_sticky_bits_i;
  assign _08_[1] = round_sticky_bits_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) 2'h1;
  function [0:0] _28_;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *)
    (* parallel_case *)
    casez (s)
      5'b????1:
        _28_ = b[0:0];
      5'b???1?:
        _28_ = b[1:1];
      5'b??1??:
        _28_ = b[2:2];
      5'b?1???:
        _28_ = b[3:3];
      5'b1????:
        _28_ = b[4:4];
      default:
        _28_ = a;
    endcase
  endfunction
  assign round_up = _28_(1'h1, { _00_, 1'h0, _15_, _16_, round_sticky_bits_i[1] }, { _10_, _13_, _03_, _12_, _11_ });
  assign _11_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h4;
  assign _12_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h3;
  assign _03_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h2;
  assign _13_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h1;
  assign _10_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) rnd_mode_i;
  assign _14_ = | (* src = "FPNewBlackbox.preprocessed.v:7728.24-7728.44" *) round_sticky_bits_i;
  assign _15_ = _14_ ? (* src = "FPNewBlackbox.preprocessed.v:7727.24-7727.60" *) sign_i : 1'h0;
  assign _16_ = _14_ ? (* src = "FPNewBlackbox.preprocessed.v:7728.24-7728.61" *) _05_ : 1'h0;
  assign sign_o = _04_ ? (* src = "FPNewBlackbox.preprocessed.v:7735.19-7735.90" *) _03_ : sign_i;
  assign _08_[0] = _02_;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fpnew_rounding" *)
(* src = "FPNewBlackbox.preprocessed.v:7696.1-7736.10" *)
module \$paramod\fpnew_rounding\AbsWidth=32'00000000000000000000000000100000 (abs_value_i, sign_i, round_sticky_bits_i, rnd_mode_i, effective_subtraction_i, abs_rounded_o, sign_o, exact_zero_o);
  (* src = "FPNewBlackbox.preprocessed.v:7717.2-7732.5" *)
  wire _00_;
  (* src = "FPNewBlackbox.preprocessed.v:7734.25-7734.58" *)
  wire _01_;
  (* src = "FPNewBlackbox.preprocessed.v:7734.64-7734.98" *)
  wire _02_;
  (* src = "FPNewBlackbox.preprocessed.v:7735.61-7735.81" *)
  wire _03_;
  (* src = "FPNewBlackbox.preprocessed.v:7735.19-7735.58" *)
  wire _04_;
  (* src = "FPNewBlackbox.preprocessed.v:7728.47-7728.54" *)
  wire _05_;
  wire _06_;
  wire _07_;
  wire [1:0] _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  (* src = "FPNewBlackbox.preprocessed.v:7727.24-7727.44" *)
  wire _14_;
  (* src = "FPNewBlackbox.preprocessed.v:7727.24-7727.60" *)
  wire _15_;
  (* src = "FPNewBlackbox.preprocessed.v:7728.24-7728.61" *)
  wire _16_;
  (* src = "FPNewBlackbox.preprocessed.v:7712.31-7712.44" *)
  output [31:0] abs_rounded_o;
  wire [31:0] abs_rounded_o;
  (* src = "FPNewBlackbox.preprocessed.v:7707.30-7707.41" *)
  input [31:0] abs_value_i;
  wire [31:0] abs_value_i;
  (* src = "FPNewBlackbox.preprocessed.v:7711.13-7711.36" *)
  input effective_subtraction_i;
  wire effective_subtraction_i;
  (* src = "FPNewBlackbox.preprocessed.v:7714.14-7714.26" *)
  output exact_zero_o;
  wire exact_zero_o;
  (* src = "FPNewBlackbox.preprocessed.v:7710.19-7710.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:7709.19-7709.38" *)
  input [1:0] round_sticky_bits_i;
  wire [1:0] round_sticky_bits_i;
  (* src = "FPNewBlackbox.preprocessed.v:7715.6-7715.14" *)
  wire round_up;
  (* src = "FPNewBlackbox.preprocessed.v:7708.13-7708.19" *)
  input sign_i;
  wire sign_i;
  (* src = "FPNewBlackbox.preprocessed.v:7713.14-7713.20" *)
  output sign_o;
  wire sign_o;
  assign abs_rounded_o = abs_value_i + (* src = "FPNewBlackbox.preprocessed.v:7733.25-7733.47" *) round_up;
  assign _01_ = ! (* src = "FPNewBlackbox.preprocessed.v:7734.25-7734.58" *) abs_value_i;
  assign exact_zero_o = _01_ && (* src = "FPNewBlackbox.preprocessed.v:7734.24-7734.99" *) _02_;
  assign _04_ = exact_zero_o && (* src = "FPNewBlackbox.preprocessed.v:7735.19-7735.58" *) effective_subtraction_i;
  assign _05_ = ~ (* src = "FPNewBlackbox.preprocessed.v:7728.47-7728.54" *) sign_i;
  function [0:0] _22_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _22_ = b[0:0];
      3'b?1?:
        _22_ = b[1:1];
      3'b1??:
        _22_ = b[2:2];
      default:
        _22_ = a;
    endcase
  endfunction
  assign _00_ = _22_(1'hx, { 1'h0, abs_value_i[0], 1'h1 }, { _09_, _07_, _06_ });
  assign _06_ = round_sticky_bits_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) 2'h3;
  assign _07_ = round_sticky_bits_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) 2'h2;
  assign _09_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) { _08_[1], _02_ };
  assign _02_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) round_sticky_bits_i;
  assign _08_[1] = round_sticky_bits_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7720.5-7725.12" *) 2'h1;
  function [0:0] _28_;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *)
    (* parallel_case *)
    casez (s)
      5'b????1:
        _28_ = b[0:0];
      5'b???1?:
        _28_ = b[1:1];
      5'b??1??:
        _28_ = b[2:2];
      5'b?1???:
        _28_ = b[3:3];
      5'b1????:
        _28_ = b[4:4];
      default:
        _28_ = a;
    endcase
  endfunction
  assign round_up = _28_(1'h1, { _00_, 1'h0, _15_, _16_, round_sticky_bits_i[1] }, { _10_, _13_, _03_, _12_, _11_ });
  assign _11_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h4;
  assign _12_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h3;
  assign _03_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h2;
  assign _13_ = rnd_mode_i == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) 3'h1;
  assign _10_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:7718.3-7731.10" *) rnd_mode_i;
  assign _14_ = | (* src = "FPNewBlackbox.preprocessed.v:7728.24-7728.44" *) round_sticky_bits_i;
  assign _15_ = _14_ ? (* src = "FPNewBlackbox.preprocessed.v:7727.24-7727.60" *) sign_i : 1'h0;
  assign _16_ = _14_ ? (* src = "FPNewBlackbox.preprocessed.v:7728.24-7728.61" *) _05_ : 1'h0;
  assign sign_o = _04_ ? (* src = "FPNewBlackbox.preprocessed.v:7735.19-7735.90" *) _03_ : sign_i;
  assign _08_[0] = _02_;
endmodule

(* dynports =  1  *)
(* hdlname = "\\iteration_div_sqrt_mvp" *)
(* src = "FPNewBlackbox.preprocessed.v:2597.1-2627.10" *)
module \$paramod\iteration_div_sqrt_mvp\WIDTH=s32'00000000000000000000000000111010 (A_DI, B_DI, Div_enable_SI, Div_start_dly_SI, Sqrt_enable_SI, D_DI, D_DO, Sum_DO, Carry_out_DO);
  (* src = "FPNewBlackbox.preprocessed.v:2626.35-2626.46" *)
  wire [58:0] _0_;
  (* src = "FPNewBlackbox.preprocessed.v:2622.21-2622.38" *)
  wire _1_;
  (* src = "FPNewBlackbox.preprocessed.v:2609.27-2609.31" *)
  input [57:0] A_DI;
  wire [57:0] A_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2610.27-2610.31" *)
  input [57:0] B_DI;
  wire [57:0] B_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2617.14-2617.26" *)
  output Carry_out_DO;
  wire Carry_out_DO;
  (* src = "FPNewBlackbox.preprocessed.v:2620.7-2620.12" *)
  wire Cin_D;
  (* src = "FPNewBlackbox.preprocessed.v:2614.19-2614.23" *)
  input [1:0] D_DI;
  wire [1:0] D_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2615.20-2615.24" *)
  output [1:0] D_DO;
  wire [1:0] D_DO;
  (* src = "FPNewBlackbox.preprocessed.v:2618.7-2618.16" *)
  wire D_carry_D;
  (* src = "FPNewBlackbox.preprocessed.v:2611.13-2611.26" *)
  input Div_enable_SI;
  wire Div_enable_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2612.13-2612.29" *)
  input Div_start_dly_SI;
  wire Div_start_dly_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2619.7-2619.17" *)
  wire Sqrt_cin_D;
  (* src = "FPNewBlackbox.preprocessed.v:2613.13-2613.27" *)
  input Sqrt_enable_SI;
  wire Sqrt_enable_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2616.28-2616.34" *)
  output [57:0] Sum_DO;
  wire [57:0] Sum_DO;
  assign _0_ = A_DI + (* src = "FPNewBlackbox.preprocessed.v:2626.35-2626.46" *) B_DI;
  assign { Carry_out_DO, Sum_DO } = _0_ + (* src = "FPNewBlackbox.preprocessed.v:2626.34-2626.55" *) Cin_D;
  assign Sqrt_cin_D = Sqrt_enable_SI && (* src = "FPNewBlackbox.preprocessed.v:2624.22-2624.49" *) D_carry_D;
  assign D_DO[0] = ~ (* src = "FPNewBlackbox.preprocessed.v:2621.19-2621.27" *) D_DI[0];
  assign D_DO[1] = ~ (* src = "FPNewBlackbox.preprocessed.v:2622.19-2622.39" *) _1_;
  assign D_carry_D = D_DI[1] | (* src = "FPNewBlackbox.preprocessed.v:2623.21-2623.38" *) D_DI[0];
  assign Cin_D = Div_enable_SI ? (* src = "FPNewBlackbox.preprocessed.v:2625.18-2625.51" *) 1'h0 : Sqrt_cin_D;
  assign _1_ = D_DI[1] ^ (* src = "FPNewBlackbox.preprocessed.v:2622.21-2622.38" *) D_DI[0];
endmodule

(* dynports =  1  *)
(* hdlname = "\\lzc" *)
(* src = "FPNewBlackbox.preprocessed.v:357.1-429.10" *)
module \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0 (in_i, cnt_o, empty_o);
  (* src = "FPNewBlackbox.preprocessed.v:370.32-370.37" *)
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  (* src = "FPNewBlackbox.preprocessed.v:371.14-371.21" *)
  output empty_o;
  wire empty_o;
  (* src = "FPNewBlackbox.preprocessed.v:385.17-385.18" *)
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:382.22-382.28" *)
  wire [3:0] \gen_lzc.in_tmp ;
  (* src = "FPNewBlackbox.preprocessed.v:379.37-379.46" *)
  wire [7:0] \gen_lzc.index_lut ;
  (* src = "FPNewBlackbox.preprocessed.v:381.48-381.59" *)
  (* unused_bits = "6 7" *)
  wire [7:0] \gen_lzc.index_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:380.34-380.43" *)
  (* unused_bits = "3" *)
  wire [3:0] \gen_lzc.sel_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:369.27-369.31" *)
  input [3:0] in_i;
  wire [3:0] in_i;
  assign empty_o = ~ (* src = "FPNewBlackbox.preprocessed.v:426.49-426.62" *) \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [1] = in_i[0] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[1];
  assign \gen_lzc.sel_nodes [2] = in_i[2] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [2];
  assign \gen_lzc.index_nodes [3:2] = in_i[0] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 2'h0 : 2'h1;
  assign \gen_lzc.index_nodes [5:4] = in_i[2] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 2'h2 : 2'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [3:2] : \gen_lzc.index_nodes [5:4];
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd4;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 8'he4;
  assign \gen_lzc.index_nodes [1:0] = cnt_o;
endmodule

(* dynports =  1  *)
(* hdlname = "\\lzc" *)
(* src = "FPNewBlackbox.preprocessed.v:357.1-429.10" *)
module \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0 (in_i, cnt_o, empty_o);
  (* src = "FPNewBlackbox.preprocessed.v:370.32-370.37" *)
  output [2:0] cnt_o;
  wire [2:0] cnt_o;
  (* src = "FPNewBlackbox.preprocessed.v:371.14-371.21" *)
  output empty_o;
  wire empty_o;
  (* src = "FPNewBlackbox.preprocessed.v:385.17-385.18" *)
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  (* src = "FPNewBlackbox.preprocessed.v:382.22-382.28" *)
  wire [4:0] \gen_lzc.in_tmp ;
  (* src = "FPNewBlackbox.preprocessed.v:379.37-379.46" *)
  wire [14:0] \gen_lzc.index_lut ;
  (* src = "FPNewBlackbox.preprocessed.v:381.48-381.59" *)
  (* unused_bits = "21 22 23" *)
  wire [23:0] \gen_lzc.index_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:380.34-380.43" *)
  (* unused_bits = "7" *)
  wire [7:0] \gen_lzc.sel_nodes ;
  (* src = "FPNewBlackbox.preprocessed.v:369.27-369.31" *)
  input [4:0] in_i;
  wire [4:0] in_i;
  assign empty_o = ~ (* src = "FPNewBlackbox.preprocessed.v:426.49-426.62" *) \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [3] = in_i[0] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[1];
  assign \gen_lzc.sel_nodes [4] = in_i[2] | (* src = "FPNewBlackbox.preprocessed.v:404.51-404.86" *) in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) in_i[4];
  assign \gen_lzc.sel_nodes [1] = \gen_lzc.sel_nodes [3] | (* src = "FPNewBlackbox.preprocessed.v:420.50-420.149" *) \gen_lzc.sel_nodes [4];
  assign \gen_lzc.index_nodes [11:9] = in_i[0] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 3'h0 : 3'h1;
  assign \gen_lzc.index_nodes [14:12] = in_i[2] ? (* src = "FPNewBlackbox.preprocessed.v:405.79-405.194" *) 3'h2 : 3'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [5:3] : \gen_lzc.index_nodes [8:6];
  assign \gen_lzc.index_nodes [5:3] = \gen_lzc.sel_nodes [3] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) \gen_lzc.index_nodes [11:9] : \gen_lzc.index_nodes [14:12];
  assign \gen_lzc.index_nodes [8:6] = in_i[4] ? (* src = "FPNewBlackbox.preprocessed.v:421.78-421.287" *) 3'h4 : 3'h0;
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd5;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 15'h4688;
  assign { \gen_lzc.index_nodes [20:15], \gen_lzc.index_nodes [2:0] } = { 6'h04, cnt_o };
  assign { \gen_lzc.sel_nodes [6:5], \gen_lzc.sel_nodes [2] } = { 1'h0, in_i[4], in_i[4] };
endmodule

(* hdlname = "\\FPNewBlackbox" *)
(* dynports =  1  *)
(* top =  1  *)
(* src = "FPNewBlackbox.preprocessed.v:7946.1-8062.10" *)
module FPNewBlackbox(clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  (* src = "FPNewBlackbox.preprocessed.v:8008.14-8008.20" *)
  output busy_o;
  wire busy_o;
  (* src = "FPNewBlackbox.preprocessed.v:7984.13-7984.18" *)
  input clk_i;
  wire clk_i;
  (* src = "FPNewBlackbox.preprocessed.v:7994.19-7994.28" *)
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:8002.13-8002.20" *)
  input flush_i;
  wire flush_i;
  (* src = "FPNewBlackbox.preprocessed.v:8001.14-8001.24" *)
  output in_ready_o;
  wire in_ready_o;
  (* src = "FPNewBlackbox.preprocessed.v:8000.13-8000.23" *)
  input in_valid_i;
  wire in_valid_i;
  (* src = "FPNewBlackbox.preprocessed.v:7997.19-7997.28" *)
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:7989.19-7989.23" *)
  input [3:0] op_i;
  wire [3:0] op_i;
  (* src = "FPNewBlackbox.preprocessed.v:7990.13-7990.21" *)
  input op_mod_i;
  wire op_mod_i;
  (* src = "FPNewBlackbox.preprocessed.v:7986.44-7986.54" *)
  input [191:0] operands_i;
  wire [191:0] operands_i;
  (* src = "FPNewBlackbox.preprocessed.v:8007.13-8007.24" *)
  input out_ready_i;
  wire out_ready_i;
  (* src = "FPNewBlackbox.preprocessed.v:8006.14-8006.25" *)
  output out_valid_o;
  wire out_valid_o;
  (* src = "FPNewBlackbox.preprocessed.v:8003.28-8003.36" *)
  output [63:0] result_o;
  wire [63:0] result_o;
  (* src = "FPNewBlackbox.preprocessed.v:7987.19-7987.29" *)
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  (* src = "FPNewBlackbox.preprocessed.v:7985.13-7985.19" *)
  input rst_ni;
  wire rst_ni;
  (* src = "FPNewBlackbox.preprocessed.v:7993.19-7993.28" *)
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  (* src = "FPNewBlackbox.preprocessed.v:8004.20-8004.28" *)
  output [4:0] status_o;
  wire [4:0] status_o;
  (* src = "FPNewBlackbox.preprocessed.v:7999.31-7999.36" *)
  input [1:0] tag_i;
  wire [1:0] tag_i;
  (* src = "FPNewBlackbox.preprocessed.v:8005.32-8005.37" *)
  output [1:0] tag_o;
  wire [1:0] tag_o;
  (* src = "FPNewBlackbox.preprocessed.v:7998.13-7998.27" *)
  input vectorial_op_i;
  wire vectorial_op_i;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:8040.4-8061.3" *)
  \$paramod$a5bdbc9899e3bac0f3e285776bfd67a1a2425e90\fpnew_top_21317_11D0A  inst (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .int_fmt_i(int_fmt_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(out_ready_i),
    .out_valid_o(out_valid_o),
    .result_o(result_o),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(status_o),
    .tag_i(tag_i),
    .tag_o(tag_o),
    .vectorial_op_i(vectorial_op_i)
  );
endmodule

(* dynports =  1  *)
(* hdlname = "\\control_mvp" *)
(* src = "FPNewBlackbox.preprocessed.v:430.1-2458.10" *)
module control_mvp(Clk_CI, Rst_RBI, Div_start_SI, Sqrt_start_SI, Start_SI, Kill_SI, Special_case_SBI, Special_case_dly_SBI, Precision_ctl_SI, Format_sel_SI, Numerator_DI, Exp_num_DI, Denominator_DI, Exp_den_DI, Div_start_dly_SO, Sqrt_start_dly_SO, Div_enable_SO, Sqrt_enable_SO, Full_precision_SO, FP32_SO, FP64_SO
, FP16_SO, FP16ALT_SO, Ready_SO, Done_SO, Mant_result_prenorm_DO, Exp_result_prenorm_DO);
  (* src = "FPNewBlackbox.preprocessed.v:705.2-713.24" *)
  wire [5:0] _000_;
  (* src = "FPNewBlackbox.preprocessed.v:667.2-677.35" *)
  wire _001_;
  (* src = "FPNewBlackbox.preprocessed.v:659.2-665.28" *)
  wire _002_;
  (* src = "FPNewBlackbox.preprocessed.v:714.2-726.20" *)
  wire _003_;
  (* src = "FPNewBlackbox.preprocessed.v:727.2-739.25" *)
  wire _004_;
  (* src = "FPNewBlackbox.preprocessed.v:687.2-697.37" *)
  wire _005_;
  (* src = "FPNewBlackbox.preprocessed.v:679.2-685.29" *)
  wire _006_;
  (* src = "FPNewBlackbox.preprocessed.v:500.2-508.64" *)
  wire [53:0] _007_;
  (* src = "FPNewBlackbox.preprocessed.v:2317.4-2364.12" *)
  wire [56:0] _008_;
  (* src = "FPNewBlackbox.preprocessed.v:500.2-508.64" *)
  wire [53:0] _009_;
  (* src = "FPNewBlackbox.preprocessed.v:2317.4-2364.12" *)
  wire [56:0] _010_;
  (* src = "FPNewBlackbox.preprocessed.v:538.2-657.10" *)
  wire [5:0] _011_;
  (* src = "FPNewBlackbox.preprocessed.v:2317.4-2364.12" *)
  wire [56:0] _012_;
  (* src = "FPNewBlackbox.preprocessed.v:538.2-657.10" *)
  wire [5:0] _013_;
  (* src = "FPNewBlackbox.preprocessed.v:2317.4-2364.12" *)
  wire [56:0] _014_;
  (* src = "FPNewBlackbox.preprocessed.v:538.2-657.10" *)
  wire [5:0] _015_;
  (* src = "FPNewBlackbox.preprocessed.v:538.2-657.10" *)
  wire [5:0] _016_;
  (* src = "FPNewBlackbox.preprocessed.v:2451.50-2451.75" *)
  wire [12:0] _017_;
  (* src = "FPNewBlackbox.preprocessed.v:2451.49-2451.90" *)
  wire [12:0] _018_;
  (* src = "FPNewBlackbox.preprocessed.v:711.18-711.32" *)
  (* unused_bits = "6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  (* src = "FPNewBlackbox.preprocessed.v:2032.598-2032.623" *)
  wire _025_;
  (* src = "FPNewBlackbox.preprocessed.v:515.12-515.32" *)
  wire _026_;
  (* src = "FPNewBlackbox.preprocessed.v:662.12-662.36" *)
  wire _027_;
  (* src = "FPNewBlackbox.preprocessed.v:682.12-682.37" *)
  wire _028_;
  (* src = "FPNewBlackbox.preprocessed.v:702.25-702.64" *)
  wire _029_;
  (* src = "FPNewBlackbox.preprocessed.v:2449.192-2449.203" *)
  wire [11:0] _030_;
  (* src = "FPNewBlackbox.preprocessed.v:2449.149-2449.190" *)
  wire _031_;
  (* src = "FPNewBlackbox.preprocessed.v:502.25-502.49" *)
  wire [24:0] _032_;
  (* src = "FPNewBlackbox.preprocessed.v:504.24-504.41" *)
  wire [53:0] _033_;
  (* src = "FPNewBlackbox.preprocessed.v:506.25-506.49" *)
  wire [11:0] _034_;
  (* src = "FPNewBlackbox.preprocessed.v:508.25-508.49" *)
  wire [8:0] _035_;
  (* src = "FPNewBlackbox.preprocessed.v:702.56-702.64" *)
  wire _036_;
  (* src = "FPNewBlackbox.preprocessed.v:897.133-897.167" *)
  wire _037_;
  (* src = "FPNewBlackbox.preprocessed.v:897.97-897.131" *)
  wire _038_;
  (* src = "FPNewBlackbox.preprocessed.v:897.61-897.95" *)
  wire _039_;
  (* src = "FPNewBlackbox.preprocessed.v:897.25-897.59" *)
  wire _040_;
  (* src = "FPNewBlackbox.preprocessed.v:898.34-898.48" *)
  wire [28:0] _041_;
  (* src = "FPNewBlackbox.preprocessed.v:899.34-899.48" *)
  wire [28:0] _042_;
  (* src = "FPNewBlackbox.preprocessed.v:900.34-900.48" *)
  wire [28:0] _043_;
  (* src = "FPNewBlackbox.preprocessed.v:905.20-905.28" *)
  wire [57:0] _044_;
  (* src = "FPNewBlackbox.preprocessed.v:906.20-906.28" *)
  wire [57:0] _045_;
  (* src = "FPNewBlackbox.preprocessed.v:907.20-907.28" *)
  wire [57:0] _046_;
  (* src = "FPNewBlackbox.preprocessed.v:911.133-911.167" *)
  wire _047_;
  (* src = "FPNewBlackbox.preprocessed.v:911.97-911.131" *)
  wire _048_;
  (* src = "FPNewBlackbox.preprocessed.v:911.61-911.95" *)
  wire _049_;
  (* src = "FPNewBlackbox.preprocessed.v:911.25-911.59" *)
  wire _050_;
  (* src = "FPNewBlackbox.preprocessed.v:912.34-912.48" *)
  wire [15:0] _051_;
  (* src = "FPNewBlackbox.preprocessed.v:913.34-913.48" *)
  wire [15:0] _052_;
  (* src = "FPNewBlackbox.preprocessed.v:914.34-914.48" *)
  wire [15:0] _053_;
  (* src = "FPNewBlackbox.preprocessed.v:918.133-918.167" *)
  wire _054_;
  (* src = "FPNewBlackbox.preprocessed.v:918.97-918.131" *)
  wire _055_;
  (* src = "FPNewBlackbox.preprocessed.v:918.61-918.95" *)
  wire _056_;
  (* src = "FPNewBlackbox.preprocessed.v:918.25-918.59" *)
  wire _057_;
  (* src = "FPNewBlackbox.preprocessed.v:919.34-919.48" *)
  wire [12:0] _058_;
  (* src = "FPNewBlackbox.preprocessed.v:920.34-920.48" *)
  wire [12:0] _059_;
  (* src = "FPNewBlackbox.preprocessed.v:921.34-921.48" *)
  wire [12:0] _060_;
  (* src = "FPNewBlackbox.preprocessed.v:702.26-702.51" *)
  wire _061_;
  (* src = "FPNewBlackbox.preprocessed.v:708.12-708.35" *)
  wire _062_;
  wire [1:0] _063_;
  wire _064_;
  wire [2:0] _065_;
  wire _066_;
  wire [1:0] _067_;
  wire _068_;
  wire [2:0] _069_;
  wire _070_;
  wire [2:0] _071_;
  wire _072_;
  wire [2:0] _073_;
  wire _074_;
  wire [2:0] _075_;
  wire _076_;
  wire [2:0] _077_;
  wire _078_;
  wire [2:0] _079_;
  wire _080_;
  wire [2:0] _081_;
  wire _082_;
  wire [2:0] _083_;
  wire _084_;
  wire [2:0] _085_;
  wire _086_;
  wire [2:0] _087_;
  wire _088_;
  wire [2:0] _089_;
  wire _090_;
  wire [2:0] _091_;
  wire _092_;
  wire [2:0] _093_;
  wire _094_;
  wire [2:0] _095_;
  wire _096_;
  wire [1:0] _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire [5:0] _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire [2:0] _124_;
  wire _125_;
  (* src = "FPNewBlackbox.preprocessed.v:702.40-702.51" *)
  wire _126_;
  (* src = "FPNewBlackbox.preprocessed.v:1593.18-1593.62" *)
  wire [57:0] _127_;
  (* src = "FPNewBlackbox.preprocessed.v:1596.18-1596.62" *)
  wire [57:0] _128_;
  (* src = "FPNewBlackbox.preprocessed.v:1601.18-1601.57" *)
  wire [57:0] _129_;
  (* src = "FPNewBlackbox.preprocessed.v:1604.18-1604.62" *)
  wire [57:0] _130_;
  (* src = "FPNewBlackbox.preprocessed.v:1607.18-1607.62" *)
  wire [57:0] _131_;
  (* src = "FPNewBlackbox.preprocessed.v:1612.18-1612.57" *)
  wire [57:0] _132_;
  (* src = "FPNewBlackbox.preprocessed.v:1615.18-1615.62" *)
  wire [57:0] _133_;
  (* src = "FPNewBlackbox.preprocessed.v:1618.18-1618.62" *)
  wire [57:0] _134_;
  (* src = "FPNewBlackbox.preprocessed.v:1623.18-1623.57" *)
  wire [57:0] _135_;
  (* src = "FPNewBlackbox.preprocessed.v:1626.18-1626.62" *)
  wire [57:0] _136_;
  (* src = "FPNewBlackbox.preprocessed.v:1629.18-1629.62" *)
  wire [57:0] _137_;
  (* src = "FPNewBlackbox.preprocessed.v:1634.18-1634.57" *)
  wire [57:0] _138_;
  (* src = "FPNewBlackbox.preprocessed.v:1637.18-1637.62" *)
  wire [57:0] _139_;
  (* src = "FPNewBlackbox.preprocessed.v:1640.18-1640.62" *)
  wire [57:0] _140_;
  (* src = "FPNewBlackbox.preprocessed.v:1645.18-1645.57" *)
  wire [57:0] _141_;
  (* src = "FPNewBlackbox.preprocessed.v:1648.18-1648.62" *)
  wire [57:0] _142_;
  (* src = "FPNewBlackbox.preprocessed.v:1651.18-1651.62" *)
  wire [57:0] _143_;
  (* src = "FPNewBlackbox.preprocessed.v:1656.18-1656.57" *)
  wire [57:0] _144_;
  (* src = "FPNewBlackbox.preprocessed.v:1659.18-1659.62" *)
  wire [57:0] _145_;
  (* src = "FPNewBlackbox.preprocessed.v:1662.18-1662.62" *)
  wire [57:0] _146_;
  (* src = "FPNewBlackbox.preprocessed.v:1667.18-1667.57" *)
  wire [57:0] _147_;
  (* src = "FPNewBlackbox.preprocessed.v:1670.18-1670.62" *)
  wire [57:0] _148_;
  (* src = "FPNewBlackbox.preprocessed.v:1673.18-1673.62" *)
  wire [57:0] _149_;
  (* src = "FPNewBlackbox.preprocessed.v:1678.18-1678.57" *)
  wire [57:0] _150_;
  (* src = "FPNewBlackbox.preprocessed.v:1681.18-1681.62" *)
  wire [57:0] _151_;
  (* src = "FPNewBlackbox.preprocessed.v:1684.18-1684.62" *)
  wire [57:0] _152_;
  (* src = "FPNewBlackbox.preprocessed.v:1689.18-1689.57" *)
  wire [57:0] _153_;
  (* src = "FPNewBlackbox.preprocessed.v:1692.18-1692.62" *)
  wire [57:0] _154_;
  (* src = "FPNewBlackbox.preprocessed.v:1695.18-1695.62" *)
  wire [57:0] _155_;
  (* src = "FPNewBlackbox.preprocessed.v:1700.18-1700.57" *)
  wire [57:0] _156_;
  (* src = "FPNewBlackbox.preprocessed.v:1703.18-1703.62" *)
  wire [57:0] _157_;
  (* src = "FPNewBlackbox.preprocessed.v:1706.18-1706.62" *)
  wire [57:0] _158_;
  (* src = "FPNewBlackbox.preprocessed.v:1711.18-1711.57" *)
  wire [57:0] _159_;
  (* src = "FPNewBlackbox.preprocessed.v:1714.18-1714.62" *)
  wire [57:0] _160_;
  (* src = "FPNewBlackbox.preprocessed.v:1717.18-1717.62" *)
  wire [57:0] _161_;
  (* src = "FPNewBlackbox.preprocessed.v:1722.18-1722.57" *)
  wire [57:0] _162_;
  (* src = "FPNewBlackbox.preprocessed.v:1725.18-1725.62" *)
  wire [57:0] _163_;
  (* src = "FPNewBlackbox.preprocessed.v:1728.18-1728.62" *)
  wire [57:0] _164_;
  (* src = "FPNewBlackbox.preprocessed.v:1733.18-1733.57" *)
  wire [57:0] _165_;
  (* src = "FPNewBlackbox.preprocessed.v:1736.18-1736.62" *)
  wire [57:0] _166_;
  (* src = "FPNewBlackbox.preprocessed.v:1739.18-1739.62" *)
  wire [57:0] _167_;
  (* src = "FPNewBlackbox.preprocessed.v:1744.18-1744.57" *)
  wire [57:0] _168_;
  (* src = "FPNewBlackbox.preprocessed.v:1747.18-1747.62" *)
  wire [57:0] _169_;
  (* src = "FPNewBlackbox.preprocessed.v:1750.18-1750.62" *)
  wire [57:0] _170_;
  (* src = "FPNewBlackbox.preprocessed.v:1755.18-1755.57" *)
  wire [57:0] _171_;
  (* src = "FPNewBlackbox.preprocessed.v:1758.18-1758.62" *)
  wire [57:0] _172_;
  (* src = "FPNewBlackbox.preprocessed.v:1761.18-1761.62" *)
  wire [57:0] _173_;
  (* src = "FPNewBlackbox.preprocessed.v:1766.18-1766.57" *)
  wire [57:0] _174_;
  (* src = "FPNewBlackbox.preprocessed.v:1769.18-1769.62" *)
  wire [57:0] _175_;
  (* src = "FPNewBlackbox.preprocessed.v:1772.18-1772.62" *)
  wire [57:0] _176_;
  (* src = "FPNewBlackbox.preprocessed.v:1777.18-1777.57" *)
  wire [57:0] _177_;
  (* src = "FPNewBlackbox.preprocessed.v:1780.18-1780.62" *)
  wire [57:0] _178_;
  (* src = "FPNewBlackbox.preprocessed.v:1783.18-1783.62" *)
  wire [57:0] _179_;
  (* src = "FPNewBlackbox.preprocessed.v:1788.18-1788.57" *)
  wire [57:0] _180_;
  (* src = "FPNewBlackbox.preprocessed.v:1791.18-1791.62" *)
  wire [57:0] _181_;
  (* src = "FPNewBlackbox.preprocessed.v:1794.18-1794.62" *)
  wire [57:0] _182_;
  (* src = "FPNewBlackbox.preprocessed.v:2032.225-2032.263" *)
  wire _183_;
  (* src = "FPNewBlackbox.preprocessed.v:2032.158-2032.196" *)
  wire _184_;
  (* src = "FPNewBlackbox.preprocessed.v:2032.85-2032.129" *)
  wire _185_;
  (* src = "FPNewBlackbox.preprocessed.v:2032.515-2032.566" *)
  wire _186_;
  (* src = "FPNewBlackbox.preprocessed.v:2032.429-2032.480" *)
  wire _187_;
  (* src = "FPNewBlackbox.preprocessed.v:2032.340-2032.394" *)
  wire _188_;
  (* src = "FPNewBlackbox.preprocessed.v:2033.30-2033.66" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _189_;
  (* src = "FPNewBlackbox.preprocessed.v:2117.30-2117.86" *)
  wire [57:0] _190_;
  (* src = "FPNewBlackbox.preprocessed.v:2146.21-2146.183" *)
  wire [56:0] _191_;
  (* src = "FPNewBlackbox.preprocessed.v:2447.25-2447.313" *)
  (* unused_bits = "13" *)
  wire [13:0] _192_;
  (* src = "FPNewBlackbox.preprocessed.v:2449.25-2449.204" *)
  (* unused_bits = "13" *)
  wire [13:0] _193_;
  (* src = "FPNewBlackbox.preprocessed.v:2450.25-2450.72" *)
  (* unused_bits = "13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _194_;
  (* src = "FPNewBlackbox.preprocessed.v:2418.10-2418.21" *)
  wire [31:0] C_BIAS_AONE;
  (* src = "FPNewBlackbox.preprocessed.v:2419.10-2419.21" *)
  wire [31:0] C_HALF_BIAS;
  (* src = "FPNewBlackbox.preprocessed.v:459.13-459.19" *)
  input Clk_CI;
  wire Clk_CI;
  (* src = "FPNewBlackbox.preprocessed.v:698.12-698.22" *)
  reg [5:0] Crtl_cnt_S;
  (* src = "FPNewBlackbox.preprocessed.v:474.47-474.61" *)
  input [52:0] Denominator_DI;
  wire [52:0] Denominator_DI;
  (* src = "FPNewBlackbox.preprocessed.v:493.14-493.30" *)
  wire [53:0] Denominator_se_D;
  (* src = "FPNewBlackbox.preprocessed.v:494.13-494.30" *)
  wire [53:0] Denominator_se_DB;
  (* src = "FPNewBlackbox.preprocessed.v:2027.14-2027.38" *)
  wire [57:0] Denominator_se_format_DB;
  (* src = "FPNewBlackbox.preprocessed.v:2075.7-2075.20" *)
  wire \Div_enable_SI[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:2075.7-2075.20" *)
  wire \Div_enable_SI[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:2075.7-2075.20" *)
  wire \Div_enable_SI[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:478.13-478.26" *)
  output Div_enable_SO;
  reg Div_enable_SO;
  (* src = "FPNewBlackbox.preprocessed.v:461.13-461.25" *)
  input Div_start_SI;
  wire Div_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:658.6-658.21" *)
  reg Div_start_dly_S;
  (* src = "FPNewBlackbox.preprocessed.v:2076.7-2076.23" *)
  wire \Div_start_dly_SI[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:2076.7-2076.23" *)
  wire \Div_start_dly_SI[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:2076.7-2076.23" *)
  wire \Div_start_dly_SI[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:476.14-476.30" *)
  output Div_start_dly_SO;
  wire Div_start_dly_SO;
  (* src = "FPNewBlackbox.preprocessed.v:486.13-486.20" *)
  output Done_SO;
  reg Done_SO;
  (* src = "FPNewBlackbox.preprocessed.v:2415.14-2415.25" *)
  wire [12:0] Exp_add_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:2416.14-2416.25" *)
  wire [12:0] Exp_add_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:2417.14-2417.25" *)
  wire [12:0] Exp_add_c_D;
  (* src = "FPNewBlackbox.preprocessed.v:475.46-475.56" *)
  input [11:0] Exp_den_DI;
  wire [11:0] Exp_den_DI;
  (* src = "FPNewBlackbox.preprocessed.v:473.46-473.56" *)
  input [11:0] Exp_num_DI;
  wire [11:0] Exp_num_DI;
  (* src = "FPNewBlackbox.preprocessed.v:488.21-488.42" *)
  output [12:0] Exp_result_prenorm_DO;
  wire [12:0] Exp_result_prenorm_DO;
  (* src = "FPNewBlackbox.preprocessed.v:2414.13-2414.34" *)
  reg [12:0] Exp_result_prenorm_DP;
  (* src = "FPNewBlackbox.preprocessed.v:484.14-484.24" *)
  output FP16ALT_SO;
  wire FP16ALT_SO;
  (* src = "FPNewBlackbox.preprocessed.v:483.14-483.21" *)
  output FP16_SO;
  wire FP16_SO;
  (* src = "FPNewBlackbox.preprocessed.v:481.14-481.21" *)
  output FP32_SO;
  wire FP32_SO;
  (* src = "FPNewBlackbox.preprocessed.v:482.14-482.21" *)
  output FP64_SO;
  wire FP64_SO;
  (* src = "FPNewBlackbox.preprocessed.v:703.7-703.20" *)
  wire Final_state_S;
  (* src = "FPNewBlackbox.preprocessed.v:2029.14-2029.42" *)
  wire [57:0] First_iteration_cell_div_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:2030.14-2030.42" *)
  wire [57:0] First_iteration_cell_div_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:511.12-511.24" *)
  reg [1:0] Format_sel_S;
  (* src = "FPNewBlackbox.preprocessed.v:469.19-469.32" *)
  input [1:0] Format_sel_SI;
  wire [1:0] Format_sel_SI;
  (* src = "FPNewBlackbox.preprocessed.v:701.7-701.19" *)
  wire Fsm_enable_S;
  (* src = "FPNewBlackbox.preprocessed.v:480.14-480.31" *)
  output Full_precision_SO;
  wire Full_precision_SO;
  (* src = "FPNewBlackbox.preprocessed.v:888.14-888.38" *)
  wire [57:0] \Iteration_cell_a_BMASK_D[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:888.14-888.38" *)
  wire [57:0] \Iteration_cell_a_BMASK_D[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:888.14-888.38" *)
  wire [57:0] \Iteration_cell_a_BMASK_D[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:886.14-886.32" *)
  wire [57:0] \Iteration_cell_a_D[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:886.14-886.32" *)
  wire [57:0] \Iteration_cell_a_D[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:886.14-886.32" *)
  wire [57:0] \Iteration_cell_a_D[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:889.14-889.38" *)
  wire [57:0] \Iteration_cell_b_BMASK_D[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:889.14-889.38" *)
  wire [57:0] \Iteration_cell_b_BMASK_D[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:889.14-889.38" *)
  wire [57:0] \Iteration_cell_b_BMASK_D[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:887.14-887.32" *)
  wire [57:0] \Iteration_cell_b_D[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:887.14-887.32" *)
  wire [57:0] \Iteration_cell_b_D[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:887.14-887.32" *)
  wire [57:0] \Iteration_cell_b_D[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:890.7-890.29" *)
  wire \Iteration_cell_carry_D[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:890.7-890.29" *)
  wire \Iteration_cell_carry_D[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:890.7-890.29" *)
  wire \Iteration_cell_carry_D[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:890.7-890.29" *)
  wire \Iteration_cell_carry_D[3] ;
  (* src = "FPNewBlackbox.preprocessed.v:892.14-892.40" *)
  wire [57:0] \Iteration_cell_sum_AMASK_D[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:892.14-892.40" *)
  wire [57:0] \Iteration_cell_sum_AMASK_D[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:892.14-892.40" *)
  wire [57:0] \Iteration_cell_sum_AMASK_D[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:892.14-892.40" *)
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57" *)
  wire [57:0] \Iteration_cell_sum_AMASK_D[3] ;
  (* src = "FPNewBlackbox.preprocessed.v:891.14-891.34" *)
  wire [57:0] \Iteration_cell_sum_D[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:891.14-891.34" *)
  wire [57:0] \Iteration_cell_sum_D[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:891.14-891.34" *)
  wire [57:0] \Iteration_cell_sum_D[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:464.13-464.20" *)
  input Kill_SI;
  wire Kill_SI;
  (* src = "FPNewBlackbox.preprocessed.v:509.14-509.30" *)
  wire [53:0] Mant_D_sqrt_Norm;
  (* src = "FPNewBlackbox.preprocessed.v:487.20-487.42" *)
  output [56:0] Mant_result_prenorm_DO;
  wire [56:0] Mant_result_prenorm_DO;
  (* src = "FPNewBlackbox.preprocessed.v:2073.14-2073.29" *)
  wire [57:0] Mask_bits_ctl_S;
  (* src = "FPNewBlackbox.preprocessed.v:471.47-471.59" *)
  input [52:0] Numerator_DI;
  wire [52:0] Numerator_DI;
  (* src = "FPNewBlackbox.preprocessed.v:492.14-492.28" *)
  wire [53:0] Numerator_se_D;
  (* src = "FPNewBlackbox.preprocessed.v:490.13-490.33" *)
  reg [57:0] Partial_remainder_DP;
  (* src = "FPNewBlackbox.preprocessed.v:523.12-523.27" *)
  reg [5:0] Precision_ctl_S;
  (* src = "FPNewBlackbox.preprocessed.v:468.19-468.35" *)
  input [5:0] Precision_ctl_SI;
  wire [5:0] Precision_ctl_SI;
  (* src = "FPNewBlackbox.preprocessed.v:868.13-868.20" *)
  wire [57:0] Q_sqrt0;
  (* src = "FPNewBlackbox.preprocessed.v:872.13-872.20" *)
  wire [57:0] Q_sqrt1;
  (* src = "FPNewBlackbox.preprocessed.v:876.13-876.20" *)
  wire [57:0] Q_sqrt2;
  (* src = "FPNewBlackbox.preprocessed.v:869.13-869.25" *)
  wire [57:0] Q_sqrt_com_0;
  (* src = "FPNewBlackbox.preprocessed.v:873.13-873.25" *)
  wire [57:0] Q_sqrt_com_1;
  (* src = "FPNewBlackbox.preprocessed.v:877.13-877.25" *)
  wire [57:0] Q_sqrt_com_2;
  (* src = "FPNewBlackbox.preprocessed.v:851.13-851.24" *)
  wire [3:0] Qcnt_four_0;
  (* src = "FPNewBlackbox.preprocessed.v:852.13-852.24" *)
  wire [6:0] Qcnt_four_1;
  (* src = "FPNewBlackbox.preprocessed.v:861.14-861.26" *)
  wire [42:0] Qcnt_four_10;
  (* src = "FPNewBlackbox.preprocessed.v:862.14-862.26" *)
  wire [46:0] Qcnt_four_11;
  (* src = "FPNewBlackbox.preprocessed.v:863.14-863.26" *)
  wire [50:0] Qcnt_four_12;
  (* src = "FPNewBlackbox.preprocessed.v:864.14-864.26" *)
  wire [54:0] Qcnt_four_13;
  (* src = "FPNewBlackbox.preprocessed.v:865.14-865.26" *)
  wire [58:0] Qcnt_four_14;
  (* src = "FPNewBlackbox.preprocessed.v:853.14-853.25" *)
  wire [10:0] Qcnt_four_2;
  (* src = "FPNewBlackbox.preprocessed.v:854.14-854.25" *)
  wire [14:0] Qcnt_four_3;
  (* src = "FPNewBlackbox.preprocessed.v:855.14-855.25" *)
  wire [18:0] Qcnt_four_4;
  (* src = "FPNewBlackbox.preprocessed.v:856.14-856.25" *)
  wire [22:0] Qcnt_four_5;
  (* src = "FPNewBlackbox.preprocessed.v:857.14-857.25" *)
  wire [26:0] Qcnt_four_6;
  (* src = "FPNewBlackbox.preprocessed.v:858.14-858.25" *)
  wire [30:0] Qcnt_four_7;
  (* src = "FPNewBlackbox.preprocessed.v:859.14-859.25" *)
  wire [34:0] Qcnt_four_8;
  (* src = "FPNewBlackbox.preprocessed.v:860.14-860.25" *)
  wire [38:0] Qcnt_four_9;
  (* src = "FPNewBlackbox.preprocessed.v:740.7-740.17" *)
  wire Qcnt_one_0;
  (* src = "FPNewBlackbox.preprocessed.v:741.7-741.17" *)
  wire Qcnt_one_1;
  (* src = "FPNewBlackbox.preprocessed.v:750.13-750.24" *)
  wire [9:0] Qcnt_one_10;
  (* src = "FPNewBlackbox.preprocessed.v:751.14-751.25" *)
  wire [10:0] Qcnt_one_11;
  (* src = "FPNewBlackbox.preprocessed.v:752.14-752.25" *)
  wire [11:0] Qcnt_one_12;
  (* src = "FPNewBlackbox.preprocessed.v:753.14-753.25" *)
  wire [12:0] Qcnt_one_13;
  (* src = "FPNewBlackbox.preprocessed.v:754.14-754.25" *)
  wire [13:0] Qcnt_one_14;
  (* src = "FPNewBlackbox.preprocessed.v:755.14-755.25" *)
  wire [14:0] Qcnt_one_15;
  (* src = "FPNewBlackbox.preprocessed.v:756.14-756.25" *)
  wire [15:0] Qcnt_one_16;
  (* src = "FPNewBlackbox.preprocessed.v:757.14-757.25" *)
  wire [16:0] Qcnt_one_17;
  (* src = "FPNewBlackbox.preprocessed.v:758.14-758.25" *)
  wire [17:0] Qcnt_one_18;
  (* src = "FPNewBlackbox.preprocessed.v:759.14-759.25" *)
  wire [18:0] Qcnt_one_19;
  (* src = "FPNewBlackbox.preprocessed.v:742.13-742.23" *)
  wire [1:0] Qcnt_one_2;
  (* src = "FPNewBlackbox.preprocessed.v:760.14-760.25" *)
  wire [19:0] Qcnt_one_20;
  (* src = "FPNewBlackbox.preprocessed.v:761.14-761.25" *)
  wire [20:0] Qcnt_one_21;
  (* src = "FPNewBlackbox.preprocessed.v:762.14-762.25" *)
  wire [21:0] Qcnt_one_22;
  (* src = "FPNewBlackbox.preprocessed.v:763.14-763.25" *)
  wire [22:0] Qcnt_one_23;
  (* src = "FPNewBlackbox.preprocessed.v:764.14-764.25" *)
  wire [23:0] Qcnt_one_24;
  (* src = "FPNewBlackbox.preprocessed.v:765.14-765.25" *)
  wire [24:0] Qcnt_one_25;
  (* src = "FPNewBlackbox.preprocessed.v:766.14-766.25" *)
  wire [25:0] Qcnt_one_26;
  (* src = "FPNewBlackbox.preprocessed.v:767.14-767.25" *)
  wire [26:0] Qcnt_one_27;
  (* src = "FPNewBlackbox.preprocessed.v:768.14-768.25" *)
  wire [27:0] Qcnt_one_28;
  (* src = "FPNewBlackbox.preprocessed.v:769.14-769.25" *)
  wire [28:0] Qcnt_one_29;
  (* src = "FPNewBlackbox.preprocessed.v:743.13-743.23" *)
  wire [2:0] Qcnt_one_3;
  (* src = "FPNewBlackbox.preprocessed.v:770.14-770.25" *)
  wire [29:0] Qcnt_one_30;
  (* src = "FPNewBlackbox.preprocessed.v:771.14-771.25" *)
  wire [30:0] Qcnt_one_31;
  (* src = "FPNewBlackbox.preprocessed.v:772.14-772.25" *)
  wire [31:0] Qcnt_one_32;
  (* src = "FPNewBlackbox.preprocessed.v:773.14-773.25" *)
  wire [32:0] Qcnt_one_33;
  (* src = "FPNewBlackbox.preprocessed.v:774.14-774.25" *)
  wire [33:0] Qcnt_one_34;
  (* src = "FPNewBlackbox.preprocessed.v:775.14-775.25" *)
  wire [34:0] Qcnt_one_35;
  (* src = "FPNewBlackbox.preprocessed.v:776.14-776.25" *)
  wire [35:0] Qcnt_one_36;
  (* src = "FPNewBlackbox.preprocessed.v:777.14-777.25" *)
  wire [36:0] Qcnt_one_37;
  (* src = "FPNewBlackbox.preprocessed.v:778.14-778.25" *)
  wire [37:0] Qcnt_one_38;
  (* src = "FPNewBlackbox.preprocessed.v:779.14-779.25" *)
  wire [38:0] Qcnt_one_39;
  (* src = "FPNewBlackbox.preprocessed.v:744.13-744.23" *)
  wire [3:0] Qcnt_one_4;
  (* src = "FPNewBlackbox.preprocessed.v:780.14-780.25" *)
  wire [39:0] Qcnt_one_40;
  (* src = "FPNewBlackbox.preprocessed.v:781.14-781.25" *)
  wire [40:0] Qcnt_one_41;
  (* src = "FPNewBlackbox.preprocessed.v:782.14-782.25" *)
  wire [41:0] Qcnt_one_42;
  (* src = "FPNewBlackbox.preprocessed.v:783.14-783.25" *)
  wire [42:0] Qcnt_one_43;
  (* src = "FPNewBlackbox.preprocessed.v:784.14-784.25" *)
  wire [43:0] Qcnt_one_44;
  (* src = "FPNewBlackbox.preprocessed.v:785.14-785.25" *)
  wire [44:0] Qcnt_one_45;
  (* src = "FPNewBlackbox.preprocessed.v:786.14-786.25" *)
  wire [45:0] Qcnt_one_46;
  (* src = "FPNewBlackbox.preprocessed.v:787.14-787.25" *)
  wire [46:0] Qcnt_one_47;
  (* src = "FPNewBlackbox.preprocessed.v:788.14-788.25" *)
  wire [47:0] Qcnt_one_48;
  (* src = "FPNewBlackbox.preprocessed.v:789.14-789.25" *)
  wire [48:0] Qcnt_one_49;
  (* src = "FPNewBlackbox.preprocessed.v:745.13-745.23" *)
  wire [4:0] Qcnt_one_5;
  (* src = "FPNewBlackbox.preprocessed.v:790.14-790.25" *)
  wire [49:0] Qcnt_one_50;
  (* src = "FPNewBlackbox.preprocessed.v:791.14-791.25" *)
  wire [50:0] Qcnt_one_51;
  (* src = "FPNewBlackbox.preprocessed.v:792.14-792.25" *)
  wire [51:0] Qcnt_one_52;
  (* src = "FPNewBlackbox.preprocessed.v:793.14-793.25" *)
  wire [52:0] Qcnt_one_53;
  (* src = "FPNewBlackbox.preprocessed.v:794.14-794.25" *)
  wire [53:0] Qcnt_one_54;
  (* src = "FPNewBlackbox.preprocessed.v:795.14-795.25" *)
  wire [54:0] Qcnt_one_55;
  (* src = "FPNewBlackbox.preprocessed.v:796.14-796.25" *)
  wire [55:0] Qcnt_one_56;
  (* src = "FPNewBlackbox.preprocessed.v:797.14-797.25" *)
  wire [56:0] Qcnt_one_57;
  (* src = "FPNewBlackbox.preprocessed.v:746.13-746.23" *)
  wire [5:0] Qcnt_one_6;
  (* src = "FPNewBlackbox.preprocessed.v:747.13-747.23" *)
  wire [6:0] Qcnt_one_7;
  (* src = "FPNewBlackbox.preprocessed.v:748.13-748.23" *)
  wire [7:0] Qcnt_one_8;
  (* src = "FPNewBlackbox.preprocessed.v:749.13-749.23" *)
  wire [8:0] Qcnt_one_9;
  (* src = "FPNewBlackbox.preprocessed.v:830.13-830.25" *)
  wire [2:0] Qcnt_three_0;
  (* src = "FPNewBlackbox.preprocessed.v:831.13-831.25" *)
  wire [4:0] Qcnt_three_1;
  (* src = "FPNewBlackbox.preprocessed.v:840.14-840.27" *)
  wire [31:0] Qcnt_three_10;
  (* src = "FPNewBlackbox.preprocessed.v:841.14-841.27" *)
  wire [34:0] Qcnt_three_11;
  (* src = "FPNewBlackbox.preprocessed.v:842.14-842.27" *)
  wire [37:0] Qcnt_three_12;
  (* src = "FPNewBlackbox.preprocessed.v:843.14-843.27" *)
  wire [40:0] Qcnt_three_13;
  (* src = "FPNewBlackbox.preprocessed.v:844.14-844.27" *)
  wire [43:0] Qcnt_three_14;
  (* src = "FPNewBlackbox.preprocessed.v:845.14-845.27" *)
  wire [46:0] Qcnt_three_15;
  (* src = "FPNewBlackbox.preprocessed.v:846.14-846.27" *)
  wire [49:0] Qcnt_three_16;
  (* src = "FPNewBlackbox.preprocessed.v:847.14-847.27" *)
  wire [52:0] Qcnt_three_17;
  (* src = "FPNewBlackbox.preprocessed.v:848.14-848.27" *)
  wire [55:0] Qcnt_three_18;
  (* src = "FPNewBlackbox.preprocessed.v:849.14-849.27" *)
  wire [58:0] Qcnt_three_19;
  (* src = "FPNewBlackbox.preprocessed.v:832.13-832.25" *)
  wire [7:0] Qcnt_three_2;
  (* src = "FPNewBlackbox.preprocessed.v:833.14-833.26" *)
  wire [10:0] Qcnt_three_3;
  (* src = "FPNewBlackbox.preprocessed.v:834.14-834.26" *)
  wire [13:0] Qcnt_three_4;
  (* src = "FPNewBlackbox.preprocessed.v:835.14-835.26" *)
  wire [16:0] Qcnt_three_5;
  (* src = "FPNewBlackbox.preprocessed.v:836.14-836.26" *)
  wire [19:0] Qcnt_three_6;
  (* src = "FPNewBlackbox.preprocessed.v:837.14-837.26" *)
  wire [22:0] Qcnt_three_7;
  (* src = "FPNewBlackbox.preprocessed.v:838.14-838.26" *)
  wire [25:0] Qcnt_three_8;
  (* src = "FPNewBlackbox.preprocessed.v:839.14-839.26" *)
  wire [28:0] Qcnt_three_9;
  (* src = "FPNewBlackbox.preprocessed.v:801.13-801.23" *)
  wire [1:0] Qcnt_two_0;
  (* src = "FPNewBlackbox.preprocessed.v:802.13-802.23" *)
  wire [2:0] Qcnt_two_1;
  (* src = "FPNewBlackbox.preprocessed.v:811.14-811.25" *)
  wire [20:0] Qcnt_two_10;
  (* src = "FPNewBlackbox.preprocessed.v:812.14-812.25" *)
  wire [22:0] Qcnt_two_11;
  (* src = "FPNewBlackbox.preprocessed.v:813.14-813.25" *)
  wire [24:0] Qcnt_two_12;
  (* src = "FPNewBlackbox.preprocessed.v:814.14-814.25" *)
  wire [26:0] Qcnt_two_13;
  (* src = "FPNewBlackbox.preprocessed.v:815.14-815.25" *)
  wire [28:0] Qcnt_two_14;
  (* src = "FPNewBlackbox.preprocessed.v:816.14-816.25" *)
  wire [30:0] Qcnt_two_15;
  (* src = "FPNewBlackbox.preprocessed.v:817.14-817.25" *)
  wire [32:0] Qcnt_two_16;
  (* src = "FPNewBlackbox.preprocessed.v:818.14-818.25" *)
  wire [34:0] Qcnt_two_17;
  (* src = "FPNewBlackbox.preprocessed.v:819.14-819.25" *)
  wire [36:0] Qcnt_two_18;
  (* src = "FPNewBlackbox.preprocessed.v:820.14-820.25" *)
  wire [38:0] Qcnt_two_19;
  (* src = "FPNewBlackbox.preprocessed.v:803.13-803.23" *)
  wire [4:0] Qcnt_two_2;
  (* src = "FPNewBlackbox.preprocessed.v:821.14-821.25" *)
  wire [40:0] Qcnt_two_20;
  (* src = "FPNewBlackbox.preprocessed.v:822.14-822.25" *)
  wire [42:0] Qcnt_two_21;
  (* src = "FPNewBlackbox.preprocessed.v:823.14-823.25" *)
  wire [44:0] Qcnt_two_22;
  (* src = "FPNewBlackbox.preprocessed.v:824.14-824.25" *)
  wire [46:0] Qcnt_two_23;
  (* src = "FPNewBlackbox.preprocessed.v:825.14-825.25" *)
  wire [48:0] Qcnt_two_24;
  (* src = "FPNewBlackbox.preprocessed.v:826.14-826.25" *)
  wire [50:0] Qcnt_two_25;
  (* src = "FPNewBlackbox.preprocessed.v:827.14-827.25" *)
  wire [52:0] Qcnt_two_26;
  (* src = "FPNewBlackbox.preprocessed.v:828.14-828.25" *)
  wire [54:0] Qcnt_two_27;
  (* src = "FPNewBlackbox.preprocessed.v:829.14-829.25" *)
  wire [56:0] Qcnt_two_28;
  (* src = "FPNewBlackbox.preprocessed.v:804.13-804.23" *)
  wire [6:0] Qcnt_two_3;
  (* src = "FPNewBlackbox.preprocessed.v:805.13-805.23" *)
  wire [8:0] Qcnt_two_4;
  (* src = "FPNewBlackbox.preprocessed.v:806.14-806.24" *)
  wire [10:0] Qcnt_two_5;
  (* src = "FPNewBlackbox.preprocessed.v:807.14-807.24" *)
  wire [12:0] Qcnt_two_6;
  (* src = "FPNewBlackbox.preprocessed.v:808.14-808.24" *)
  wire [14:0] Qcnt_two_7;
  (* src = "FPNewBlackbox.preprocessed.v:809.14-809.24" *)
  wire [16:0] Qcnt_two_8;
  (* src = "FPNewBlackbox.preprocessed.v:810.14-810.24" *)
  wire [18:0] Qcnt_two_9;
  (* src = "FPNewBlackbox.preprocessed.v:491.13-491.24" *)
  reg [56:0] Quotient_DP;
  (* src = "FPNewBlackbox.preprocessed.v:485.13-485.21" *)
  output Ready_SO;
  reg Ready_SO;
  (* src = "FPNewBlackbox.preprocessed.v:460.13-460.20" *)
  input Rst_RBI;
  wire Rst_RBI;
  (* src = "FPNewBlackbox.preprocessed.v:2037.14-2037.40" *)
  wire [57:0] Sec_iteration_cell_div_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:2038.14-2038.40" *)
  wire [57:0] Sec_iteration_cell_div_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:2031.7-2031.24" *)
  wire Sel_b_for_first_S;
  (* src = "FPNewBlackbox.preprocessed.v:2039.7-2039.22" *)
  wire Sel_b_for_sec_S;
  (* src = "FPNewBlackbox.preprocessed.v:2051.7-2051.22" *)
  wire Sel_b_for_thi_S;
  (* src = "FPNewBlackbox.preprocessed.v:465.13-465.29" *)
  input Special_case_SBI;
  wire Special_case_SBI;
  (* src = "FPNewBlackbox.preprocessed.v:466.13-466.33" *)
  input Special_case_dly_SBI;
  wire Special_case_dly_SBI;
  (* src = "FPNewBlackbox.preprocessed.v:883.12-883.19" *)
  wire [1:0] \Sqrt_DI[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:883.12-883.19" *)
  wire [1:0] \Sqrt_DI[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:883.12-883.19" *)
  wire [1:0] \Sqrt_DI[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:884.13-884.20" *)
  wire [1:0] \Sqrt_DO[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:884.13-884.20" *)
  wire [1:0] \Sqrt_DO[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:884.13-884.20" *)
  wire [1:0] \Sqrt_DO[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:867.13-867.20" *)
  wire [57:0] Sqrt_Q0;
  (* src = "FPNewBlackbox.preprocessed.v:871.13-871.20" *)
  wire [57:0] Sqrt_Q1;
  (* src = "FPNewBlackbox.preprocessed.v:875.13-875.20" *)
  wire [57:0] Sqrt_Q2;
  (* src = "FPNewBlackbox.preprocessed.v:866.14-866.21" *)
  wire [57:0] Sqrt_R0;
  (* src = "FPNewBlackbox.preprocessed.v:870.14-870.21" *)
  wire [57:0] Sqrt_R1;
  (* src = "FPNewBlackbox.preprocessed.v:874.14-874.21" *)
  wire [57:0] Sqrt_R2;
  (* src = "FPNewBlackbox.preprocessed.v:878.14-878.21" *)
  wire [57:0] Sqrt_R3;
  (* src = "FPNewBlackbox.preprocessed.v:882.14-882.21" *)
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 16 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57" *)
  wire [57:0] Sqrt_R4;
  (* src = "FPNewBlackbox.preprocessed.v:2077.7-2077.21" *)
  wire \Sqrt_enable_SI[0] ;
  (* src = "FPNewBlackbox.preprocessed.v:2077.7-2077.21" *)
  wire \Sqrt_enable_SI[1] ;
  (* src = "FPNewBlackbox.preprocessed.v:2077.7-2077.21" *)
  wire \Sqrt_enable_SI[2] ;
  (* src = "FPNewBlackbox.preprocessed.v:479.13-479.27" *)
  output Sqrt_enable_SO;
  reg Sqrt_enable_SO;
  (* src = "FPNewBlackbox.preprocessed.v:893.12-893.28" *)
  (* unused_bits = "0" *)
  wire [3:0] Sqrt_quotinent_S;
  (* src = "FPNewBlackbox.preprocessed.v:462.13-462.26" *)
  input Sqrt_start_SI;
  wire Sqrt_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:678.6-678.22" *)
  reg Sqrt_start_dly_S;
  (* src = "FPNewBlackbox.preprocessed.v:477.14-477.31" *)
  output Sqrt_start_dly_SO;
  wire Sqrt_start_dly_SO;
  (* src = "FPNewBlackbox.preprocessed.v:463.13-463.21" *)
  input Start_SI;
  wire Start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:699.7-699.18" *)
  wire Start_dly_S;
  (* src = "FPNewBlackbox.preprocessed.v:534.13-534.40" *)
  wire [5:0] State_Four_iteration_unit_S;
  (* src = "FPNewBlackbox.preprocessed.v:533.13-533.39" *)
  wire [5:0] State_Two_iteration_unit_S;
  (* src = "FPNewBlackbox.preprocessed.v:532.12-532.23" *)
  wire [5:0] State_ctl_S;
  (* src = "FPNewBlackbox.preprocessed.v:2049.14-2049.40" *)
  wire [57:0] Thi_iteration_cell_div_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:2050.14-2050.40" *)
  wire [57:0] Thi_iteration_cell_div_b_D;
  assign _017_ = Exp_add_a_D + (* src = "FPNewBlackbox.preprocessed.v:2451.50-2451.75" *) Exp_add_b_D;
  assign _018_ = _017_ + (* src = "FPNewBlackbox.preprocessed.v:2451.49-2451.90" *) Exp_add_c_D;
  assign _019_ = Crtl_cnt_S + (* src = "FPNewBlackbox.preprocessed.v:711.18-711.32" *) 32'd1;
  (* src = "FPNewBlackbox.preprocessed.v:667.2-677.35" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Div_enable_SO <= 1'h0;
    else if (_020_) Div_enable_SO <= _001_;
  (* src = "FPNewBlackbox.preprocessed.v:727.2-739.25" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Ready_SO <= 1'h1;
    else if (_021_) Ready_SO <= _004_;
  (* src = "FPNewBlackbox.preprocessed.v:2126.2-2130.49" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Partial_remainder_DP <= 58'h000000000000000;
    else if (Fsm_enable_S) Partial_remainder_DP <= _190_;
  (* src = "FPNewBlackbox.preprocessed.v:2155.2-2159.31" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Quotient_DP <= 57'h000000000000000;
    else if (Fsm_enable_S) Quotient_DP <= _191_;
  (* src = "FPNewBlackbox.preprocessed.v:687.2-697.37" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Sqrt_enable_SO <= 1'h0;
    else if (_022_) Sqrt_enable_SO <= _005_;
  (* src = "FPNewBlackbox.preprocessed.v:2452.2-2456.51" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Exp_result_prenorm_DP <= 13'h0000;
    else if (Start_dly_S) Exp_result_prenorm_DP <= _018_;
  (* src = "FPNewBlackbox.preprocessed.v:512.2-518.33" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Format_sel_S <= 2'h0;
    else if (_026_) Format_sel_S <= Format_sel_SI;
  (* src = "FPNewBlackbox.preprocessed.v:524.2-530.39" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Precision_ctl_S <= 6'h00;
    else if (_026_) Precision_ctl_S <= Precision_ctl_SI;
  assign _020_ = | { _027_, Done_SO, Kill_SI };
  assign _021_ = | { _062_, _026_ };
  assign _022_ = | { _028_, Done_SO, Kill_SI };
  assign _023_ = | { FP16ALT_SO, FP32_SO };
  assign _024_ = | { _099_, _100_, _101_, _102_, _103_, _104_, _105_, _106_, _107_, _108_ };
  assign Full_precision_SO = ! (* src = "FPNewBlackbox.preprocessed.v:531.29-531.53" *) Precision_ctl_S;
  assign Final_state_S = Crtl_cnt_S == (* src = "FPNewBlackbox.preprocessed.v:704.25-704.50" *) State_ctl_S;
  assign _025_ = FP64_SO && (* src = "FPNewBlackbox.preprocessed.v:2032.598-2032.623" *) Quotient_DP[0];
  assign Sec_iteration_cell_div_a_D[3] = FP64_SO && (* src = "FPNewBlackbox.preprocessed.v:2043.396-2043.422" *) Sel_b_for_sec_S;
  assign Thi_iteration_cell_div_a_D[3] = FP64_SO && (* src = "FPNewBlackbox.preprocessed.v:2055.396-2055.422" *) Sel_b_for_thi_S;
  assign _027_ = Div_start_SI && (* src = "FPNewBlackbox.preprocessed.v:672.12-672.36" *) Ready_SO;
  assign _028_ = Sqrt_start_SI && (* src = "FPNewBlackbox.preprocessed.v:692.12-692.37" *) Ready_SO;
  assign _029_ = _061_ && (* src = "FPNewBlackbox.preprocessed.v:702.25-702.64" *) _036_;
  assign Fsm_enable_S = _029_ && (* src = "FPNewBlackbox.preprocessed.v:702.24-702.89" *) Special_case_dly_SBI;
  assign _026_ = Start_SI && (* src = "FPNewBlackbox.preprocessed.v:730.12-730.32" *) Ready_SO;
  assign Sel_b_for_sec_S = ~ (* src = "FPNewBlackbox.preprocessed.v:2042.29-2042.63" *) \Iteration_cell_sum_AMASK_D[0] [57];
  assign Sel_b_for_thi_S = ~ (* src = "FPNewBlackbox.preprocessed.v:2054.29-2054.63" *) \Iteration_cell_sum_AMASK_D[1] [57];
  assign _030_ = ~ (* src = "FPNewBlackbox.preprocessed.v:2449.192-2449.203" *) Exp_den_DI;
  assign _031_ = ~ (* src = "FPNewBlackbox.preprocessed.v:2449.106-2449.147" *) Exp_den_DI[11];
  assign _032_ = ~ (* src = "FPNewBlackbox.preprocessed.v:502.25-502.49" *) { 1'h0, Denominator_DI[52:29] };
  assign _033_ = ~ (* src = "FPNewBlackbox.preprocessed.v:504.24-504.41" *) { 1'h0, Denominator_DI };
  assign _034_ = ~ (* src = "FPNewBlackbox.preprocessed.v:506.25-506.49" *) { 1'h0, Denominator_DI[52:42] };
  assign _035_ = ~ (* src = "FPNewBlackbox.preprocessed.v:508.25-508.49" *) { 1'h0, Denominator_DI[52:45] };
  assign _036_ = ~ (* src = "FPNewBlackbox.preprocessed.v:702.56-702.64" *) Kill_SI;
  assign _037_ = ~ (* src = "FPNewBlackbox.preprocessed.v:897.133-897.167" *) \Iteration_cell_sum_AMASK_D[3] [28];
  assign _038_ = ~ (* src = "FPNewBlackbox.preprocessed.v:897.97-897.131" *) \Iteration_cell_sum_AMASK_D[2] [28];
  assign _039_ = ~ (* src = "FPNewBlackbox.preprocessed.v:897.61-897.95" *) \Iteration_cell_sum_AMASK_D[1] [28];
  assign _040_ = ~ (* src = "FPNewBlackbox.preprocessed.v:897.25-897.59" *) \Iteration_cell_sum_AMASK_D[0] [28];
  assign _041_ = ~ (* src = "FPNewBlackbox.preprocessed.v:898.34-898.48" *) Q_sqrt0[28:0];
  assign _042_ = ~ (* src = "FPNewBlackbox.preprocessed.v:899.34-899.48" *) Q_sqrt1[28:0];
  assign _043_ = ~ (* src = "FPNewBlackbox.preprocessed.v:900.34-900.48" *) Q_sqrt2[28:0];
  assign _044_ = ~ (* src = "FPNewBlackbox.preprocessed.v:905.20-905.28" *) Q_sqrt0;
  assign _045_ = ~ (* src = "FPNewBlackbox.preprocessed.v:906.20-906.28" *) Q_sqrt1;
  assign _046_ = ~ (* src = "FPNewBlackbox.preprocessed.v:907.20-907.28" *) Q_sqrt2;
  assign _047_ = ~ (* src = "FPNewBlackbox.preprocessed.v:911.133-911.167" *) \Iteration_cell_sum_AMASK_D[3] [15];
  assign _048_ = ~ (* src = "FPNewBlackbox.preprocessed.v:911.97-911.131" *) \Iteration_cell_sum_AMASK_D[2] [15];
  assign _049_ = ~ (* src = "FPNewBlackbox.preprocessed.v:911.61-911.95" *) \Iteration_cell_sum_AMASK_D[1] [15];
  assign _050_ = ~ (* src = "FPNewBlackbox.preprocessed.v:911.25-911.59" *) \Iteration_cell_sum_AMASK_D[0] [15];
  assign _051_ = ~ (* src = "FPNewBlackbox.preprocessed.v:912.34-912.48" *) Q_sqrt0[15:0];
  assign _052_ = ~ (* src = "FPNewBlackbox.preprocessed.v:913.34-913.48" *) Q_sqrt1[15:0];
  assign _053_ = ~ (* src = "FPNewBlackbox.preprocessed.v:914.34-914.48" *) Q_sqrt2[15:0];
  assign _054_ = ~ (* src = "FPNewBlackbox.preprocessed.v:918.133-918.167" *) \Iteration_cell_sum_AMASK_D[3] [12];
  assign _055_ = ~ (* src = "FPNewBlackbox.preprocessed.v:918.97-918.131" *) \Iteration_cell_sum_AMASK_D[2] [12];
  assign _056_ = ~ (* src = "FPNewBlackbox.preprocessed.v:918.61-918.95" *) \Iteration_cell_sum_AMASK_D[1] [12];
  assign _057_ = ~ (* src = "FPNewBlackbox.preprocessed.v:918.25-918.59" *) \Iteration_cell_sum_AMASK_D[0] [12];
  assign _058_ = ~ (* src = "FPNewBlackbox.preprocessed.v:919.34-919.48" *) Q_sqrt0[12:0];
  assign _059_ = ~ (* src = "FPNewBlackbox.preprocessed.v:920.34-920.48" *) Q_sqrt1[12:0];
  assign _060_ = ~ (* src = "FPNewBlackbox.preprocessed.v:921.34-921.48" *) Q_sqrt2[12:0];
  assign Start_dly_S = Div_start_dly_S | (* src = "FPNewBlackbox.preprocessed.v:700.23-700.57" *) Sqrt_start_dly_S;
  assign _061_ = Start_dly_S | (* src = "FPNewBlackbox.preprocessed.v:702.26-702.51" *) _126_;
  assign _062_ = Final_state_S | (* src = "FPNewBlackbox.preprocessed.v:736.12-736.35" *) Kill_SI;
  (* src = "FPNewBlackbox.preprocessed.v:714.2-726.20" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Done_SO <= 1'h0;
    else Done_SO <= _003_;
  (* src = "FPNewBlackbox.preprocessed.v:705.2-713.24" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Crtl_cnt_S <= 6'h00;
    else Crtl_cnt_S <= _000_;
  (* src = "FPNewBlackbox.preprocessed.v:679.2-685.29" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Sqrt_start_dly_S <= 1'h0;
    else Sqrt_start_dly_S <= _006_;
  (* src = "FPNewBlackbox.preprocessed.v:659.2-665.28" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Div_start_dly_S <= 1'h0;
    else Div_start_dly_S <= _002_;
  assign _014_ = _064_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2359.7-2363.14" *) { Quotient_DP[8:1], 49'h0000000000000 } : { Quotient_DP[11:0], 45'h000000000000 };
  assign _064_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2359.7-2363.14" *) _063_;
  assign FP16ALT_SO = Format_sel_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2318.5-2364.12" *) 2'h3;
  function [56:0] _264_;
    input [56:0] a;
    input [113:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2352.7-2357.14" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _264_ = b[56:0];
      2'b1?:
        _264_ = b[113:57];
      default:
        _264_ = a;
    endcase
  endfunction
  assign _012_ = _264_({ Quotient_DP[14:0], 42'h00000000000 }, { Quotient_DP[11:1], 46'h000000000000, Quotient_DP[8:0], 48'h000000000000 }, { _068_, _066_ });
  assign _068_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2352.7-2357.14" *) _067_;
  assign FP16_SO = Format_sel_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2318.5-2364.12" *) 2'h2;
  function [56:0] _267_;
    input [56:0] a;
    input [911:0] b;
    input [15:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *)
    (* parallel_case *)
    casez (s)
      16'b???????????????1:
        _267_ = b[56:0];
      16'b??????????????1?:
        _267_ = b[113:57];
      16'b?????????????1??:
        _267_ = b[170:114];
      16'b????????????1???:
        _267_ = b[227:171];
      16'b???????????1????:
        _267_ = b[284:228];
      16'b??????????1?????:
        _267_ = b[341:285];
      16'b?????????1??????:
        _267_ = b[398:342];
      16'b????????1???????:
        _267_ = b[455:399];
      16'b???????1????????:
        _267_ = b[512:456];
      16'b??????1?????????:
        _267_ = b[569:513];
      16'b?????1??????????:
        _267_ = b[626:570];
      16'b????1???????????:
        _267_ = b[683:627];
      16'b???1????????????:
        _267_ = b[740:684];
      16'b??1?????????????:
        _267_ = b[797:741];
      16'b?1??????????????:
        _267_ = b[854:798];
      16'b1???????????????:
        _267_ = b[911:855];
      default:
        _267_ = a;
    endcase
  endfunction
  assign _010_ = _267_(Quotient_DP, { Quotient_DP[53:1], 4'h0, Quotient_DP[50:0], 6'h00, Quotient_DP[47:0], 9'h000, Quotient_DP[44:0], 12'h000, Quotient_DP[41:0], 15'h0000, Quotient_DP[38:0], 18'h00000, Quotient_DP[35:0], 21'h000000, Quotient_DP[32:0], 24'h000000, Quotient_DP[29:0], 27'h0000000, Quotient_DP[26:0], 30'h00000000, Quotient_DP[23:0], 33'h000000000, Quotient_DP[20:0], 36'h000000000, Quotient_DP[17:0], 39'h0000000000, Quotient_DP[14:0], 42'h00000000000, Quotient_DP[11:0], 45'h000000000000, Quotient_DP[8:0], 48'h000000000000 }, { _098_, _096_, _094_, _092_, _090_, _088_, _086_, _084_, _082_, _080_, _078_, _076_, _074_, _072_, _070_, _066_ });
  assign _080_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _079_;
  assign _079_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h1a;
  assign _079_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h19;
  assign _079_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h18;
  assign _082_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _081_;
  assign _081_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h1d;
  assign _081_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h1c;
  assign _081_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h1b;
  assign _084_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _083_;
  assign _083_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h20;
  assign _083_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h1f;
  assign _083_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h1e;
  assign _086_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _085_;
  assign _085_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h23;
  assign _085_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h22;
  assign _085_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h21;
  assign _088_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _087_;
  assign _087_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h26;
  assign _087_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h25;
  assign _087_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h24;
  assign _090_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _089_;
  assign _089_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h29;
  assign _089_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h28;
  assign _089_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h27;
  assign _092_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _091_;
  assign _091_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h2c;
  assign _091_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h2b;
  assign _091_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h2a;
  assign _094_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _093_;
  assign _093_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h2f;
  assign _093_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h2e;
  assign _093_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h2d;
  assign _096_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _095_;
  assign _095_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h32;
  assign _095_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h31;
  assign _095_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h30;
  assign _098_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) _097_;
  assign _097_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h34;
  assign _097_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2331.7-2350.14" *) 6'h33;
  function [56:0] _307_;
    input [56:0] a;
    input [341:0] b;
    input [5:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2320.7-2329.14" *)
    (* parallel_case *)
    casez (s)
      6'b?????1:
        _307_ = b[56:0];
      6'b????1?:
        _307_ = b[113:57];
      6'b???1??:
        _307_ = b[170:114];
      6'b??1???:
        _307_ = b[227:171];
      6'b?1????:
        _307_ = b[284:228];
      6'b1?????:
        _307_ = b[341:285];
      default:
        _307_ = a;
    endcase
  endfunction
  assign _008_ = _307_({ Quotient_DP[26:0], 30'h00000000 }, { Quotient_DP[23:0], 33'h000000000, Quotient_DP[20:0], 36'h000000000, Quotient_DP[17:0], 39'h0000000000, Quotient_DP[14:0], 42'h00000000000, Quotient_DP[11:0], 45'h000000000000, Quotient_DP[8:0], 48'h000000000000 }, { _078_, _076_, _074_, _072_, _070_, _066_ });
  function [56:0] _308_;
    input [56:0] a;
    input [227:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2318.5-2364.12" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _308_ = b[56:0];
      4'b??1?:
        _308_ = b[113:57];
      4'b?1??:
        _308_ = b[170:114];
      4'b1???:
        _308_ = b[227:171];
      default:
        _308_ = a;
    endcase
  endfunction
  assign Mant_result_prenorm_DO = _308_(57'hxxxxxxxxxxxxxxx, { _008_, _010_, _012_, _014_ }, { FP32_SO, FP64_SO, FP16_SO, FP16ALT_SO });
  function [31:0] _309_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2429.3-2446.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _309_ = b[31:0];
      3'b?1?:
        _309_ = b[63:32];
      3'b1??:
        _309_ = b[95:64];
      default:
        _309_ = a;
    endcase
  endfunction
  assign C_HALF_BIAS = _309_(32'hxxxxxxxx, 96'h000001ff000000070000003f, { FP64_SO, FP16_SO, _023_ });
  function [31:0] _310_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2429.3-2446.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _310_ = b[31:0];
      3'b?1?:
        _310_ = b[63:32];
      3'b1??:
        _310_ = b[95:64];
      default:
        _310_ = a;
    endcase
  endfunction
  assign C_BIAS_AONE = _310_(32'hxxxxxxxx, 96'h000004000000001000000080, { FP64_SO, FP16_SO, _023_ });
  function [57:0] _311_;
    input [57:0] a;
    input [1043:0] b;
    input [17:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      18'b?????????????????1:
        _311_ = b[57:0];
      18'b????????????????1?:
        _311_ = b[115:58];
      18'b???????????????1??:
        _311_ = b[173:116];
      18'b??????????????1???:
        _311_ = b[231:174];
      18'b?????????????1????:
        _311_ = b[289:232];
      18'b????????????1?????:
        _311_ = b[347:290];
      18'b???????????1??????:
        _311_ = b[405:348];
      18'b??????????1???????:
        _311_ = b[463:406];
      18'b?????????1????????:
        _311_ = b[521:464];
      18'b????????1?????????:
        _311_ = b[579:522];
      18'b???????1??????????:
        _311_ = b[637:580];
      18'b??????1???????????:
        _311_ = b[695:638];
      18'b?????1????????????:
        _311_ = b[753:696];
      18'b????1?????????????:
        _311_ = b[811:754];
      18'b???1??????????????:
        _311_ = b[869:812];
      18'b??1???????????????:
        _311_ = b[927:870];
      18'b?1????????????????:
        _311_ = b[985:928];
      18'b1?????????????????:
        _311_ = b[1043:986];
      default:
        _311_ = a;
    endcase
  endfunction
  assign Sqrt_Q2 = _311_(_128_, { _131_, _134_, _137_, _140_, _143_, _146_, _149_, _152_, _155_, _158_, _161_, _164_, _167_, _170_, _173_, _176_, _179_, _182_ }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _108_, _107_, _106_, _105_, _104_, _103_, _102_, _101_, _100_, _099_ });
  assign _099_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h12;
  assign _100_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h11;
  assign _101_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h10;
  assign _102_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h0f;
  assign _103_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h0e;
  assign _104_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h0d;
  assign _105_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h0c;
  assign _106_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h0b;
  assign _107_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h0a;
  assign _108_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h09;
  assign _109_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h08;
  assign _110_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h07;
  assign _111_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h06;
  assign _112_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h05;
  assign _113_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h04;
  assign _114_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h03;
  assign _115_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h02;
  assign _116_ = Crtl_cnt_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *) 6'h01;
  function [57:0] _330_;
    input [57:0] a;
    input [1043:0] b;
    input [17:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      18'b?????????????????1:
        _330_ = b[57:0];
      18'b????????????????1?:
        _330_ = b[115:58];
      18'b???????????????1??:
        _330_ = b[173:116];
      18'b??????????????1???:
        _330_ = b[231:174];
      18'b?????????????1????:
        _330_ = b[289:232];
      18'b????????????1?????:
        _330_ = b[347:290];
      18'b???????????1??????:
        _330_ = b[405:348];
      18'b??????????1???????:
        _330_ = b[463:406];
      18'b?????????1????????:
        _330_ = b[521:464];
      18'b????????1?????????:
        _330_ = b[579:522];
      18'b???????1??????????:
        _330_ = b[637:580];
      18'b??????1???????????:
        _330_ = b[695:638];
      18'b?????1????????????:
        _330_ = b[753:696];
      18'b????1?????????????:
        _330_ = b[811:754];
      18'b???1??????????????:
        _330_ = b[869:812];
      18'b??1???????????????:
        _330_ = b[927:870];
      18'b?1????????????????:
        _330_ = b[985:928];
      18'b1?????????????????:
        _330_ = b[1043:986];
      default:
        _330_ = a;
    endcase
  endfunction
  assign Q_sqrt2 = _330_({ 56'h00000000000000, Sqrt_quotinent_S[3:2] }, { 53'h00000000000000, Quotient_DP[2:0], Sqrt_quotinent_S[3:2], 50'h0000000000000, Quotient_DP[5:0], Sqrt_quotinent_S[3:2], 47'h000000000000, Quotient_DP[8:0], Sqrt_quotinent_S[3:2], 44'h00000000000, Quotient_DP[11:0], Sqrt_quotinent_S[3:2], 41'h00000000000, Quotient_DP[14:0], Sqrt_quotinent_S[3:2], 38'h0000000000, Quotient_DP[17:0], Sqrt_quotinent_S[3:2], 35'h000000000, Quotient_DP[20:0], Sqrt_quotinent_S[3:2], 32'h00000000, Quotient_DP[23:0], Sqrt_quotinent_S[3:2], 29'h00000000, Quotient_DP[26:0], Sqrt_quotinent_S[3:2], 26'h0000000, Quotient_DP[29:0], Sqrt_quotinent_S[3:2], 23'h000000, Quotient_DP[32:0], Sqrt_quotinent_S[3:2], 20'h00000, Quotient_DP[35:0], Sqrt_quotinent_S[3:2], 17'h00000, Quotient_DP[38:0], Sqrt_quotinent_S[3:2], 14'h0000, Quotient_DP[41:0], Sqrt_quotinent_S[3:2], 11'h000, Quotient_DP[44:0], Sqrt_quotinent_S[3:2], 8'h00, Quotient_DP[47:0], Sqrt_quotinent_S[3:2], 5'h00, Quotient_DP[50:0], Sqrt_quotinent_S[3:2], 2'h0, Quotient_DP[53:0], Sqrt_quotinent_S[3:2] }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _108_, _107_, _106_, _105_, _104_, _103_, _102_, _101_, _100_, _099_ });
  function [1:0] _331_;
    input [1:0] a;
    input [17:0] b;
    input [8:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      9'b????????1:
        _331_ = b[1:0];
      9'b???????1?:
        _331_ = b[3:2];
      9'b??????1??:
        _331_ = b[5:4];
      9'b?????1???:
        _331_ = b[7:6];
      9'b????1????:
        _331_ = b[9:8];
      9'b???1?????:
        _331_ = b[11:10];
      9'b??1??????:
        _331_ = b[13:12];
      9'b?1???????:
        _331_ = b[15:14];
      9'b1????????:
        _331_ = b[17:16];
      default:
        _331_ = a;
    endcase
  endfunction
  assign \Sqrt_DI[2]  = _331_(Mant_D_sqrt_Norm[49:48], { Mant_D_sqrt_Norm[43:42], Mant_D_sqrt_Norm[37:36], Mant_D_sqrt_Norm[31:30], Mant_D_sqrt_Norm[25:24], Mant_D_sqrt_Norm[19:18], Mant_D_sqrt_Norm[13:12], Mant_D_sqrt_Norm[7:6], Mant_D_sqrt_Norm[1:0], 2'h0 }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _024_ });
  function [57:0] _332_;
    input [57:0] a;
    input [1043:0] b;
    input [17:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      18'b?????????????????1:
        _332_ = b[57:0];
      18'b????????????????1?:
        _332_ = b[115:58];
      18'b???????????????1??:
        _332_ = b[173:116];
      18'b??????????????1???:
        _332_ = b[231:174];
      18'b?????????????1????:
        _332_ = b[289:232];
      18'b????????????1?????:
        _332_ = b[347:290];
      18'b???????????1??????:
        _332_ = b[405:348];
      18'b??????????1???????:
        _332_ = b[463:406];
      18'b?????????1????????:
        _332_ = b[521:464];
      18'b????????1?????????:
        _332_ = b[579:522];
      18'b???????1??????????:
        _332_ = b[637:580];
      18'b??????1???????????:
        _332_ = b[695:638];
      18'b?????1????????????:
        _332_ = b[753:696];
      18'b????1?????????????:
        _332_ = b[811:754];
      18'b???1??????????????:
        _332_ = b[869:812];
      18'b??1???????????????:
        _332_ = b[927:870];
      18'b?1????????????????:
        _332_ = b[985:928];
      18'b1?????????????????:
        _332_ = b[1043:986];
      default:
        _332_ = a;
    endcase
  endfunction
  assign Sqrt_Q1 = _332_(_127_, { _130_, _133_, _136_, _139_, _142_, _145_, _148_, _151_, _154_, _157_, _160_, _163_, _166_, _169_, _172_, _175_, _178_, _181_ }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _108_, _107_, _106_, _105_, _104_, _103_, _102_, _101_, _100_, _099_ });
  function [57:0] _333_;
    input [57:0] a;
    input [1043:0] b;
    input [17:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      18'b?????????????????1:
        _333_ = b[57:0];
      18'b????????????????1?:
        _333_ = b[115:58];
      18'b???????????????1??:
        _333_ = b[173:116];
      18'b??????????????1???:
        _333_ = b[231:174];
      18'b?????????????1????:
        _333_ = b[289:232];
      18'b????????????1?????:
        _333_ = b[347:290];
      18'b???????????1??????:
        _333_ = b[405:348];
      18'b??????????1???????:
        _333_ = b[463:406];
      18'b?????????1????????:
        _333_ = b[521:464];
      18'b????????1?????????:
        _333_ = b[579:522];
      18'b???????1??????????:
        _333_ = b[637:580];
      18'b??????1???????????:
        _333_ = b[695:638];
      18'b?????1????????????:
        _333_ = b[753:696];
      18'b????1?????????????:
        _333_ = b[811:754];
      18'b???1??????????????:
        _333_ = b[869:812];
      18'b??1???????????????:
        _333_ = b[927:870];
      18'b?1????????????????:
        _333_ = b[985:928];
      18'b1?????????????????:
        _333_ = b[1043:986];
      default:
        _333_ = a;
    endcase
  endfunction
  assign Q_sqrt1 = _333_({ 57'h000000000000000, Sqrt_quotinent_S[3] }, { 54'h00000000000000, Quotient_DP[2:0], Sqrt_quotinent_S[3], 51'h0000000000000, Quotient_DP[5:0], Sqrt_quotinent_S[3], 48'h000000000000, Quotient_DP[8:0], Sqrt_quotinent_S[3], 45'h000000000000, Quotient_DP[11:0], Sqrt_quotinent_S[3], 42'h00000000000, Quotient_DP[14:0], Sqrt_quotinent_S[3], 39'h0000000000, Quotient_DP[17:0], Sqrt_quotinent_S[3], 36'h000000000, Quotient_DP[20:0], Sqrt_quotinent_S[3], 33'h000000000, Quotient_DP[23:0], Sqrt_quotinent_S[3], 30'h00000000, Quotient_DP[26:0], Sqrt_quotinent_S[3], 27'h0000000, Quotient_DP[29:0], Sqrt_quotinent_S[3], 24'h000000, Quotient_DP[32:0], Sqrt_quotinent_S[3], 21'h000000, Quotient_DP[35:0], Sqrt_quotinent_S[3], 18'h00000, Quotient_DP[38:0], Sqrt_quotinent_S[3], 15'h0000, Quotient_DP[41:0], Sqrt_quotinent_S[3], 12'h000, Quotient_DP[44:0], Sqrt_quotinent_S[3], 9'h000, Quotient_DP[47:0], Sqrt_quotinent_S[3], 6'h00, Quotient_DP[50:0], Sqrt_quotinent_S[3], 3'h0, Quotient_DP[53:0], Sqrt_quotinent_S[3] }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _108_, _107_, _106_, _105_, _104_, _103_, _102_, _101_, _100_, _099_ });
  function [1:0] _334_;
    input [1:0] a;
    input [17:0] b;
    input [8:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      9'b????????1:
        _334_ = b[1:0];
      9'b???????1?:
        _334_ = b[3:2];
      9'b??????1??:
        _334_ = b[5:4];
      9'b?????1???:
        _334_ = b[7:6];
      9'b????1????:
        _334_ = b[9:8];
      9'b???1?????:
        _334_ = b[11:10];
      9'b??1??????:
        _334_ = b[13:12];
      9'b?1???????:
        _334_ = b[15:14];
      9'b1????????:
        _334_ = b[17:16];
      default:
        _334_ = a;
    endcase
  endfunction
  assign \Sqrt_DI[1]  = _334_(Mant_D_sqrt_Norm[51:50], { Mant_D_sqrt_Norm[45:44], Mant_D_sqrt_Norm[39:38], Mant_D_sqrt_Norm[33:32], Mant_D_sqrt_Norm[27:26], Mant_D_sqrt_Norm[21:20], Mant_D_sqrt_Norm[15:14], Mant_D_sqrt_Norm[9:8], Mant_D_sqrt_Norm[3:2], 2'h0 }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _024_ });
  function [57:0] _335_;
    input [57:0] a;
    input [1043:0] b;
    input [17:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      18'b?????????????????1:
        _335_ = b[57:0];
      18'b????????????????1?:
        _335_ = b[115:58];
      18'b???????????????1??:
        _335_ = b[173:116];
      18'b??????????????1???:
        _335_ = b[231:174];
      18'b?????????????1????:
        _335_ = b[289:232];
      18'b????????????1?????:
        _335_ = b[347:290];
      18'b???????????1??????:
        _335_ = b[405:348];
      18'b??????????1???????:
        _335_ = b[463:406];
      18'b?????????1????????:
        _335_ = b[521:464];
      18'b????????1?????????:
        _335_ = b[579:522];
      18'b???????1??????????:
        _335_ = b[637:580];
      18'b??????1???????????:
        _335_ = b[695:638];
      18'b?????1????????????:
        _335_ = b[753:696];
      18'b????1?????????????:
        _335_ = b[811:754];
      18'b???1??????????????:
        _335_ = b[869:812];
      18'b??1???????????????:
        _335_ = b[927:870];
      18'b?1????????????????:
        _335_ = b[985:928];
      18'b1?????????????????:
        _335_ = b[1043:986];
      default:
        _335_ = a;
    endcase
  endfunction
  assign Sqrt_Q0 = _335_(Q_sqrt_com_0, { _129_, _132_, _135_, _138_, _141_, _144_, _147_, _150_, _153_, _156_, _159_, _162_, _165_, _168_, _171_, _174_, _177_, _180_ }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _108_, _107_, _106_, _105_, _104_, _103_, _102_, _101_, _100_, _099_ });
  function [57:0] _336_;
    input [57:0] a;
    input [1043:0] b;
    input [17:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      18'b?????????????????1:
        _336_ = b[57:0];
      18'b????????????????1?:
        _336_ = b[115:58];
      18'b???????????????1??:
        _336_ = b[173:116];
      18'b??????????????1???:
        _336_ = b[231:174];
      18'b?????????????1????:
        _336_ = b[289:232];
      18'b????????????1?????:
        _336_ = b[347:290];
      18'b???????????1??????:
        _336_ = b[405:348];
      18'b??????????1???????:
        _336_ = b[463:406];
      18'b?????????1????????:
        _336_ = b[521:464];
      18'b????????1?????????:
        _336_ = b[579:522];
      18'b???????1??????????:
        _336_ = b[637:580];
      18'b??????1???????????:
        _336_ = b[695:638];
      18'b?????1????????????:
        _336_ = b[753:696];
      18'b????1?????????????:
        _336_ = b[811:754];
      18'b???1??????????????:
        _336_ = b[869:812];
      18'b??1???????????????:
        _336_ = b[927:870];
      18'b?1????????????????:
        _336_ = b[985:928];
      18'b1?????????????????:
        _336_ = b[1043:986];
      default:
        _336_ = a;
    endcase
  endfunction
  assign Q_sqrt0 = _336_(58'h000000000000000, { 55'h00000000000000, Quotient_DP[2:0], 52'h0000000000000, Quotient_DP[5:0], 49'h0000000000000, Quotient_DP[8:0], 46'h000000000000, Quotient_DP[11:0], 43'h00000000000, Quotient_DP[14:0], 40'h0000000000, Quotient_DP[17:0], 37'h0000000000, Quotient_DP[20:0], 34'h000000000, Quotient_DP[23:0], 31'h00000000, Quotient_DP[26:0], 28'h0000000, Quotient_DP[29:0], 25'h0000000, Quotient_DP[32:0], 22'h000000, Quotient_DP[35:0], 19'h00000, Quotient_DP[38:0], 16'h0000, Quotient_DP[41:0], 13'h0000, Quotient_DP[44:0], 10'h000, Quotient_DP[47:0], 7'h00, Quotient_DP[50:0], 4'h0, Quotient_DP[53:0] }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _108_, _107_, _106_, _105_, _104_, _103_, _102_, _101_, _100_, _099_ });
  function [1:0] _337_;
    input [1:0] a;
    input [17:0] b;
    input [8:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:1586.5-1807.12" *)
    (* parallel_case *)
    casez (s)
      9'b????????1:
        _337_ = b[1:0];
      9'b???????1?:
        _337_ = b[3:2];
      9'b??????1??:
        _337_ = b[5:4];
      9'b?????1???:
        _337_ = b[7:6];
      9'b????1????:
        _337_ = b[9:8];
      9'b???1?????:
        _337_ = b[11:10];
      9'b??1??????:
        _337_ = b[13:12];
      9'b?1???????:
        _337_ = b[15:14];
      9'b1????????:
        _337_ = b[17:16];
      default:
        _337_ = a;
    endcase
  endfunction
  assign \Sqrt_DI[0]  = _337_(Mant_D_sqrt_Norm[53:52], { Mant_D_sqrt_Norm[47:46], Mant_D_sqrt_Norm[41:40], Mant_D_sqrt_Norm[35:34], Mant_D_sqrt_Norm[29:28], Mant_D_sqrt_Norm[23:22], Mant_D_sqrt_Norm[17:16], Mant_D_sqrt_Norm[11:10], Mant_D_sqrt_Norm[5:4], 2'h0 }, { _116_, _115_, _114_, _113_, _112_, _111_, _110_, _109_, _024_ });
  function [57:0] _338_;
    input [57:0] a;
    input [231:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:895.3-924.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _338_ = b[57:0];
      4'b??1?:
        _338_ = b[115:58];
      4'b?1??:
        _338_ = b[173:116];
      4'b1???:
        _338_ = b[231:174];
      default:
        _338_ = a;
    endcase
  endfunction
  assign Q_sqrt_com_2 = _338_(58'hxxxxxxxxxxxxxxx, { 29'h00000000, _043_, _046_, 42'h00000000000, _053_, 45'h000000000000, _060_ }, { FP32_SO, FP64_SO, FP16_SO, FP16ALT_SO });
  function [57:0] _339_;
    input [57:0] a;
    input [231:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:895.3-924.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _339_ = b[57:0];
      4'b??1?:
        _339_ = b[115:58];
      4'b?1??:
        _339_ = b[173:116];
      4'b1???:
        _339_ = b[231:174];
      default:
        _339_ = a;
    endcase
  endfunction
  assign Q_sqrt_com_1 = _339_(58'hxxxxxxxxxxxxxxx, { 29'h00000000, _042_, _045_, 42'h00000000000, _052_, 45'h000000000000, _059_ }, { FP32_SO, FP64_SO, FP16_SO, FP16ALT_SO });
  function [57:0] _340_;
    input [57:0] a;
    input [231:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:895.3-924.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _340_ = b[57:0];
      4'b??1?:
        _340_ = b[115:58];
      4'b?1??:
        _340_ = b[173:116];
      4'b1???:
        _340_ = b[231:174];
      default:
        _340_ = a;
    endcase
  endfunction
  assign Q_sqrt_com_0 = _340_(58'hxxxxxxxxxxxxxxx, { 29'h00000000, _041_, _044_, 42'h00000000000, _051_, 45'h000000000000, _058_ }, { FP32_SO, FP64_SO, FP16_SO, FP16ALT_SO });
  function [3:0] _341_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:895.3-924.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _341_ = b[3:0];
      4'b??1?:
        _341_ = b[7:4];
      4'b?1??:
        _341_ = b[11:8];
      4'b1???:
        _341_ = b[15:12];
      default:
        _341_ = a;
    endcase
  endfunction
  assign Sqrt_quotinent_S = _341_(4'hx, { _040_, _039_, _038_, _037_, \Iteration_cell_carry_D[0] , \Iteration_cell_carry_D[1] , \Iteration_cell_carry_D[2] , \Iteration_cell_carry_D[3] , _050_, _049_, _048_, _047_, _057_, _056_, _055_, _054_ }, { FP32_SO, FP64_SO, FP16_SO, FP16ALT_SO });
  assign _117_ = _062_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:736.12-736.35|FPNewBlackbox.preprocessed.v:736.8-739.25" *) 1'h1 : 1'hx;
  assign _118_ = Special_case_SBI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:731.8-731.25|FPNewBlackbox.preprocessed.v:731.4-734.22" *) 1'h0 : 1'h1;
  assign _004_ = _026_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:730.12-730.32|FPNewBlackbox.preprocessed.v:730.8-739.25" *) _118_ : _117_;
  assign _119_ = Final_state_S ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:723.12-723.25|FPNewBlackbox.preprocessed.v:723.8-726.20" *) 1'h1 : 1'h0;
  assign _003_ = _026_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:717.12-717.32|FPNewBlackbox.preprocessed.v:717.8-726.20" *) _118_ : _119_;
  assign _120_ = Fsm_enable_S ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:710.12-710.24|FPNewBlackbox.preprocessed.v:710.8-713.24" *) _019_[5:0] : 6'h00;
  assign _000_ = _062_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:708.12-708.35|FPNewBlackbox.preprocessed.v:708.8-713.24" *) 6'h00 : _120_;
  assign _121_ = Done_SO ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:694.12-694.19|FPNewBlackbox.preprocessed.v:694.8-697.37" *) 1'h0 : 1'hx;
  assign _122_ = _028_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:692.12-692.37|FPNewBlackbox.preprocessed.v:692.8-697.37" *) 1'h1 : _121_;
  assign _005_ = Kill_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:690.12-690.19|FPNewBlackbox.preprocessed.v:690.8-697.37" *) 1'h0 : _122_;
  assign _006_ = _028_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:682.12-682.37|FPNewBlackbox.preprocessed.v:682.8-685.29" *) 1'h1 : 1'h0;
  assign _123_ = _027_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:672.12-672.36|FPNewBlackbox.preprocessed.v:672.8-677.35" *) 1'h1 : _121_;
  assign _001_ = Kill_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:670.12-670.19|FPNewBlackbox.preprocessed.v:670.8-677.35" *) 1'h0 : _123_;
  assign _002_ = _027_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:662.12-662.36|FPNewBlackbox.preprocessed.v:662.8-665.28" *) 1'h1 : 1'h0;
  assign _016_ = _066_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:628.7-632.14" *) 6'h02 : 6'h03;
  function [5:0] _357_;
    input [5:0] a;
    input [11:0] b;
    input [1:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:621.7-626.14" *)
    (* parallel_case *)
    casez (s)
      2'b?1:
        _357_ = b[5:0];
      2'b1?:
        _357_ = b[11:6];
      default:
        _357_ = a;
    endcase
  endfunction
  assign _015_ = _357_(6'h04, 12'h083, { _066_, _070_ });
  function [5:0] _358_;
    input [5:0] a;
    input [95:0] b;
    input [15:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *)
    (* parallel_case *)
    casez (s)
      16'b???????????????1:
        _358_ = b[5:0];
      16'b??????????????1?:
        _358_ = b[11:6];
      16'b?????????????1??:
        _358_ = b[17:12];
      16'b????????????1???:
        _358_ = b[23:18];
      16'b???????????1????:
        _358_ = b[29:24];
      16'b??????????1?????:
        _358_ = b[35:30];
      16'b?????????1??????:
        _358_ = b[41:36];
      16'b????????1???????:
        _358_ = b[47:42];
      16'b???????1????????:
        _358_ = b[53:48];
      16'b??????1?????????:
        _358_ = b[59:54];
      16'b?????1??????????:
        _358_ = b[65:60];
      16'b????1???????????:
        _358_ = b[71:66];
      16'b???1????????????:
        _358_ = b[77:72];
      16'b??1?????????????:
        _358_ = b[83:78];
      16'b?1??????????????:
        _358_ = b[89:84];
      16'b1???????????????:
        _358_ = b[95:90];
      default:
        _358_ = a;
    endcase
  endfunction
  assign _013_ = _358_(6'h12, 96'h08310518720928b30d38f411, { _066_, _070_, _072_, _074_, _076_, _078_, _080_, _082_, _084_, _086_, _088_, _090_, _092_, _094_, _096_, _125_ });
  assign _125_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) { _124_[2], _097_ };
  assign _124_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h35;
  assign _072_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) _071_;
  assign _071_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h0e;
  assign _070_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) { _067_, _069_[0] };
  assign _067_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h09;
  assign _067_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h0a;
  assign _069_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h0b;
  assign _066_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) { _063_, _065_[0] };
  assign _063_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h06;
  assign _063_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h07;
  assign _065_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:600.7-619.14" *) 6'h08;
  assign FP64_SO = Format_sel_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:587.5-633.12" *) 2'h1;
  function [5:0] _372_;
    input [5:0] a;
    input [35:0] b;
    input [5:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *)
    (* parallel_case *)
    casez (s)
      6'b?????1:
        _372_ = b[5:0];
      6'b????1?:
        _372_ = b[11:6];
      6'b???1??:
        _372_ = b[17:12];
      6'b??1???:
        _372_ = b[23:18];
      6'b?1????:
        _372_ = b[29:24];
      6'b1?????:
        _372_ = b[35:30];
      default:
        _372_ = a;
    endcase
  endfunction
  assign _011_ = _372_(6'h08, 36'h083105187, { _066_, _070_, _072_, _074_, _076_, _078_ });
  assign _078_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) _077_;
  assign _077_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h15;
  assign _077_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h16;
  assign _077_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h17;
  assign _076_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) _075_;
  assign _075_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h12;
  assign _075_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h13;
  assign _075_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h14;
  assign _074_ = | (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) _073_;
  assign _073_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h0f;
  assign _073_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h10;
  assign _073_[0] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h11;
  assign _071_[2] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h0c;
  assign _071_[1] = Precision_ctl_S == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:589.7-598.14" *) 6'h0d;
  assign FP32_SO = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:587.5-633.12" *) Format_sel_S;
  function [5:0] _388_;
    input [5:0] a;
    input [23:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:587.5-633.12" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _388_ = b[5:0];
      4'b??1?:
        _388_ = b[11:6];
      4'b?1??:
        _388_ = b[17:12];
      4'b1???:
        _388_ = b[23:18];
      default:
        _388_ = a;
    endcase
  endfunction
  assign State_ctl_S = _388_(6'hxx, { _011_, _013_, _015_, _016_ }, { FP32_SO, FP64_SO, FP16_SO, FP16ALT_SO });
  assign _009_ = FP16_SO ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:505.12-505.19|FPNewBlackbox.preprocessed.v:505.8-508.64" *) { _034_, 42'h00000000000 } : { _035_, 45'h000000000000 };
  assign _007_ = FP64_SO ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:503.12-503.19|FPNewBlackbox.preprocessed.v:503.8-508.64" *) _033_ : _009_;
  assign Denominator_se_DB = FP32_SO ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:501.7-501.14|FPNewBlackbox.preprocessed.v:501.3-508.64" *) { _032_, 29'h00000000 } : _007_;
  assign _126_ = | (* src = "FPNewBlackbox.preprocessed.v:702.40-702.51" *) Crtl_cnt_S;
  assign _129_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1601.18-1601.57" *) Q_sqrt_com_0 : { 55'h00000000000000, Quotient_DP[2:1], 1'h0 };
  assign _130_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1604.18-1604.62" *) Q_sqrt_com_1 : { 54'h00000000000000, Quotient_DP[2:0], 1'h0 };
  assign _131_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1607.18-1607.62" *) Q_sqrt_com_2 : { 53'h00000000000000, Quotient_DP[2:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _132_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1612.18-1612.57" *) Q_sqrt_com_0 : { 52'h0000000000000, Quotient_DP[5:1], 1'h0 };
  assign _133_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1615.18-1615.62" *) Q_sqrt_com_1 : { 51'h0000000000000, Quotient_DP[5:0], 1'h0 };
  assign _134_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1618.18-1618.62" *) Q_sqrt_com_2 : { 50'h0000000000000, Quotient_DP[5:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _135_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1623.18-1623.57" *) Q_sqrt_com_0 : { 49'h0000000000000, Quotient_DP[8:1], 1'h0 };
  assign _136_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1626.18-1626.62" *) Q_sqrt_com_1 : { 48'h000000000000, Quotient_DP[8:0], 1'h0 };
  assign _137_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1629.18-1629.62" *) Q_sqrt_com_2 : { 47'h000000000000, Quotient_DP[8:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _138_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1634.18-1634.57" *) Q_sqrt_com_0 : { 46'h000000000000, Quotient_DP[11:1], 1'h0 };
  assign _139_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1637.18-1637.62" *) Q_sqrt_com_1 : { 45'h000000000000, Quotient_DP[11:0], 1'h0 };
  assign _140_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1640.18-1640.62" *) Q_sqrt_com_2 : { 44'h00000000000, Quotient_DP[11:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _141_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1645.18-1645.57" *) Q_sqrt_com_0 : { 43'h00000000000, Quotient_DP[14:1], 1'h0 };
  assign _142_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1648.18-1648.62" *) Q_sqrt_com_1 : { 42'h00000000000, Quotient_DP[14:0], 1'h0 };
  assign _143_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1651.18-1651.62" *) Q_sqrt_com_2 : { 41'h00000000000, Quotient_DP[14:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _144_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1656.18-1656.57" *) Q_sqrt_com_0 : { 40'h0000000000, Quotient_DP[17:1], 1'h0 };
  assign _145_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1659.18-1659.62" *) Q_sqrt_com_1 : { 39'h0000000000, Quotient_DP[17:0], 1'h0 };
  assign _146_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1662.18-1662.62" *) Q_sqrt_com_2 : { 38'h0000000000, Quotient_DP[17:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _147_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1667.18-1667.57" *) Q_sqrt_com_0 : { 37'h0000000000, Quotient_DP[20:1], 1'h0 };
  assign _148_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1670.18-1670.62" *) Q_sqrt_com_1 : { 36'h000000000, Quotient_DP[20:0], 1'h0 };
  assign _149_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1673.18-1673.62" *) Q_sqrt_com_2 : { 35'h000000000, Quotient_DP[20:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _150_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1678.18-1678.57" *) Q_sqrt_com_0 : { 34'h000000000, Quotient_DP[23:1], 1'h0 };
  assign _151_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1681.18-1681.62" *) Q_sqrt_com_1 : { 33'h000000000, Quotient_DP[23:0], 1'h0 };
  assign _152_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1684.18-1684.62" *) Q_sqrt_com_2 : { 32'h00000000, Quotient_DP[23:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _153_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1689.18-1689.57" *) Q_sqrt_com_0 : { 31'h00000000, Quotient_DP[26:1], 1'h0 };
  assign _154_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1692.18-1692.62" *) Q_sqrt_com_1 : { 30'h00000000, Quotient_DP[26:0], 1'h0 };
  assign _155_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1695.18-1695.62" *) Q_sqrt_com_2 : { 29'h00000000, Quotient_DP[26:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _156_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1700.18-1700.57" *) Q_sqrt_com_0 : { 28'h0000000, Quotient_DP[29:1], 1'h0 };
  assign _157_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1703.18-1703.62" *) Q_sqrt_com_1 : { 27'h0000000, Quotient_DP[29:0], 1'h0 };
  assign _158_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1706.18-1706.62" *) Q_sqrt_com_2 : { 26'h0000000, Quotient_DP[29:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _159_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1711.18-1711.57" *) Q_sqrt_com_0 : { 25'h0000000, Quotient_DP[32:1], 1'h0 };
  assign _160_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1714.18-1714.62" *) Q_sqrt_com_1 : { 24'h000000, Quotient_DP[32:0], 1'h0 };
  assign _161_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1717.18-1717.62" *) Q_sqrt_com_2 : { 23'h000000, Quotient_DP[32:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _162_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1722.18-1722.57" *) Q_sqrt_com_0 : { 22'h000000, Quotient_DP[35:1], 1'h0 };
  assign _163_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1725.18-1725.62" *) Q_sqrt_com_1 : { 21'h000000, Quotient_DP[35:0], 1'h0 };
  assign _164_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1728.18-1728.62" *) Q_sqrt_com_2 : { 20'h00000, Quotient_DP[35:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _165_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1733.18-1733.57" *) Q_sqrt_com_0 : { 19'h00000, Quotient_DP[38:1], 1'h0 };
  assign _166_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1736.18-1736.62" *) Q_sqrt_com_1 : { 18'h00000, Quotient_DP[38:0], 1'h0 };
  assign _167_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1739.18-1739.62" *) Q_sqrt_com_2 : { 17'h00000, Quotient_DP[38:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _168_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1744.18-1744.57" *) Q_sqrt_com_0 : { 16'h0000, Quotient_DP[41:1], 1'h0 };
  assign _169_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1747.18-1747.62" *) Q_sqrt_com_1 : { 15'h0000, Quotient_DP[41:0], 1'h0 };
  assign _170_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1750.18-1750.62" *) Q_sqrt_com_2 : { 14'h0000, Quotient_DP[41:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _171_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1755.18-1755.57" *) Q_sqrt_com_0 : { 13'h0000, Quotient_DP[44:1], 1'h0 };
  assign _172_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1758.18-1758.62" *) Q_sqrt_com_1 : { 12'h000, Quotient_DP[44:0], 1'h0 };
  assign _173_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1761.18-1761.62" *) Q_sqrt_com_2 : { 11'h000, Quotient_DP[44:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _174_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1766.18-1766.57" *) Q_sqrt_com_0 : { 10'h000, Quotient_DP[47:1], 1'h0 };
  assign _175_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1769.18-1769.62" *) Q_sqrt_com_1 : { 9'h000, Quotient_DP[47:0], 1'h0 };
  assign _176_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1772.18-1772.62" *) Q_sqrt_com_2 : { 8'h00, Quotient_DP[47:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _177_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1777.18-1777.57" *) Q_sqrt_com_0 : { 7'h00, Quotient_DP[50:1], 1'h0 };
  assign _178_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1780.18-1780.62" *) Q_sqrt_com_1 : { 6'h00, Quotient_DP[50:0], 1'h0 };
  assign _179_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1783.18-1783.62" *) Q_sqrt_com_2 : { 5'h00, Quotient_DP[50:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _180_ = Quotient_DP[0] ? (* src = "FPNewBlackbox.preprocessed.v:1788.18-1788.57" *) Q_sqrt_com_0 : { 4'h0, Quotient_DP[53:1], 1'h0 };
  assign _181_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1791.18-1791.62" *) Q_sqrt_com_1 : { 3'h0, Quotient_DP[53:0], 1'h0 };
  assign _182_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1794.18-1794.62" *) Q_sqrt_com_2 : { 2'h0, Quotient_DP[53:0], Sqrt_quotinent_S[3], 1'h0 };
  assign _127_ = Sqrt_quotinent_S[3] ? (* src = "FPNewBlackbox.preprocessed.v:1802.18-1802.62" *) Q_sqrt_com_1 : 58'h000000000000000;
  assign _128_ = Sqrt_quotinent_S[2] ? (* src = "FPNewBlackbox.preprocessed.v:1805.18-1805.62" *) Q_sqrt_com_2 : { 56'h00000000000000, Sqrt_quotinent_S[3], 1'h0 };
  assign Sqrt_R0 = Sqrt_start_dly_S ? (* src = "FPNewBlackbox.preprocessed.v:2022.20-2022.82" *) 58'h000000000000000 : Partial_remainder_DP;
  assign Denominator_se_format_DB[32] = FP32_SO ? (* src = "FPNewBlackbox.preprocessed.v:2028.217-2028.258" *) 1'h1 : Denominator_se_DB[28];
  assign Denominator_se_format_DB[45] = FP16_SO ? (* src = "FPNewBlackbox.preprocessed.v:2028.144-2028.185" *) 1'h1 : Denominator_se_DB[41];
  assign Denominator_se_format_DB[48] = FP16ALT_SO ? (* src = "FPNewBlackbox.preprocessed.v:2028.65-2028.112" *) 1'h1 : Denominator_se_DB[44];
  assign _183_ = FP32_SO ? (* src = "FPNewBlackbox.preprocessed.v:2032.225-2032.263" *) 1'h1 : Numerator_DI[28];
  assign _184_ = FP16_SO ? (* src = "FPNewBlackbox.preprocessed.v:2032.158-2032.196" *) 1'h1 : Numerator_DI[41];
  assign _185_ = FP16ALT_SO ? (* src = "FPNewBlackbox.preprocessed.v:2032.85-2032.129" *) 1'h1 : Numerator_DI[44];
  assign _186_ = FP32_SO ? (* src = "FPNewBlackbox.preprocessed.v:2032.515-2032.566" *) Quotient_DP[0] : Partial_remainder_DP[31];
  assign _187_ = FP16_SO ? (* src = "FPNewBlackbox.preprocessed.v:2032.429-2032.480" *) Quotient_DP[0] : Partial_remainder_DP[44];
  assign _188_ = FP16ALT_SO ? (* src = "FPNewBlackbox.preprocessed.v:2032.340-2032.394" *) Quotient_DP[0] : Partial_remainder_DP[47];
  assign First_iteration_cell_div_a_D = Div_start_dly_S ? (* src = "FPNewBlackbox.preprocessed.v:2032.41-2032.632" *) { 1'h0, Numerator_DI[52:45], _185_, Numerator_DI[43:42], _184_, Numerator_DI[40:29], _183_, Numerator_DI[27:0], FP64_SO, 3'h0 } : { Partial_remainder_DP[56:48], _188_, Partial_remainder_DP[46:45], _187_, Partial_remainder_DP[43:32], _186_, Partial_remainder_DP[30:3], _025_, 3'h0 };
  assign { _189_[31:1], Sel_b_for_first_S } = Div_start_dly_S ? (* src = "FPNewBlackbox.preprocessed.v:2033.30-2033.66" *) 32'd1 : { 31'h00000000, Quotient_DP[0] };
  assign First_iteration_cell_div_b_D = Sel_b_for_first_S ? (* src = "FPNewBlackbox.preprocessed.v:2034.41-2034.115" *) { Denominator_se_DB[53:45], Denominator_se_format_DB[48], Denominator_se_DB[43:42], Denominator_se_format_DB[45], Denominator_se_DB[40:29], Denominator_se_format_DB[32], Denominator_se_DB[27:0], FP64_SO, 3'h0 } : { 1'h0, Denominator_DI, 4'h0 };
  assign \Iteration_cell_a_BMASK_D[0]  = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2035.40-2035.97" *) Sqrt_R0 : First_iteration_cell_div_a_D;
  assign \Iteration_cell_b_BMASK_D[0]  = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2036.40-2036.97" *) Sqrt_Q0 : First_iteration_cell_div_b_D;
  assign Sec_iteration_cell_div_a_D[32] = FP32_SO ? (* src = "FPNewBlackbox.preprocessed.v:2043.294-2043.355" *) Sel_b_for_sec_S : \Iteration_cell_sum_AMASK_D[0] [31];
  assign Sec_iteration_cell_div_a_D[45] = FP16_SO ? (* src = "FPNewBlackbox.preprocessed.v:2043.189-2043.250" *) Sel_b_for_sec_S : \Iteration_cell_sum_AMASK_D[0] [44];
  assign Sec_iteration_cell_div_a_D[48] = FP16ALT_SO ? (* src = "FPNewBlackbox.preprocessed.v:2043.81-2043.145" *) Sel_b_for_sec_S : \Iteration_cell_sum_AMASK_D[0] [47];
  assign Sec_iteration_cell_div_b_D = \Iteration_cell_sum_AMASK_D[0] [57] ? (* src = "FPNewBlackbox.preprocessed.v:2044.41-2044.113" *) { 1'h0, Denominator_DI, 4'h0 } : { Denominator_se_DB[53:45], Denominator_se_format_DB[48], Denominator_se_DB[43:42], Denominator_se_format_DB[45], Denominator_se_DB[40:29], Denominator_se_format_DB[32], Denominator_se_DB[27:0], FP64_SO, 3'h0 };
  assign \Iteration_cell_a_BMASK_D[1]  = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2045.42-2045.97" *) { \Iteration_cell_sum_AMASK_D[0] [57], \Iteration_cell_sum_AMASK_D[0] [54:0], \Sqrt_DO[0]  } : { \Iteration_cell_sum_AMASK_D[0] [56:48], Sec_iteration_cell_div_a_D[48], \Iteration_cell_sum_AMASK_D[0] [46:45], Sec_iteration_cell_div_a_D[45], \Iteration_cell_sum_AMASK_D[0] [43:32], Sec_iteration_cell_div_a_D[32], \Iteration_cell_sum_AMASK_D[0] [30:3], Sec_iteration_cell_div_a_D[3], 3'h0 };
  assign \Iteration_cell_b_BMASK_D[1]  = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2046.42-2046.97" *) Sqrt_Q1 : Sec_iteration_cell_div_b_D;
  assign Thi_iteration_cell_div_a_D[32] = FP32_SO ? (* src = "FPNewBlackbox.preprocessed.v:2055.294-2055.355" *) Sel_b_for_thi_S : \Iteration_cell_sum_AMASK_D[1] [31];
  assign Thi_iteration_cell_div_a_D[45] = FP16_SO ? (* src = "FPNewBlackbox.preprocessed.v:2055.189-2055.250" *) Sel_b_for_thi_S : \Iteration_cell_sum_AMASK_D[1] [44];
  assign Thi_iteration_cell_div_a_D[48] = FP16ALT_SO ? (* src = "FPNewBlackbox.preprocessed.v:2055.81-2055.145" *) Sel_b_for_thi_S : \Iteration_cell_sum_AMASK_D[1] [47];
  assign Thi_iteration_cell_div_b_D = \Iteration_cell_sum_AMASK_D[1] [57] ? (* src = "FPNewBlackbox.preprocessed.v:2056.41-2056.113" *) { 1'h0, Denominator_DI, 4'h0 } : { Denominator_se_DB[53:45], Denominator_se_format_DB[48], Denominator_se_DB[43:42], Denominator_se_format_DB[45], Denominator_se_DB[40:29], Denominator_se_format_DB[32], Denominator_se_DB[27:0], FP64_SO, 3'h0 };
  assign \Iteration_cell_a_BMASK_D[2]  = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2057.42-2057.97" *) { \Iteration_cell_sum_AMASK_D[1] [57], \Iteration_cell_sum_AMASK_D[1] [54:0], \Sqrt_DO[1]  } : { \Iteration_cell_sum_AMASK_D[1] [56:48], Thi_iteration_cell_div_a_D[48], \Iteration_cell_sum_AMASK_D[1] [46:45], Thi_iteration_cell_div_a_D[45], \Iteration_cell_sum_AMASK_D[1] [43:32], Thi_iteration_cell_div_a_D[32], \Iteration_cell_sum_AMASK_D[1] [30:3], Thi_iteration_cell_div_a_D[3], 3'h0 };
  assign \Iteration_cell_b_BMASK_D[2]  = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2058.42-2058.97" *) Sqrt_Q2 : Thi_iteration_cell_div_b_D;
  assign _190_ = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2117.30-2117.86" *) { \Iteration_cell_sum_AMASK_D[2] [57], \Iteration_cell_sum_AMASK_D[2] [54:0], \Sqrt_DO[2]  } : \Iteration_cell_sum_AMASK_D[2] ;
  assign _191_ = Sqrt_enable_SO ? (* src = "FPNewBlackbox.preprocessed.v:2146.21-2146.183" *) { Quotient_DP[53:0], Sqrt_quotinent_S[3:1] } : { Quotient_DP[53:0], \Iteration_cell_carry_D[0] , \Iteration_cell_carry_D[1] , \Iteration_cell_carry_D[2]  };
  assign { _192_[13], Exp_add_a_D } = Sqrt_start_dly_S ? (* src = "FPNewBlackbox.preprocessed.v:2447.25-2447.313" *) { Exp_num_DI[11], Exp_num_DI[11], Exp_num_DI[11], Exp_num_DI[11:1] } : { Exp_num_DI[11], Exp_num_DI[11], Exp_num_DI };
  assign { _193_[13], Exp_add_b_D } = Sqrt_start_dly_S ? (* src = "FPNewBlackbox.preprocessed.v:2449.25-2449.204" *) { 13'h0000, Exp_num_DI[0] } : { _031_, _031_, _030_ };
  assign { _194_[31:13], Exp_add_c_D } = Div_start_dly_S ? (* src = "FPNewBlackbox.preprocessed.v:2450.25-2450.72" *) C_BIAS_AONE : C_HALF_BIAS;
  assign Mant_D_sqrt_Norm = Exp_num_DI[0] ? (* src = "FPNewBlackbox.preprocessed.v:510.29-510.88" *) { 1'h0, Numerator_DI } : { Numerator_DI, 1'h0 };
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:2090.41-2100.5" *)
  \$paramod\iteration_div_sqrt_mvp\WIDTH=s32'00000000000000000000000000111010  \genblk4[0].iteration_div_sqrt  (
    .A_DI(\Iteration_cell_a_BMASK_D[0] ),
    .B_DI(\Iteration_cell_b_BMASK_D[0] ),
    .Carry_out_DO(\Iteration_cell_carry_D[0] ),
    .D_DI(\Sqrt_DI[0] ),
    .D_DO(\Sqrt_DO[0] ),
    .Div_enable_SI(Div_enable_SO),
    .Div_start_dly_SI(Div_start_dly_S),
    .Sqrt_enable_SI(Sqrt_enable_SO),
    .Sum_DO(\Iteration_cell_sum_AMASK_D[0] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:2090.41-2100.5" *)
  \$paramod\iteration_div_sqrt_mvp\WIDTH=s32'00000000000000000000000000111010  \genblk4[1].iteration_div_sqrt  (
    .A_DI(\Iteration_cell_a_BMASK_D[1] ),
    .B_DI(\Iteration_cell_b_BMASK_D[1] ),
    .Carry_out_DO(\Iteration_cell_carry_D[1] ),
    .D_DI(\Sqrt_DI[1] ),
    .D_DO(\Sqrt_DO[1] ),
    .Div_enable_SI(Div_enable_SO),
    .Div_start_dly_SI(Div_start_dly_S),
    .Sqrt_enable_SI(Sqrt_enable_SO),
    .Sum_DO(\Iteration_cell_sum_AMASK_D[1] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:2090.41-2100.5" *)
  \$paramod\iteration_div_sqrt_mvp\WIDTH=s32'00000000000000000000000000111010  \genblk4[2].iteration_div_sqrt  (
    .A_DI(\Iteration_cell_a_BMASK_D[2] ),
    .B_DI(\Iteration_cell_b_BMASK_D[2] ),
    .Carry_out_DO(\Iteration_cell_carry_D[2] ),
    .D_DI(\Sqrt_DI[2] ),
    .D_DO(\Sqrt_DO[2] ),
    .Div_enable_SI(Div_enable_SO),
    .Div_start_dly_SI(Div_start_dly_S),
    .Sqrt_enable_SI(Sqrt_enable_SO),
    .Sum_DO(\Iteration_cell_sum_AMASK_D[2] )
  );
  assign _065_[2:1] = _063_;
  assign _069_[2:1] = _067_;
  assign _124_[1:0] = { _097_[0], _097_[1] };
  assign _189_[0] = Sel_b_for_first_S;
  assign _192_[12:0] = Exp_add_a_D;
  assign _193_[12:0] = Exp_add_b_D;
  assign _194_[12:0] = Exp_add_c_D;
  assign Denominator_se_D = { 1'h0, Denominator_DI };
  assign { Denominator_se_format_DB[57:49], Denominator_se_format_DB[47:46], Denominator_se_format_DB[44:33], Denominator_se_format_DB[31:0] } = { Denominator_se_DB[53:45], Denominator_se_DB[43:42], Denominator_se_DB[40:29], Denominator_se_DB[27:0], FP64_SO, 3'h0 };
  assign \Div_enable_SI[0]  = Div_enable_SO;
  assign \Div_enable_SI[1]  = Div_enable_SO;
  assign \Div_enable_SI[2]  = Div_enable_SO;
  assign \Div_start_dly_SI[0]  = Div_start_dly_S;
  assign \Div_start_dly_SI[1]  = Div_start_dly_S;
  assign \Div_start_dly_SI[2]  = Div_start_dly_S;
  assign Div_start_dly_SO = Div_start_dly_S;
  assign Exp_result_prenorm_DO = Exp_result_prenorm_DP;
  assign \Iteration_cell_a_D[0]  = \Iteration_cell_a_BMASK_D[0] ;
  assign \Iteration_cell_a_D[1]  = \Iteration_cell_a_BMASK_D[1] ;
  assign \Iteration_cell_a_D[2]  = \Iteration_cell_a_BMASK_D[2] ;
  assign \Iteration_cell_b_D[0]  = \Iteration_cell_b_BMASK_D[0] ;
  assign \Iteration_cell_b_D[1]  = \Iteration_cell_b_BMASK_D[1] ;
  assign \Iteration_cell_b_D[2]  = \Iteration_cell_b_BMASK_D[2] ;
  assign \Iteration_cell_sum_D[0]  = \Iteration_cell_sum_AMASK_D[0] ;
  assign \Iteration_cell_sum_D[1]  = \Iteration_cell_sum_AMASK_D[1] ;
  assign \Iteration_cell_sum_D[2]  = \Iteration_cell_sum_AMASK_D[2] ;
  assign Mask_bits_ctl_S = 58'h3ffffffffffffff;
  assign Numerator_se_D = { 1'h0, Numerator_DI };
  assign Qcnt_four_0 = { 1'h0, Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_1 = { Quotient_DP[3:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_10 = { Quotient_DP[39:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_11 = { Quotient_DP[43:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_12 = { Quotient_DP[47:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_13 = { Quotient_DP[51:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_14 = { Quotient_DP[55:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_2 = { Quotient_DP[7:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_3 = { Quotient_DP[11:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_4 = { Quotient_DP[15:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_5 = { Quotient_DP[19:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_6 = { Quotient_DP[23:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_7 = { Quotient_DP[27:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_8 = { Quotient_DP[31:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_four_9 = { Quotient_DP[35:0], Sqrt_quotinent_S[3:1] };
  assign Qcnt_one_0 = 1'h0;
  assign Qcnt_one_1 = Quotient_DP[0];
  assign Qcnt_one_10 = Quotient_DP[9:0];
  assign Qcnt_one_11 = Quotient_DP[10:0];
  assign Qcnt_one_12 = Quotient_DP[11:0];
  assign Qcnt_one_13 = Quotient_DP[12:0];
  assign Qcnt_one_14 = Quotient_DP[13:0];
  assign Qcnt_one_15 = Quotient_DP[14:0];
  assign Qcnt_one_16 = Quotient_DP[15:0];
  assign Qcnt_one_17 = Quotient_DP[16:0];
  assign Qcnt_one_18 = Quotient_DP[17:0];
  assign Qcnt_one_19 = Quotient_DP[18:0];
  assign Qcnt_one_2 = Quotient_DP[1:0];
  assign Qcnt_one_20 = Quotient_DP[19:0];
  assign Qcnt_one_21 = Quotient_DP[20:0];
  assign Qcnt_one_22 = Quotient_DP[21:0];
  assign Qcnt_one_23 = Quotient_DP[22:0];
  assign Qcnt_one_24 = Quotient_DP[23:0];
  assign Qcnt_one_25 = Quotient_DP[24:0];
  assign Qcnt_one_26 = Quotient_DP[25:0];
  assign Qcnt_one_27 = Quotient_DP[26:0];
  assign Qcnt_one_28 = Quotient_DP[27:0];
  assign Qcnt_one_29 = Quotient_DP[28:0];
  assign Qcnt_one_3 = Quotient_DP[2:0];
  assign Qcnt_one_30 = Quotient_DP[29:0];
  assign Qcnt_one_31 = Quotient_DP[30:0];
  assign Qcnt_one_32 = Quotient_DP[31:0];
  assign Qcnt_one_33 = Quotient_DP[32:0];
  assign Qcnt_one_34 = Quotient_DP[33:0];
  assign Qcnt_one_35 = Quotient_DP[34:0];
  assign Qcnt_one_36 = Quotient_DP[35:0];
  assign Qcnt_one_37 = Quotient_DP[36:0];
  assign Qcnt_one_38 = Quotient_DP[37:0];
  assign Qcnt_one_39 = Quotient_DP[38:0];
  assign Qcnt_one_4 = Quotient_DP[3:0];
  assign Qcnt_one_40 = Quotient_DP[39:0];
  assign Qcnt_one_41 = Quotient_DP[40:0];
  assign Qcnt_one_42 = Quotient_DP[41:0];
  assign Qcnt_one_43 = Quotient_DP[42:0];
  assign Qcnt_one_44 = Quotient_DP[43:0];
  assign Qcnt_one_45 = Quotient_DP[44:0];
  assign Qcnt_one_46 = Quotient_DP[45:0];
  assign Qcnt_one_47 = Quotient_DP[46:0];
  assign Qcnt_one_48 = Quotient_DP[47:0];
  assign Qcnt_one_49 = Quotient_DP[48:0];
  assign Qcnt_one_5 = Quotient_DP[4:0];
  assign Qcnt_one_50 = Quotient_DP[49:0];
  assign Qcnt_one_51 = Quotient_DP[50:0];
  assign Qcnt_one_52 = Quotient_DP[51:0];
  assign Qcnt_one_53 = Quotient_DP[52:0];
  assign Qcnt_one_54 = Quotient_DP[53:0];
  assign Qcnt_one_55 = Quotient_DP[54:0];
  assign Qcnt_one_56 = Quotient_DP[55:0];
  assign Qcnt_one_57 = Quotient_DP;
  assign Qcnt_one_6 = Quotient_DP[5:0];
  assign Qcnt_one_7 = Quotient_DP[6:0];
  assign Qcnt_one_8 = Quotient_DP[7:0];
  assign Qcnt_one_9 = Quotient_DP[8:0];
  assign Qcnt_three_0 = { 1'h0, Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_1 = { Quotient_DP[2:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_10 = { Quotient_DP[29:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_11 = { Quotient_DP[32:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_12 = { Quotient_DP[35:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_13 = { Quotient_DP[38:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_14 = { Quotient_DP[41:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_15 = { Quotient_DP[44:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_16 = { Quotient_DP[47:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_17 = { Quotient_DP[50:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_18 = { Quotient_DP[53:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_19 = { Quotient_DP, Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_2 = { Quotient_DP[5:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_3 = { Quotient_DP[8:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_4 = { Quotient_DP[11:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_5 = { Quotient_DP[14:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_6 = { Quotient_DP[17:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_7 = { Quotient_DP[20:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_8 = { Quotient_DP[23:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_three_9 = { Quotient_DP[26:0], Sqrt_quotinent_S[3:2] };
  assign Qcnt_two_0 = { 1'h0, Sqrt_quotinent_S[3] };
  assign Qcnt_two_1 = { Quotient_DP[1:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_10 = { Quotient_DP[19:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_11 = { Quotient_DP[21:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_12 = { Quotient_DP[23:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_13 = { Quotient_DP[25:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_14 = { Quotient_DP[27:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_15 = { Quotient_DP[29:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_16 = { Quotient_DP[31:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_17 = { Quotient_DP[33:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_18 = { Quotient_DP[35:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_19 = { Quotient_DP[37:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_2 = { Quotient_DP[3:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_20 = { Quotient_DP[39:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_21 = { Quotient_DP[41:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_22 = { Quotient_DP[43:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_23 = { Quotient_DP[45:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_24 = { Quotient_DP[47:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_25 = { Quotient_DP[49:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_26 = { Quotient_DP[51:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_27 = { Quotient_DP[53:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_28 = { Quotient_DP[55:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_3 = { Quotient_DP[5:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_4 = { Quotient_DP[7:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_5 = { Quotient_DP[9:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_6 = { Quotient_DP[11:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_7 = { Quotient_DP[13:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_8 = { Quotient_DP[15:0], Sqrt_quotinent_S[3] };
  assign Qcnt_two_9 = { Quotient_DP[17:0], Sqrt_quotinent_S[3] };
  assign { Sec_iteration_cell_div_a_D[57:49], Sec_iteration_cell_div_a_D[47:46], Sec_iteration_cell_div_a_D[44:33], Sec_iteration_cell_div_a_D[31:4], Sec_iteration_cell_div_a_D[2:0] } = { \Iteration_cell_sum_AMASK_D[0] [56:48], \Iteration_cell_sum_AMASK_D[0] [46:45], \Iteration_cell_sum_AMASK_D[0] [43:32], \Iteration_cell_sum_AMASK_D[0] [30:3], 3'h0 };
  assign Sqrt_R1 = { \Iteration_cell_sum_AMASK_D[0] [57], \Iteration_cell_sum_AMASK_D[0] [54:0], \Sqrt_DO[0]  };
  assign Sqrt_R2 = { \Iteration_cell_sum_AMASK_D[1] [57], \Iteration_cell_sum_AMASK_D[1] [54:0], \Sqrt_DO[1]  };
  assign Sqrt_R3 = { \Iteration_cell_sum_AMASK_D[2] [57], \Iteration_cell_sum_AMASK_D[2] [54:0], \Sqrt_DO[2]  };
  assign Sqrt_R4[57:2] = { \Iteration_cell_sum_AMASK_D[3] [57], \Iteration_cell_sum_AMASK_D[3] [54:0] };
  assign \Sqrt_enable_SI[0]  = Sqrt_enable_SO;
  assign \Sqrt_enable_SI[1]  = Sqrt_enable_SO;
  assign \Sqrt_enable_SI[2]  = Sqrt_enable_SO;
  assign Sqrt_start_dly_SO = Sqrt_start_dly_S;
  assign State_Four_iteration_unit_S = { 2'h0, Precision_ctl_S[5:2] };
  assign State_Two_iteration_unit_S = { 1'h0, Precision_ctl_S[5:1] };
  assign { Thi_iteration_cell_div_a_D[57:49], Thi_iteration_cell_div_a_D[47:46], Thi_iteration_cell_div_a_D[44:33], Thi_iteration_cell_div_a_D[31:4], Thi_iteration_cell_div_a_D[2:0] } = { \Iteration_cell_sum_AMASK_D[1] [56:48], \Iteration_cell_sum_AMASK_D[1] [46:45], \Iteration_cell_sum_AMASK_D[1] [43:32], \Iteration_cell_sum_AMASK_D[1] [30:3], 3'h0 };
endmodule

(* dynports =  1  *)
(* hdlname = "\\div_sqrt_top_mvp" *)
(* src = "FPNewBlackbox.preprocessed.v:2459.1-2596.10" *)
module div_sqrt_top_mvp(Clk_CI, Rst_RBI, Div_start_SI, Sqrt_start_SI, Operand_a_DI, Operand_b_DI, RM_SI, Precision_ctl_SI, Format_sel_SI, Kill_SI, Result_DO, Fflags_SO, Ready_SO, Done_SO);
  (* src = "FPNewBlackbox.preprocessed.v:2475.13-2475.19" *)
  input Clk_CI;
  wire Clk_CI;
  (* src = "FPNewBlackbox.preprocessed.v:2504.7-2504.19" *)
  wire Div_enable_S;
  (* src = "FPNewBlackbox.preprocessed.v:2477.13-2477.25" *)
  input Div_start_SI;
  wire Div_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2492.14-2492.21" *)
  output Done_SO;
  wire Done_SO;
  (* src = "FPNewBlackbox.preprocessed.v:2494.40-2494.47" *)
  wire [11:0] Exp_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:2495.40-2495.47" *)
  wire [11:0] Exp_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:2499.14-2499.21" *)
  wire [12:0] Exp_z_D;
  (* src = "FPNewBlackbox.preprocessed.v:2519.7-2519.16" *)
  wire FP16ALT_S;
  (* src = "FPNewBlackbox.preprocessed.v:2518.7-2518.13" *)
  wire FP16_S;
  (* src = "FPNewBlackbox.preprocessed.v:2516.7-2516.13" *)
  wire FP32_S;
  (* src = "FPNewBlackbox.preprocessed.v:2517.7-2517.13" *)
  wire FP64_S;
  (* src = "FPNewBlackbox.preprocessed.v:2490.20-2490.29" *)
  output [4:0] Fflags_SO;
  wire [4:0] Fflags_SO;
  (* src = "FPNewBlackbox.preprocessed.v:2487.19-2487.32" *)
  input [1:0] Format_sel_SI;
  wire [1:0] Format_sel_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2515.7-2515.23" *)
  wire Full_precision_S;
  (* src = "FPNewBlackbox.preprocessed.v:2506.7-2506.14" *)
  wire Inf_a_S;
  (* src = "FPNewBlackbox.preprocessed.v:2507.7-2507.14" *)
  wire Inf_b_S;
  (* src = "FPNewBlackbox.preprocessed.v:2488.13-2488.20" *)
  input Kill_SI;
  wire Kill_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2497.41-2497.49" *)
  wire [52:0] Mant_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:2498.41-2498.49" *)
  wire [52:0] Mant_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:2500.14-2500.22" *)
  wire [56:0] Mant_z_D;
  (* src = "FPNewBlackbox.preprocessed.v:2510.7-2510.14" *)
  wire NaN_a_S;
  (* src = "FPNewBlackbox.preprocessed.v:2511.7-2511.14" *)
  wire NaN_b_S;
  (* src = "FPNewBlackbox.preprocessed.v:2480.20-2480.32" *)
  input [63:0] Operand_a_DI;
  wire [63:0] Operand_a_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2481.20-2481.32" *)
  input [63:0] Operand_b_DI;
  wire [63:0] Operand_b_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2485.19-2485.35" *)
  input [5:0] Precision_ctl_SI;
  wire [5:0] Precision_ctl_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2483.19-2483.24" *)
  input [2:0] RM_SI;
  wire [2:0] RM_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2503.13-2503.21" *)
  wire [2:0] RM_dly_S;
  (* src = "FPNewBlackbox.preprocessed.v:2491.14-2491.22" *)
  output Ready_SO;
  wire Ready_SO;
  (* src = "FPNewBlackbox.preprocessed.v:2489.21-2489.30" *)
  output [63:0] Result_DO;
  wire [63:0] Result_DO;
  (* src = "FPNewBlackbox.preprocessed.v:2476.13-2476.20" *)
  input Rst_RBI;
  wire Rst_RBI;
  (* src = "FPNewBlackbox.preprocessed.v:2512.7-2512.13" *)
  wire SNaN_S;
  (* src = "FPNewBlackbox.preprocessed.v:2501.7-2501.15" *)
  wire Sign_z_D;
  (* src = "FPNewBlackbox.preprocessed.v:2513.7-2513.22" *)
  wire Special_case_SB;
  (* src = "FPNewBlackbox.preprocessed.v:2514.7-2514.26" *)
  wire Special_case_dly_SB;
  (* src = "FPNewBlackbox.preprocessed.v:2505.7-2505.20" *)
  wire Sqrt_enable_S;
  (* src = "FPNewBlackbox.preprocessed.v:2478.13-2478.26" *)
  input Sqrt_start_SI;
  wire Sqrt_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2502.7-2502.14" *)
  wire Start_S;
  (* src = "FPNewBlackbox.preprocessed.v:2508.7-2508.15" *)
  wire Zero_a_S;
  (* src = "FPNewBlackbox.preprocessed.v:2509.7-2509.15" *)
  wire Zero_b_S;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:2574.20-2595.3" *)
  norm_div_sqrt_mvp fpu_norm_U0 (
    .Div_enable_SI(Div_enable_S),
    .Exp_in_DI(Exp_z_D),
    .FP16ALT_SI(FP16ALT_S),
    .FP16_SI(FP16_S),
    .FP32_SI(FP32_S),
    .FP64_SI(FP64_S),
    .Fflags_SO(Fflags_SO),
    .Full_precision_SI(Full_precision_S),
    .Inf_a_SI(Inf_a_S),
    .Inf_b_SI(Inf_b_S),
    .Mant_in_DI(Mant_z_D),
    .NaN_a_SI(NaN_a_S),
    .NaN_b_SI(NaN_b_S),
    .RM_SI(RM_dly_S),
    .Result_DO(Result_DO),
    .SNaN_SI(SNaN_S),
    .Sign_in_DI(Sign_z_D),
    .Sqrt_enable_SI(Sqrt_enable_S),
    .Zero_a_SI(Zero_a_S),
    .Zero_b_SI(Zero_b_S)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:2547.16-2573.3" *)
  nrbd_nrsc_mvp nrbd_nrsc_U0 (
    .Clk_CI(Clk_CI),
    .Div_enable_SO(Div_enable_S),
    .Div_start_SI(Div_start_SI),
    .Done_SO(Done_SO),
    .Exp_a_DI(Exp_a_D),
    .Exp_b_DI(Exp_b_D),
    .Exp_z_DO(Exp_z_D),
    .FP16ALT_SO(FP16ALT_S),
    .FP16_SO(FP16_S),
    .FP32_SO(FP32_S),
    .FP64_SO(FP64_S),
    .Format_sel_SI(Format_sel_SI),
    .Full_precision_SO(Full_precision_S),
    .Kill_SI(Kill_SI),
    .Mant_a_DI(Mant_a_D),
    .Mant_b_DI(Mant_b_D),
    .Mant_z_DO(Mant_z_D),
    .Precision_ctl_SI(Precision_ctl_SI),
    .Ready_SO(Ready_SO),
    .Rst_RBI(Rst_RBI),
    .Special_case_SBI(Special_case_SB),
    .Special_case_dly_SBI(Special_case_dly_SB),
    .Sqrt_enable_SO(Sqrt_enable_S),
    .Sqrt_start_SI(Sqrt_start_SI),
    .Start_SI(Start_S)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:2520.17-2546.3" *)
  preprocess_mvp preprocess_U0 (
    .Clk_CI(Clk_CI),
    .Div_start_SI(Div_start_SI),
    .Exp_a_DO_norm(Exp_a_D),
    .Exp_b_DO_norm(Exp_b_D),
    .Format_sel_SI(Format_sel_SI),
    .Inf_a_SO(Inf_a_S),
    .Inf_b_SO(Inf_b_S),
    .Mant_a_DO_norm(Mant_a_D),
    .Mant_b_DO_norm(Mant_b_D),
    .NaN_a_SO(NaN_a_S),
    .NaN_b_SO(NaN_b_S),
    .Operand_a_DI(Operand_a_DI),
    .Operand_b_DI(Operand_b_DI),
    .RM_SI(RM_SI),
    .RM_dly_SO(RM_dly_S),
    .Ready_SI(Ready_SO),
    .Rst_RBI(Rst_RBI),
    .SNaN_SO(SNaN_S),
    .Sign_z_DO(Sign_z_D),
    .Special_case_SBO(Special_case_SB),
    .Special_case_dly_SBO(Special_case_dly_SB),
    .Sqrt_start_SI(Sqrt_start_SI),
    .Start_SO(Start_S),
    .Zero_a_SO(Zero_a_S),
    .Zero_b_SO(Zero_b_S)
  );
endmodule

(* dynports =  1  *)
(* hdlname = "\\norm_div_sqrt_mvp" *)
(* src = "FPNewBlackbox.preprocessed.v:2628.1-2980.10" *)
module norm_div_sqrt_mvp(Mant_in_DI, Exp_in_DI, Sign_in_DI, Div_enable_SI, Sqrt_enable_SI, Inf_a_SI, Inf_b_SI, Zero_a_SI, Zero_b_SI, NaN_a_SI, NaN_b_SI, SNaN_SI, RM_SI, Full_precision_SI, FP32_SI, FP64_SI, FP16_SI, FP16ALT_SI, Result_DO, Fflags_SO);
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _000_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _001_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _002_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _003_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _004_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _005_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _006_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _007_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _008_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _009_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _010_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _011_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _012_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _013_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _014_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _015_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _016_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _017_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _018_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _019_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _020_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _021_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _022_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _023_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _024_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _025_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _026_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _027_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _028_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _029_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _030_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _031_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _032_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _033_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _034_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _035_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _036_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _037_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _038_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _039_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _040_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _041_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _042_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _043_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _044_;
  (* src = "FPNewBlackbox.preprocessed.v:2920.2-2940.6" *)
  wire [1:0] _045_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _046_;
  (* src = "FPNewBlackbox.preprocessed.v:2920.2-2940.6" *)
  wire _047_;
  (* src = "FPNewBlackbox.preprocessed.v:2920.2-2940.6" *)
  wire [52:0] _048_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _049_;
  (* src = "FPNewBlackbox.preprocessed.v:2969.2-2977.110" *)
  wire [63:0] _050_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _051_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _052_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _053_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _054_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _055_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _056_;
  (* src = "FPNewBlackbox.preprocessed.v:2920.2-2940.6" *)
  wire [1:0] _057_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _058_;
  (* src = "FPNewBlackbox.preprocessed.v:2920.2-2940.6" *)
  wire _059_;
  (* src = "FPNewBlackbox.preprocessed.v:2920.2-2940.6" *)
  wire [52:0] _060_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _061_;
  (* src = "FPNewBlackbox.preprocessed.v:2969.2-2977.110" *)
  wire [63:0] _062_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _063_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _064_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _065_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _066_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _067_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _068_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _069_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _070_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _071_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _072_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _073_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _074_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _075_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _076_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _077_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _078_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _079_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _080_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _081_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _082_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _083_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _084_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _085_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _086_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _087_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _088_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _089_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _090_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [10:0] _091_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [56:0] _092_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire [52:0] _093_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _094_;
  (* src = "FPNewBlackbox.preprocessed.v:2707.2-2915.6" *)
  wire _095_;
  (* src = "FPNewBlackbox.preprocessed.v:2696.20-2696.34" *)
  (* unused_bits = "13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _096_;
  (* src = "FPNewBlackbox.preprocessed.v:2951.53-2951.81" *)
  wire _097_;
  (* src = "FPNewBlackbox.preprocessed.v:2952.54-2952.81" *)
  wire _098_;
  (* src = "FPNewBlackbox.preprocessed.v:2812.12-2812.69" *)
  wire _099_;
  (* src = "FPNewBlackbox.preprocessed.v:2834.13-2834.90" *)
  wire _100_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.16-2864.45" *)
  wire _101_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.63-2864.94" *)
  wire _102_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.113-2864.142" *)
  wire _103_;
  (* src = "FPNewBlackbox.preprocessed.v:2729.8-2729.33" *)
  wire _104_;
  (* src = "FPNewBlackbox.preprocessed.v:2739.13-2739.41" *)
  wire _105_;
  (* src = "FPNewBlackbox.preprocessed.v:2771.8-2771.34" *)
  wire _106_;
  (* src = "FPNewBlackbox.preprocessed.v:2834.12-2834.110" *)
  wire _107_;
  (* src = "FPNewBlackbox.preprocessed.v:2854.15-2854.65" *)
  wire _108_;
  (* src = "FPNewBlackbox.preprocessed.v:2854.70-2854.120" *)
  wire _109_;
  (* src = "FPNewBlackbox.preprocessed.v:2854.126-2854.176" *)
  wire _110_;
  (* src = "FPNewBlackbox.preprocessed.v:2854.182-2854.238" *)
  wire _111_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.15-2864.57" *)
  wire _112_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.62-2864.106" *)
  wire _113_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.112-2864.154" *)
  wire _114_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.160-2864.205" *)
  wire _115_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.117-2949.144" *)
  wire _116_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.149-2949.175" *)
  wire _117_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.181-2949.208" *)
  wire _118_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.214-2949.244" *)
  wire _119_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.53-2949.247" *)
  wire _120_;
  (* src = "FPNewBlackbox.preprocessed.v:2813.8-2813.34" *)
  wire _121_;
  (* src = "FPNewBlackbox.preprocessed.v:2696.20-2696.30" *)
  wire [31:0] _122_;
  (* src = "FPNewBlackbox.preprocessed.v:2834.95-2834.110" *)
  wire _123_;
  (* src = "FPNewBlackbox.preprocessed.v:2951.70-2951.81" *)
  wire _124_;
  (* src = "FPNewBlackbox.preprocessed.v:2978.22-2978.40" *)
  wire _125_;
  (* src = "FPNewBlackbox.preprocessed.v:2854.14-2854.121" *)
  wire _126_;
  (* src = "FPNewBlackbox.preprocessed.v:2854.13-2854.177" *)
  wire _127_;
  (* src = "FPNewBlackbox.preprocessed.v:2854.12-2854.239" *)
  wire _128_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.14-2864.107" *)
  wire _129_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.13-2864.155" *)
  wire _130_;
  (* src = "FPNewBlackbox.preprocessed.v:2864.12-2864.206" *)
  wire _131_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.74-2949.109" *)
  wire _132_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.116-2949.176" *)
  wire _133_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.115-2949.209" *)
  wire _134_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.114-2949.245" *)
  wire _135_;
  (* src = "FPNewBlackbox.preprocessed.v:2949.73-2949.246" *)
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  (* src = "FPNewBlackbox.preprocessed.v:2924.24-2924.46" *)
  wire _140_;
  (* src = "FPNewBlackbox.preprocessed.v:2929.24-2929.46" *)
  wire _141_;
  (* src = "FPNewBlackbox.preprocessed.v:2934.24-2934.47" *)
  wire _142_;
  (* src = "FPNewBlackbox.preprocessed.v:2939.24-2939.47" *)
  wire _143_;
  (* src = "FPNewBlackbox.preprocessed.v:2941.26-2941.39" *)
  wire _144_;
  (* src = "FPNewBlackbox.preprocessed.v:2701.24-2701.37" *)
  (* unused_bits = "11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _145_;
  (* src = "FPNewBlackbox.preprocessed.v:2967.37-2967.91" *)
  (* unused_bits = "52" *)
  wire [52:0] _146_;
  (* src = "FPNewBlackbox.preprocessed.v:2677.6-2677.16" *)
  wire Div_Zero_S;
  (* src = "FPNewBlackbox.preprocessed.v:2655.13-2655.26" *)
  input Div_enable_SI;
  wire Div_enable_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2675.6-2675.14" *)
  wire Exp_OF_S;
  (* src = "FPNewBlackbox.preprocessed.v:2676.6-2676.14" *)
  wire Exp_UF_S;
  (* src = "FPNewBlackbox.preprocessed.v:2966.14-2966.37" *)
  wire [10:0] Exp_before_format_ctl_D;
  (* src = "FPNewBlackbox.preprocessed.v:2653.27-2653.36" *)
  input [12:0] Exp_in_DI;
  wire [12:0] Exp_in_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2680.13-2680.27" *)
  wire [10:0] Exp_res_norm_D;
  (* src = "FPNewBlackbox.preprocessed.v:2962.14-2962.29" *)
  wire [10:0] Exp_res_round_D;
  (* src = "FPNewBlackbox.preprocessed.v:2700.14-2700.26" *)
  (* unused_bits = "11 12" *)
  wire [12:0] Exp_subOne_D;
  (* src = "FPNewBlackbox.preprocessed.v:2670.13-2670.23" *)
  input FP16ALT_SI;
  wire FP16ALT_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2669.13-2669.20" *)
  input FP16_SI;
  wire FP16_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2667.13-2667.20" *)
  input FP32_SI;
  wire FP32_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2668.13-2668.20" *)
  input FP64_SI;
  wire FP64_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2672.20-2672.29" *)
  output [4:0] Fflags_SO;
  wire [4:0] Fflags_SO;
  (* src = "FPNewBlackbox.preprocessed.v:2666.13-2666.30" *)
  input Full_precision_SI;
  wire Full_precision_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2678.7-2678.17" *)
  wire In_Exact_S;
  (* src = "FPNewBlackbox.preprocessed.v:2657.13-2657.21" *)
  input Inf_a_SI;
  wire Inf_a_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2658.13-2658.21" *)
  input Inf_b_SI;
  wire Inf_b_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2697.41-2697.50" *)
  wire [52:0] Mant_RS_D;
  (* src = "FPNewBlackbox.preprocessed.v:2965.14-2965.38" *)
  wire [51:0] Mant_before_format_ctl_D;
  (* src = "FPNewBlackbox.preprocessed.v:2704.13-2704.28" *)
  wire [56:0] Mant_forround_D;
  (* src = "FPNewBlackbox.preprocessed.v:2698.14-2698.30" *)
  wire [56:0] Mant_forsticky_D;
  (* src = "FPNewBlackbox.preprocessed.v:2651.20-2651.30" *)
  input [56:0] Mant_in_DI;
  wire [56:0] Mant_in_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2702.12-2702.24" *)
  wire [1:0] Mant_lower_D;
  (* src = "FPNewBlackbox.preprocessed.v:2956.7-2956.20" *)
  wire Mant_renorm_S;
  (* src = "FPNewBlackbox.preprocessed.v:2679.40-2679.55" *)
  wire [52:0] Mant_res_norm_D;
  (* src = "FPNewBlackbox.preprocessed.v:2961.14-2961.30" *)
  wire [51:0] Mant_res_round_D;
  (* src = "FPNewBlackbox.preprocessed.v:2918.6-2918.20" *)
  wire Mant_roundUp_S;
  (* src = "FPNewBlackbox.preprocessed.v:2957.41-2957.62" *)
  wire [52:0] Mant_roundUp_Vector_S;
  (* src = "FPNewBlackbox.preprocessed.v:2919.7-2919.21" *)
  wire Mant_rounded_S;
  (* src = "FPNewBlackbox.preprocessed.v:2703.6-2703.23" *)
  wire Mant_sticky_bit_D;
  (* src = "FPNewBlackbox.preprocessed.v:2917.14-2917.33" *)
  wire [53:0] Mant_upperRounded_D;
  (* src = "FPNewBlackbox.preprocessed.v:2916.40-2916.52" *)
  wire [52:0] Mant_upper_D;
  (* src = "FPNewBlackbox.preprocessed.v:2674.6-2674.13" *)
  wire NV_OP_S;
  (* src = "FPNewBlackbox.preprocessed.v:2661.13-2661.21" *)
  input NaN_a_SI;
  wire NaN_a_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2662.13-2662.21" *)
  input NaN_b_SI;
  wire NaN_b_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2695.14-2695.22" *)
  wire [12:0] Num_RS_D;
  (* src = "FPNewBlackbox.preprocessed.v:2665.19-2665.24" *)
  input [2:0] RM_SI;
  wire [2:0] RM_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2671.20-2671.29" *)
  output [63:0] Result_DO;
  wire [63:0] Result_DO;
  (* src = "FPNewBlackbox.preprocessed.v:2663.13-2663.20" *)
  input SNaN_SI;
  wire SNaN_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2654.13-2654.23" *)
  input Sign_in_DI;
  wire Sign_in_DI;
  (* src = "FPNewBlackbox.preprocessed.v:2673.6-2673.16" *)
  wire Sign_res_D;
  (* src = "FPNewBlackbox.preprocessed.v:2656.13-2656.27" *)
  input Sqrt_enable_SI;
  wire Sqrt_enable_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2659.13-2659.22" *)
  input Zero_a_SI;
  wire Zero_a_SI;
  (* src = "FPNewBlackbox.preprocessed.v:2660.13-2660.22" *)
  input Zero_b_SI;
  wire Zero_b_SI;
  assign { _096_[31:13], Num_RS_D } = $signed(_122_) + (* src = "FPNewBlackbox.preprocessed.v:2696.20-2696.34" *) $signed(32'd2);
  assign Mant_upperRounded_D = Mant_upper_D + (* src = "FPNewBlackbox.preprocessed.v:2959.31-2959.67" *) { 7'h00, Mant_roundUp_Vector_S[45], 2'h0, Mant_roundUp_Vector_S[42], 12'h000, Mant_roundUp_Vector_S[29], 28'h0000000, Mant_roundUp_Vector_S[0] };
  assign Exp_res_round_D = Exp_res_norm_D + (* src = "FPNewBlackbox.preprocessed.v:2964.27-2964.57" *) Mant_upperRounded_D[53];
  assign _097_ = Mant_rounded_S & (* src = "FPNewBlackbox.preprocessed.v:2951.53-2951.81" *) _124_;
  assign _098_ = Mant_rounded_S & (* src = "FPNewBlackbox.preprocessed.v:2952.54-2952.81" *) Sign_in_DI;
  assign _099_ = ! (* src = "FPNewBlackbox.preprocessed.v:2812.12-2812.69" *) Exp_in_DI[11:0];
  assign _100_ = Exp_in_DI[11:0] == (* src = "FPNewBlackbox.preprocessed.v:2834.13-2834.90" *) 12'h001;
  assign _102_ = Exp_in_DI[10:0] == (* src = "FPNewBlackbox.preprocessed.v:2864.63-2864.94" *) 11'h7ff;
  assign _103_ = Exp_in_DI[4:0] == (* src = "FPNewBlackbox.preprocessed.v:2864.113-2864.142" *) 5'h1f;
  assign _101_ = Exp_in_DI[7:0] == (* src = "FPNewBlackbox.preprocessed.v:2864.161-2864.190" *) 8'hff;
  assign _104_ = Div_enable_SI && (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37" *) Inf_b_SI;
  assign _106_ = Div_enable_SI && (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38" *) Zero_b_SI;
  assign _105_ = Sign_in_DI && (* src = "FPNewBlackbox.preprocessed.v:2802.12-2802.40" *) Sqrt_enable_SI;
  assign _107_ = _100_ && (* src = "FPNewBlackbox.preprocessed.v:2834.12-2834.110" *) _123_;
  assign _108_ = Exp_in_DI[8] && (* src = "FPNewBlackbox.preprocessed.v:2854.15-2854.65" *) FP32_SI;
  assign _109_ = Exp_in_DI[11] && (* src = "FPNewBlackbox.preprocessed.v:2854.70-2854.120" *) FP64_SI;
  assign _110_ = Exp_in_DI[5] && (* src = "FPNewBlackbox.preprocessed.v:2854.126-2854.176" *) FP16_SI;
  assign _111_ = Exp_in_DI[8] && (* src = "FPNewBlackbox.preprocessed.v:2854.182-2854.238" *) FP16ALT_SI;
  assign _112_ = _101_ && (* src = "FPNewBlackbox.preprocessed.v:2864.15-2864.57" *) FP32_SI;
  assign _113_ = _102_ && (* src = "FPNewBlackbox.preprocessed.v:2864.62-2864.106" *) FP64_SI;
  assign _114_ = _103_ && (* src = "FPNewBlackbox.preprocessed.v:2864.112-2864.154" *) FP16_SI;
  assign _115_ = _101_ && (* src = "FPNewBlackbox.preprocessed.v:2864.160-2864.205" *) FP16ALT_SI;
  assign _116_ = FP32_SI && (* src = "FPNewBlackbox.preprocessed.v:2949.117-2949.144" *) Mant_upper_D[29];
  assign _117_ = FP64_SI && (* src = "FPNewBlackbox.preprocessed.v:2949.149-2949.175" *) Mant_upper_D[0];
  assign _118_ = FP16_SI && (* src = "FPNewBlackbox.preprocessed.v:2949.181-2949.208" *) Mant_upper_D[42];
  assign _119_ = FP16ALT_SI && (* src = "FPNewBlackbox.preprocessed.v:2949.214-2949.244" *) Mant_upper_D[45];
  assign _120_ = Mant_lower_D[1] && (* src = "FPNewBlackbox.preprocessed.v:2949.53-2949.247" *) _136_;
  assign Mant_roundUp_Vector_S[0] = FP64_SI && (* src = "FPNewBlackbox.preprocessed.v:2958.153-2958.178" *) Mant_roundUp_S;
  assign Mant_roundUp_Vector_S[29] = FP32_SI && (* src = "FPNewBlackbox.preprocessed.v:2958.113-2958.138" *) Mant_roundUp_S;
  assign Mant_roundUp_Vector_S[42] = FP16_SI && (* src = "FPNewBlackbox.preprocessed.v:2958.77-2958.102" *) Mant_roundUp_S;
  assign Mant_roundUp_Vector_S[45] = FP16ALT_SI && (* src = "FPNewBlackbox.preprocessed.v:2958.41-2958.69" *) Mant_roundUp_S;
  assign _121_ = | (* src = "FPNewBlackbox.preprocessed.v:2875.13-2875.39" *) Mant_in_DI;
  assign _122_ = ~ (* src = "FPNewBlackbox.preprocessed.v:2696.20-2696.30" *) $signed({ Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI[12], Exp_in_DI });
  assign _123_ = ~ (* src = "FPNewBlackbox.preprocessed.v:2865.8-2865.23" *) Mant_in_DI[56];
  assign _124_ = ~ (* src = "FPNewBlackbox.preprocessed.v:2951.70-2951.81" *) Sign_in_DI;
  assign _125_ = ~ (* src = "FPNewBlackbox.preprocessed.v:2978.22-2978.40" *) Full_precision_SI;
  assign _126_ = _108_ | (* src = "FPNewBlackbox.preprocessed.v:2854.14-2854.121" *) _109_;
  assign _127_ = _126_ | (* src = "FPNewBlackbox.preprocessed.v:2854.13-2854.177" *) _110_;
  assign _128_ = _127_ | (* src = "FPNewBlackbox.preprocessed.v:2854.12-2854.239" *) _111_;
  assign _129_ = _112_ | (* src = "FPNewBlackbox.preprocessed.v:2864.14-2864.107" *) _113_;
  assign _130_ = _129_ | (* src = "FPNewBlackbox.preprocessed.v:2864.13-2864.155" *) _114_;
  assign _131_ = _130_ | (* src = "FPNewBlackbox.preprocessed.v:2864.12-2864.206" *) _115_;
  assign Mant_rounded_S = _144_ | (* src = "FPNewBlackbox.preprocessed.v:2941.26-2941.59" *) Mant_sticky_bit_D;
  assign _132_ = Mant_lower_D[0] | (* src = "FPNewBlackbox.preprocessed.v:2949.74-2949.109" *) Mant_sticky_bit_D;
  assign _133_ = _116_ | (* src = "FPNewBlackbox.preprocessed.v:2949.116-2949.176" *) _117_;
  assign _134_ = _133_ | (* src = "FPNewBlackbox.preprocessed.v:2949.115-2949.209" *) _118_;
  assign _135_ = _134_ | (* src = "FPNewBlackbox.preprocessed.v:2949.114-2949.245" *) _119_;
  assign _136_ = _132_ | (* src = "FPNewBlackbox.preprocessed.v:2949.73-2949.246" *) _135_;
  assign In_Exact_S = _125_ | (* src = "FPNewBlackbox.preprocessed.v:2978.22-2978.57" *) Mant_rounded_S;
  assign _018_ = _107_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2834.12-2834.110|FPNewBlackbox.preprocessed.v:2834.8-2915.6" *) { Mant_in_DI[3:0], 53'h00000000000000 } : _023_;
  assign _017_ = _107_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2834.12-2834.110|FPNewBlackbox.preprocessed.v:2834.8-2915.6" *) 11'h000 : _022_;
  assign _019_ = _107_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2834.12-2834.110|FPNewBlackbox.preprocessed.v:2834.8-2915.6" *) Mant_in_DI[56:4] : _024_;
  assign _016_ = _107_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2834.12-2834.110|FPNewBlackbox.preprocessed.v:2834.8-2915.6" *) 1'h1 : _021_;
  assign _015_ = _107_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2834.12-2834.110|FPNewBlackbox.preprocessed.v:2834.8-2915.6" *) 1'h0 : _020_;
  assign _013_ = _121_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2813.8-2813.34|FPNewBlackbox.preprocessed.v:2813.4-2832.7" *) { Mant_in_DI[4:0], 52'h0000000000000 } : 57'h000000000000000;
  assign _014_ = _121_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2813.8-2813.34|FPNewBlackbox.preprocessed.v:2813.4-2832.7" *) { 1'h0, Mant_in_DI[56:5] } : 53'h00000000000000;
  assign _012_ = _121_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2813.8-2813.34|FPNewBlackbox.preprocessed.v:2813.4-2832.7" *) 1'h1 : 1'h0;
  assign _010_ = _099_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2812.12-2812.69|FPNewBlackbox.preprocessed.v:2812.8-2915.6" *) _013_ : _018_;
  assign _009_ = _099_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2812.12-2812.69|FPNewBlackbox.preprocessed.v:2812.8-2915.6" *) 11'h000 : _017_;
  assign _011_ = _099_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2812.12-2812.69|FPNewBlackbox.preprocessed.v:2812.8-2915.6" *) _014_ : _019_;
  assign _008_ = _099_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2812.12-2812.69|FPNewBlackbox.preprocessed.v:2812.8-2915.6" *) _012_ : _016_;
  assign _007_ = _099_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2812.12-2812.69|FPNewBlackbox.preprocessed.v:2812.8-2915.6" *) 1'h0 : _015_;
  assign _005_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2802.12-2802.40|FPNewBlackbox.preprocessed.v:2802.8-2915.6" *) 1'h1 : 1'h0;
  assign _003_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2802.12-2802.40|FPNewBlackbox.preprocessed.v:2802.8-2915.6" *) 57'h000000000000000 : _010_;
  assign _002_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2802.12-2802.40|FPNewBlackbox.preprocessed.v:2802.8-2915.6" *) 11'h7ff : _009_;
  assign _004_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2802.12-2802.40|FPNewBlackbox.preprocessed.v:2802.8-2915.6" *) 53'h08000000000000 : _011_;
  assign _001_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2802.12-2802.40|FPNewBlackbox.preprocessed.v:2802.8-2915.6" *) 1'h0 : _008_;
  assign _000_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2802.12-2802.40|FPNewBlackbox.preprocessed.v:2802.8-2915.6" *) 1'h0 : _007_;
  assign _094_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38|FPNewBlackbox.preprocessed.v:2792.8-2915.6" *) 1'h0 : _005_;
  assign _095_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38|FPNewBlackbox.preprocessed.v:2792.8-2915.6" *) Sign_in_DI : _006_;
  assign _092_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38|FPNewBlackbox.preprocessed.v:2792.8-2915.6" *) 57'h000000000000000 : _003_;
  assign _091_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38|FPNewBlackbox.preprocessed.v:2792.8-2915.6" *) 11'h7ff : _002_;
  assign _093_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38|FPNewBlackbox.preprocessed.v:2792.8-2915.6" *) 53'h00000000000000 : _004_;
  assign _090_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38|FPNewBlackbox.preprocessed.v:2792.8-2915.6" *) 1'h0 : _001_;
  assign _089_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2792.12-2792.38|FPNewBlackbox.preprocessed.v:2792.8-2915.6" *) 1'h0 : _000_;
  assign _078_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2771.8-2771.34|FPNewBlackbox.preprocessed.v:2771.4-2790.7" *) 1'h1 : 1'h0;
  assign _088_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2771.8-2771.34|FPNewBlackbox.preprocessed.v:2771.4-2790.7" *) 1'h0 : Sign_in_DI;
  assign _086_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2771.8-2771.34|FPNewBlackbox.preprocessed.v:2771.4-2790.7" *) 11'h7ff : 11'h000;
  assign _087_ = _106_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2771.8-2771.34|FPNewBlackbox.preprocessed.v:2771.4-2790.7" *) 53'h08000000000000 : 53'h00000000000000;
  assign _082_ = Zero_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2770.12-2770.21|FPNewBlackbox.preprocessed.v:2770.8-2915.6" *) 57'h000000000000000 : _092_;
  assign _081_ = Zero_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2770.12-2770.21|FPNewBlackbox.preprocessed.v:2770.8-2915.6" *) _086_ : _091_;
  assign _083_ = Zero_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2770.12-2770.21|FPNewBlackbox.preprocessed.v:2770.8-2915.6" *) _087_ : _093_;
  assign _080_ = Zero_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2770.12-2770.21|FPNewBlackbox.preprocessed.v:2770.8-2915.6" *) 1'h0 : _090_;
  assign _079_ = Zero_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2770.12-2770.21|FPNewBlackbox.preprocessed.v:2770.8-2915.6" *) 1'h0 : _089_;
  assign _084_ = Zero_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2770.12-2770.21|FPNewBlackbox.preprocessed.v:2770.8-2915.6" *) _078_ : _094_;
  assign _085_ = Zero_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2770.12-2770.21|FPNewBlackbox.preprocessed.v:2770.8-2915.6" *) _088_ : _095_;
  assign _076_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) 1'h0 : _084_;
  assign _077_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) Sign_in_DI : _085_;
  assign _074_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) 57'h000000000000000 : _082_;
  assign _073_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) 11'h000 : _081_;
  assign _075_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) 53'h00000000000000 : _083_;
  assign _072_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) 1'h0 : _080_;
  assign _071_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) 1'h1 : _079_;
  assign _070_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2760.12-2760.37|FPNewBlackbox.preprocessed.v:2760.8-2915.6" *) 1'h0 : _078_;
  assign _006_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2739.13-2739.41|FPNewBlackbox.preprocessed.v:2739.9-2758.7" *) 1'h0 : Sign_in_DI;
  assign _069_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2739.13-2739.41|FPNewBlackbox.preprocessed.v:2739.9-2758.7" *) 53'h08000000000000 : 53'h00000000000000;
  assign _068_ = _105_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2739.13-2739.41|FPNewBlackbox.preprocessed.v:2739.9-2758.7" *) 1'h0 : 1'h1;
  assign _066_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2729.8-2729.33|FPNewBlackbox.preprocessed.v:2729.4-2758.7" *) 1'h1 : _005_;
  assign _067_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2729.8-2729.33|FPNewBlackbox.preprocessed.v:2729.4-2758.7" *) 1'h0 : _006_;
  assign _065_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2729.8-2729.33|FPNewBlackbox.preprocessed.v:2729.4-2758.7" *) 53'h08000000000000 : _069_;
  assign _064_ = _104_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2729.8-2729.33|FPNewBlackbox.preprocessed.v:2729.4-2758.7" *) 1'h0 : _068_;
  assign _056_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) 57'h000000000000000 : _074_;
  assign _055_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) 11'h7ff : _073_;
  assign _058_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) _065_ : _075_;
  assign _052_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) 1'h0 : _070_;
  assign _054_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) 1'h0 : _072_;
  assign _053_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) _064_ : _071_;
  assign _061_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) _066_ : _076_;
  assign _063_ = Inf_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2728.12-2728.20|FPNewBlackbox.preprocessed.v:2728.8-2915.6" *) _067_ : _077_;
  assign _049_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) SNaN_SI : _061_;
  assign _051_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) 1'h0 : _063_;
  assign _044_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) 57'h000000000000000 : _056_;
  assign _043_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) 11'h7ff : _055_;
  assign _046_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) 53'h08000000000000 : _058_;
  assign _042_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) 1'h0 : _054_;
  assign _041_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) 1'h0 : _053_;
  assign _040_ = NaN_b_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2718.12-2718.20|FPNewBlackbox.preprocessed.v:2718.8-2915.6" *) 1'h0 : _052_;
  assign NV_OP_S = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) SNaN_SI : _049_;
  assign Sign_res_D = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) 1'h0 : _051_;
  assign Mant_forround_D = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) 57'h000000000000000 : _044_;
  assign Exp_res_norm_D = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) 11'h7ff : _043_;
  assign Mant_res_norm_D = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) 53'h08000000000000 : _046_;
  assign Exp_UF_S = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) 1'h0 : _042_;
  assign Exp_OF_S = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) 1'h0 : _041_;
  assign Div_Zero_S = NaN_a_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2708.7-2708.15|FPNewBlackbox.preprocessed.v:2708.3-2915.6" *) 1'h0 : _040_;
  assign _062_ = FP16_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2974.12-2974.19|FPNewBlackbox.preprocessed.v:2974.8-2977.110" *) { 48'hffffffffffff, Sign_res_D, Exp_before_format_ctl_D[4:0], Mant_before_format_ctl_D[51:42] } : { 48'hffffffffffff, Sign_res_D, Exp_before_format_ctl_D[7:0], Mant_before_format_ctl_D[51:45] };
  assign _050_ = FP64_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2972.12-2972.19|FPNewBlackbox.preprocessed.v:2972.8-2977.110" *) { Sign_res_D, Exp_before_format_ctl_D, Mant_before_format_ctl_D } : _062_;
  assign Result_DO = FP32_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2970.7-2970.14|FPNewBlackbox.preprocessed.v:2970.3-2977.110" *) { 32'hffffffff, Sign_res_D, Exp_before_format_ctl_D[7:0], Mant_before_format_ctl_D[51:29] } : _050_;
  function [0:0] _275_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2948.3-2954.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _275_ = b[0:0];
      3'b?1?:
        _275_ = b[1:1];
      3'b1??:
        _275_ = b[2:2];
      default:
        _275_ = a;
    endcase
  endfunction
  assign Mant_roundUp_S = _275_(1'h0, { _120_, _097_, _098_ }, { _139_, _138_, _137_ });
  assign _137_ = RM_SI == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2948.3-2954.10" *) 3'h3;
  assign _138_ = RM_SI == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2948.3-2954.10" *) 3'h2;
  assign _139_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:2948.3-2954.10" *) RM_SI;
  assign _059_ = FP16_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2931.12-2931.19|FPNewBlackbox.preprocessed.v:2931.8-2940.6" *) _142_ : _143_;
  assign _057_ = FP16_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2931.12-2931.19|FPNewBlackbox.preprocessed.v:2931.8-2940.6" *) Mant_res_norm_D[41:40] : Mant_res_norm_D[44:43];
  assign _060_ = FP16_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2931.12-2931.19|FPNewBlackbox.preprocessed.v:2931.8-2940.6" *) { Mant_res_norm_D[52:42], 42'h00000000000 } : { Mant_res_norm_D[52:45], 45'h000000000000 };
  assign _047_ = FP64_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2926.12-2926.19|FPNewBlackbox.preprocessed.v:2926.8-2940.6" *) _141_ : _059_;
  assign _045_ = FP64_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2926.12-2926.19|FPNewBlackbox.preprocessed.v:2926.8-2940.6" *) Mant_forround_D[56:55] : _057_;
  assign _048_ = FP64_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2926.12-2926.19|FPNewBlackbox.preprocessed.v:2926.8-2940.6" *) Mant_res_norm_D : _060_;
  assign Mant_sticky_bit_D = FP32_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2921.7-2921.14|FPNewBlackbox.preprocessed.v:2921.3-2940.6" *) _140_ : _047_;
  assign Mant_lower_D = FP32_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2921.7-2921.14|FPNewBlackbox.preprocessed.v:2921.3-2940.6" *) Mant_res_norm_D[28:27] : _045_;
  assign Mant_upper_D = FP32_SI ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2921.7-2921.14|FPNewBlackbox.preprocessed.v:2921.3-2940.6" *) { Mant_res_norm_D[52:29], 29'h00000000 } : _048_;
  assign _038_ = Mant_in_DI[56] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2896.12-2896.26|FPNewBlackbox.preprocessed.v:2896.8-2915.6" *) { Mant_in_DI[3:0], 53'h00000000000000 } : { Mant_in_DI[2:0], 54'h00000000000000 };
  assign _037_ = Mant_in_DI[56] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2896.12-2896.26|FPNewBlackbox.preprocessed.v:2896.8-2915.6" *) Exp_in_DI[10:0] : Exp_subOne_D[10:0];
  assign _039_ = Mant_in_DI[56] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2896.12-2896.26|FPNewBlackbox.preprocessed.v:2896.8-2915.6" *) { 1'h1, Mant_in_DI[55:4] } : Mant_in_DI[55:3];
  assign _035_ = Mant_in_DI[56] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2865.8-2865.23|FPNewBlackbox.preprocessed.v:2865.4-2894.7" *) 57'h000000000000000 : { Mant_in_DI[2:0], 54'h00000000000000 };
  assign _034_ = Mant_in_DI[56] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2865.8-2865.23|FPNewBlackbox.preprocessed.v:2865.4-2894.7" *) 11'h7ff : Exp_subOne_D[10:0];
  assign _036_ = Mant_in_DI[56] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2865.8-2865.23|FPNewBlackbox.preprocessed.v:2865.4-2894.7" *) 53'h00000000000000 : Mant_in_DI[55:3];
  assign _033_ = Mant_in_DI[56] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2865.8-2865.23|FPNewBlackbox.preprocessed.v:2865.4-2894.7" *) 1'h1 : 1'h0;
  assign _031_ = _131_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2864.12-2864.206|FPNewBlackbox.preprocessed.v:2864.8-2915.6" *) _035_ : _038_;
  assign _030_ = _131_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2864.12-2864.206|FPNewBlackbox.preprocessed.v:2864.8-2915.6" *) _034_ : _037_;
  assign _032_ = _131_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2864.12-2864.206|FPNewBlackbox.preprocessed.v:2864.8-2915.6" *) _036_ : _039_;
  assign _029_ = _131_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2864.12-2864.206|FPNewBlackbox.preprocessed.v:2864.8-2915.6" *) _033_ : 1'h0;
  assign _027_ = _128_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2854.12-2854.239|FPNewBlackbox.preprocessed.v:2854.8-2915.6" *) 57'h000000000000000 : _031_;
  assign _026_ = _128_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2854.12-2854.239|FPNewBlackbox.preprocessed.v:2854.8-2915.6" *) 11'h7ff : _030_;
  assign _028_ = _128_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2854.12-2854.239|FPNewBlackbox.preprocessed.v:2854.8-2915.6" *) 53'h00000000000000 : _032_;
  assign _025_ = _128_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2854.12-2854.239|FPNewBlackbox.preprocessed.v:2854.8-2915.6" *) 1'h1 : _029_;
  assign _023_ = Exp_in_DI[12] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2844.12-2844.25|FPNewBlackbox.preprocessed.v:2844.8-2915.6" *) Mant_forsticky_D : _027_;
  assign _022_ = Exp_in_DI[12] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2844.12-2844.25|FPNewBlackbox.preprocessed.v:2844.8-2915.6" *) 11'h000 : _026_;
  assign _024_ = Exp_in_DI[12] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2844.12-2844.25|FPNewBlackbox.preprocessed.v:2844.8-2915.6" *) Mant_RS_D : _028_;
  assign _021_ = Exp_in_DI[12] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2844.12-2844.25|FPNewBlackbox.preprocessed.v:2844.8-2915.6" *) 1'h1 : 1'h0;
  assign _020_ = Exp_in_DI[12] ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:2844.12-2844.25|FPNewBlackbox.preprocessed.v:2844.8-2915.6" *) 1'h0 : _025_;
  assign _140_ = | (* src = "FPNewBlackbox.preprocessed.v:2924.24-2924.46" *) Mant_res_norm_D[26:0];
  assign _141_ = | (* src = "FPNewBlackbox.preprocessed.v:2929.24-2929.46" *) Mant_forround_D[55:0];
  assign _142_ = | (* src = "FPNewBlackbox.preprocessed.v:2934.24-2934.47" *) Mant_res_norm_D[39:30];
  assign _143_ = | (* src = "FPNewBlackbox.preprocessed.v:2939.24-2939.47" *) Mant_res_norm_D[42:30];
  assign _144_ = | (* src = "FPNewBlackbox.preprocessed.v:2941.26-2941.39" *) Mant_lower_D;
  assign { Mant_RS_D, Mant_forsticky_D } = { Mant_in_DI, 53'h00000000000000 } >> (* src = "FPNewBlackbox.preprocessed.v:2699.41-2699.78" *) Num_RS_D;
  assign { _145_[31:13], Exp_subOne_D } = $signed(Exp_in_DI) - (* src = "FPNewBlackbox.preprocessed.v:2701.24-2701.37" *) $signed(32'd1);
  assign Mant_res_round_D = Mant_upperRounded_D[53] ? (* src = "FPNewBlackbox.preprocessed.v:2963.29-2963.125" *) Mant_upperRounded_D[52:1] : Mant_upperRounded_D[51:0];
  assign { _146_[52], Mant_before_format_ctl_D } = Full_precision_SI ? (* src = "FPNewBlackbox.preprocessed.v:2967.37-2967.91" *) { 1'h0, Mant_res_round_D } : Mant_res_norm_D;
  assign Exp_before_format_ctl_D = Full_precision_SI ? (* src = "FPNewBlackbox.preprocessed.v:2968.36-2968.88" *) Exp_res_round_D : Exp_res_norm_D;
  assign _096_[12:0] = Num_RS_D;
  assign _145_[12:0] = Exp_subOne_D;
  assign _146_[51:0] = Mant_before_format_ctl_D;
  assign Fflags_SO = { NV_OP_S, Div_Zero_S, Exp_OF_S, Exp_UF_S, In_Exact_S };
  assign Mant_renorm_S = Mant_upperRounded_D[53];
  assign { Mant_roundUp_Vector_S[52:46], Mant_roundUp_Vector_S[44:43], Mant_roundUp_Vector_S[41:30], Mant_roundUp_Vector_S[28:1] } = 49'h0000000000000;
endmodule

(* dynports =  1  *)
(* hdlname = "\\nrbd_nrsc_mvp" *)
(* src = "FPNewBlackbox.preprocessed.v:2981.1-3067.10" *)
module nrbd_nrsc_mvp(Clk_CI, Rst_RBI, Div_start_SI, Sqrt_start_SI, Start_SI, Kill_SI, Special_case_SBI, Special_case_dly_SBI, Precision_ctl_SI, Format_sel_SI, Mant_a_DI, Mant_b_DI, Exp_a_DI, Exp_b_DI, Div_enable_SO, Sqrt_enable_SO, Full_precision_SO, FP32_SO, FP64_SO, FP16_SO, FP16ALT_SO
, Ready_SO, Done_SO, Mant_z_DO, Exp_z_DO);
  (* src = "FPNewBlackbox.preprocessed.v:3008.13-3008.19" *)
  input Clk_CI;
  wire Clk_CI;
  (* src = "FPNewBlackbox.preprocessed.v:3025.14-3025.27" *)
  output Div_enable_SO;
  wire Div_enable_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3010.13-3010.25" *)
  input Div_start_SI;
  wire Div_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3036.7-3036.22" *)
  (* unused_bits = "0" *)
  wire Div_start_dly_S;
  (* src = "FPNewBlackbox.preprocessed.v:3033.14-3033.21" *)
  output Done_SO;
  wire Done_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3023.46-3023.54" *)
  input [11:0] Exp_a_DI;
  wire [11:0] Exp_a_DI;
  (* src = "FPNewBlackbox.preprocessed.v:3024.46-3024.54" *)
  input [11:0] Exp_b_DI;
  wire [11:0] Exp_b_DI;
  (* src = "FPNewBlackbox.preprocessed.v:3035.21-3035.29" *)
  output [12:0] Exp_z_DO;
  wire [12:0] Exp_z_DO;
  (* src = "FPNewBlackbox.preprocessed.v:3031.14-3031.24" *)
  output FP16ALT_SO;
  wire FP16ALT_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3030.14-3030.21" *)
  output FP16_SO;
  wire FP16_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3028.14-3028.21" *)
  output FP32_SO;
  wire FP32_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3029.14-3029.21" *)
  output FP64_SO;
  wire FP64_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3018.19-3018.32" *)
  input [1:0] Format_sel_SI;
  wire [1:0] Format_sel_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3027.14-3027.31" *)
  output Full_precision_SO;
  wire Full_precision_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3013.13-3013.20" *)
  input Kill_SI;
  wire Kill_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3020.47-3020.56" *)
  input [52:0] Mant_a_DI;
  wire [52:0] Mant_a_DI;
  (* src = "FPNewBlackbox.preprocessed.v:3021.47-3021.56" *)
  input [52:0] Mant_b_DI;
  wire [52:0] Mant_b_DI;
  (* src = "FPNewBlackbox.preprocessed.v:3034.21-3034.30" *)
  output [56:0] Mant_z_DO;
  wire [56:0] Mant_z_DO;
  (* src = "FPNewBlackbox.preprocessed.v:3017.19-3017.35" *)
  input [5:0] Precision_ctl_SI;
  wire [5:0] Precision_ctl_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3032.14-3032.22" *)
  output Ready_SO;
  wire Ready_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3009.13-3009.20" *)
  input Rst_RBI;
  wire Rst_RBI;
  (* src = "FPNewBlackbox.preprocessed.v:3014.13-3014.29" *)
  input Special_case_SBI;
  wire Special_case_SBI;
  (* src = "FPNewBlackbox.preprocessed.v:3015.13-3015.33" *)
  input Special_case_dly_SBI;
  wire Special_case_dly_SBI;
  (* src = "FPNewBlackbox.preprocessed.v:3026.14-3026.28" *)
  output Sqrt_enable_SO;
  wire Sqrt_enable_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3011.13-3011.26" *)
  input Sqrt_start_SI;
  wire Sqrt_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3037.7-3037.23" *)
  (* unused_bits = "0" *)
  wire Sqrt_start_dly_S;
  (* src = "FPNewBlackbox.preprocessed.v:3012.13-3012.21" *)
  input Start_SI;
  wire Start_SI;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3038.14-3066.3" *)
  control_mvp control_U0 (
    .Clk_CI(Clk_CI),
    .Denominator_DI(Mant_b_DI),
    .Div_enable_SO(Div_enable_SO),
    .Div_start_SI(Div_start_SI),
    .Div_start_dly_SO(Div_start_dly_S),
    .Done_SO(Done_SO),
    .Exp_den_DI(Exp_b_DI),
    .Exp_num_DI(Exp_a_DI),
    .Exp_result_prenorm_DO(Exp_z_DO),
    .FP16ALT_SO(FP16ALT_SO),
    .FP16_SO(FP16_SO),
    .FP32_SO(FP32_SO),
    .FP64_SO(FP64_SO),
    .Format_sel_SI(Format_sel_SI),
    .Full_precision_SO(Full_precision_SO),
    .Kill_SI(Kill_SI),
    .Mant_result_prenorm_DO(Mant_z_DO),
    .Numerator_DI(Mant_a_DI),
    .Precision_ctl_SI(Precision_ctl_SI),
    .Ready_SO(Ready_SO),
    .Rst_RBI(Rst_RBI),
    .Special_case_SBI(Special_case_SBI),
    .Special_case_dly_SBI(Special_case_dly_SBI),
    .Sqrt_enable_SO(Sqrt_enable_SO),
    .Sqrt_start_SI(Sqrt_start_SI),
    .Sqrt_start_dly_SO(Sqrt_start_dly_S),
    .Start_SI(Start_SI)
  );
endmodule

(* dynports =  1  *)
(* hdlname = "\\preprocess_mvp" *)
(* src = "FPNewBlackbox.preprocessed.v:3068.1-3375.10" *)
module preprocess_mvp(Clk_CI, Rst_RBI, Div_start_SI, Sqrt_start_SI, Ready_SI, Operand_a_DI, Operand_b_DI, RM_SI, Format_sel_SI, Start_SO, Exp_a_DO_norm, Exp_b_DO_norm, Mant_a_DO_norm, Mant_b_DO_norm, RM_dly_SO, Sign_z_DO, Inf_a_SO, Inf_b_SO, Zero_a_SO, Zero_b_SO, NaN_a_SO
, NaN_b_SO, SNaN_SO, Special_case_SBO, Special_case_dly_SBO);
  (* src = "FPNewBlackbox.preprocessed.v:3274.2-3282.34" *)
  wire _000_;
  (* src = "FPNewBlackbox.preprocessed.v:3285.2-3291.26" *)
  wire _001_;
  (* src = "FPNewBlackbox.preprocessed.v:3332.48-3332.98" *)
  wire [11:0] _002_;
  (* src = "FPNewBlackbox.preprocessed.v:3356.48-3356.98" *)
  wire [11:0] _003_;
  wire _004_;
  wire _005_;
  (* src = "FPNewBlackbox.preprocessed.v:3209.29-3209.85" *)
  wire _006_;
  (* src = "FPNewBlackbox.preprocessed.v:3210.29-3210.85" *)
  wire _007_;
  (* src = "FPNewBlackbox.preprocessed.v:3211.31-3211.113" *)
  wire _008_;
  (* src = "FPNewBlackbox.preprocessed.v:3212.31-3212.113" *)
  wire _009_;
  (* src = "FPNewBlackbox.preprocessed.v:3215.29-3215.85" *)
  wire _010_;
  (* src = "FPNewBlackbox.preprocessed.v:3216.29-3216.85" *)
  wire _011_;
  (* src = "FPNewBlackbox.preprocessed.v:3217.31-3217.113" *)
  wire _012_;
  (* src = "FPNewBlackbox.preprocessed.v:3218.31-3218.113" *)
  wire _013_;
  (* src = "FPNewBlackbox.preprocessed.v:3221.29-3221.84" *)
  wire _014_;
  (* src = "FPNewBlackbox.preprocessed.v:3222.29-3222.84" *)
  wire _015_;
  (* src = "FPNewBlackbox.preprocessed.v:3223.31-3223.113" *)
  wire _016_;
  (* src = "FPNewBlackbox.preprocessed.v:3224.31-3224.113" *)
  wire _017_;
  (* src = "FPNewBlackbox.preprocessed.v:3227.29-3227.87" *)
  wire _018_;
  (* src = "FPNewBlackbox.preprocessed.v:3228.29-3228.87" *)
  wire _019_;
  (* src = "FPNewBlackbox.preprocessed.v:3229.31-3229.119" *)
  wire _020_;
  (* src = "FPNewBlackbox.preprocessed.v:3230.31-3230.119" *)
  wire _021_;
  (* src = "FPNewBlackbox.preprocessed.v:3247.22-3247.41" *)
  wire _022_;
  (* src = "FPNewBlackbox.preprocessed.v:3247.44-3247.89" *)
  wire _023_;
  (* src = "FPNewBlackbox.preprocessed.v:3248.44-3248.89" *)
  wire _024_;
  (* src = "FPNewBlackbox.preprocessed.v:3249.43-3249.91" *)
  wire _025_;
  (* src = "FPNewBlackbox.preprocessed.v:3250.43-3250.91" *)
  wire _026_;
  (* src = "FPNewBlackbox.preprocessed.v:3251.43-3251.92" *)
  wire _027_;
  (* src = "FPNewBlackbox.preprocessed.v:3252.43-3252.92" *)
  wire _028_;
  (* src = "FPNewBlackbox.preprocessed.v:3253.43-3253.76" *)
  wire _029_;
  (* src = "FPNewBlackbox.preprocessed.v:3253.81-3253.114" *)
  wire _030_;
  (* src = "FPNewBlackbox.preprocessed.v:3286.7-3286.31" *)
  wire _031_;
  (* src = "FPNewBlackbox.preprocessed.v:3288.12-3288.37" *)
  wire _032_;
  (* src = "FPNewBlackbox.preprocessed.v:3195.33-3195.51" *)
  wire _033_;
  (* src = "FPNewBlackbox.preprocessed.v:3197.33-3197.51" *)
  wire _034_;
  (* src = "FPNewBlackbox.preprocessed.v:3251.70-3251.92" *)
  wire _035_;
  (* src = "FPNewBlackbox.preprocessed.v:3252.70-3252.92" *)
  wire _036_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.28-3273.170" *)
  wire _037_;
  (* src = "FPNewBlackbox.preprocessed.v:3253.42-3253.115" *)
  wire _038_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.50-3273.71" *)
  wire _039_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.49-3273.83" *)
  wire _040_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.48-3273.95" *)
  wire _041_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.47-3273.107" *)
  wire _042_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.46-3273.119" *)
  wire _043_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.124-3273.144" *)
  wire _044_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.123-3273.156" *)
  wire _045_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.122-3273.168" *)
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  (* src = "FPNewBlackbox.preprocessed.v:3194.56-3194.76" *)
  wire _052_;
  (* src = "FPNewBlackbox.preprocessed.v:3196.56-3196.76" *)
  wire _053_;
  (* src = "FPNewBlackbox.preprocessed.v:3332.80-3332.98" *)
  wire [11:0] _054_;
  (* src = "FPNewBlackbox.preprocessed.v:3356.80-3356.98" *)
  wire [11:0] _055_;
  (* src = "FPNewBlackbox.preprocessed.v:3324.49-3324.78" *)
  wire [52:0] _056_;
  (* src = "FPNewBlackbox.preprocessed.v:3348.49-3348.78" *)
  wire [52:0] _057_;
  (* src = "FPNewBlackbox.preprocessed.v:3332.49-3332.76" *)
  wire [11:0] _058_;
  (* src = "FPNewBlackbox.preprocessed.v:3356.49-3356.76" *)
  wire [11:0] _059_;
  (* src = "FPNewBlackbox.preprocessed.v:3273.31-3273.168" *)
  wire _060_;
  (* src = "FPNewBlackbox.preprocessed.v:3287.16-3287.35" *)
  wire _061_;
  (* src = "FPNewBlackbox.preprocessed.v:3095.13-3095.19" *)
  input Clk_CI;
  wire Clk_CI;
  (* src = "FPNewBlackbox.preprocessed.v:3097.13-3097.25" *)
  input Div_start_SI;
  wire Div_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3127.13-3127.20" *)
  wire [10:0] Exp_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:3109.47-3109.60" *)
  output [11:0] Exp_a_DO_norm;
  wire [11:0] Exp_a_DO_norm;
  (* src = "FPNewBlackbox.preprocessed.v:3331.39-3331.52" *)
  reg [11:0] Exp_a_norm_DP;
  (* src = "FPNewBlackbox.preprocessed.v:3188.6-3188.29" *)
  wire Exp_a_prenorm_Inf_NaN_S;
  (* src = "FPNewBlackbox.preprocessed.v:3184.7-3184.27" *)
  wire Exp_a_prenorm_zero_S;
  (* src = "FPNewBlackbox.preprocessed.v:3128.13-3128.20" *)
  wire [10:0] Exp_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:3110.47-3110.60" *)
  output [11:0] Exp_b_DO_norm;
  wire [11:0] Exp_b_DO_norm;
  (* src = "FPNewBlackbox.preprocessed.v:3355.39-3355.52" *)
  reg [11:0] Exp_b_norm_DP;
  (* src = "FPNewBlackbox.preprocessed.v:3189.6-3189.29" *)
  wire Exp_b_prenorm_Inf_NaN_S;
  (* src = "FPNewBlackbox.preprocessed.v:3185.7-3185.27" *)
  wire Exp_b_prenorm_zero_S;
  (* src = "FPNewBlackbox.preprocessed.v:3106.19-3106.32" *)
  input [1:0] Format_sel_SI;
  wire [1:0] Format_sel_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3125.7-3125.13" *)
  wire Hb_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:3126.7-3126.13" *)
  wire Hb_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:3237.7-3237.15" *)
  wire Inf_a_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3116.14-3116.22" *)
  output Inf_a_SO;
  wire Inf_a_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3238.6-3238.14" *)
  reg Inf_a_SP;
  (* src = "FPNewBlackbox.preprocessed.v:3239.7-3239.15" *)
  wire Inf_b_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3117.14-3117.22" *)
  output Inf_b_SO;
  wire Inf_b_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3240.6-3240.14" *)
  reg Inf_b_SP;
  (* src = "FPNewBlackbox.preprocessed.v:3131.41-3131.49" *)
  wire [52:0] Mant_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:3112.48-3112.62" *)
  output [52:0] Mant_a_DO_norm;
  wire [52:0] Mant_a_DO_norm;
  (* src = "FPNewBlackbox.preprocessed.v:3129.13-3129.26" *)
  wire [51:0] Mant_a_NonH_D;
  (* src = "FPNewBlackbox.preprocessed.v:3323.40-3323.54" *)
  reg [52:0] Mant_a_norm_DP;
  (* src = "FPNewBlackbox.preprocessed.v:3191.7-3191.28" *)
  wire Mant_a_prenorm_SNaN_S;
  (* src = "FPNewBlackbox.preprocessed.v:3182.6-3182.27" *)
  wire Mant_a_prenorm_zero_S;
  (* src = "FPNewBlackbox.preprocessed.v:3132.41-3132.49" *)
  wire [52:0] Mant_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:3113.48-3113.62" *)
  output [52:0] Mant_b_DO_norm;
  wire [52:0] Mant_b_DO_norm;
  (* src = "FPNewBlackbox.preprocessed.v:3130.13-3130.26" *)
  wire [51:0] Mant_b_NonH_D;
  (* src = "FPNewBlackbox.preprocessed.v:3347.40-3347.54" *)
  reg [52:0] Mant_b_norm_DP;
  (* src = "FPNewBlackbox.preprocessed.v:3193.7-3193.28" *)
  wire Mant_b_prenorm_SNaN_S;
  (* src = "FPNewBlackbox.preprocessed.v:3183.6-3183.27" *)
  wire Mant_b_prenorm_zero_S;
  (* src = "FPNewBlackbox.preprocessed.v:3310.13-3310.30" *)
  wire [5:0] Mant_leadingOne_a;
  (* src = "FPNewBlackbox.preprocessed.v:3311.13-3311.30" *)
  wire [5:0] Mant_leadingOne_b;
  (* src = "FPNewBlackbox.preprocessed.v:3312.7-3312.20" *)
  (* unused_bits = "0" *)
  wire Mant_zero_S_a;
  (* src = "FPNewBlackbox.preprocessed.v:3313.7-3313.20" *)
  (* unused_bits = "0" *)
  wire Mant_zero_S_b;
  (* src = "FPNewBlackbox.preprocessed.v:3241.7-3241.15" *)
  wire NaN_a_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3120.14-3120.22" *)
  output NaN_a_SO;
  wire NaN_a_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3242.6-3242.14" *)
  reg NaN_a_SP;
  (* src = "FPNewBlackbox.preprocessed.v:3243.7-3243.15" *)
  wire NaN_b_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3121.14-3121.22" *)
  output NaN_b_SO;
  wire NaN_b_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3244.6-3244.14" *)
  reg NaN_b_SP;
  (* src = "FPNewBlackbox.preprocessed.v:3101.20-3101.32" *)
  input [63:0] Operand_a_DI;
  wire [63:0] Operand_a_DI;
  (* src = "FPNewBlackbox.preprocessed.v:3102.20-3102.32" *)
  input [63:0] Operand_b_DI;
  wire [63:0] Operand_b_DI;
  (* src = "FPNewBlackbox.preprocessed.v:3298.12-3298.17" *)
  reg [2:0] RM_DP;
  (* src = "FPNewBlackbox.preprocessed.v:3104.19-3104.24" *)
  input [2:0] RM_SI;
  wire [2:0] RM_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3114.20-3114.29" *)
  output [2:0] RM_dly_SO;
  wire [2:0] RM_dly_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3099.13-3099.21" *)
  input Ready_SI;
  wire Ready_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3096.13-3096.20" *)
  input Rst_RBI;
  wire Rst_RBI;
  (* src = "FPNewBlackbox.preprocessed.v:3122.14-3122.21" *)
  output SNaN_SO;
  wire SNaN_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3246.6-3246.13" *)
  reg SNaN_SP;
  (* src = "FPNewBlackbox.preprocessed.v:3133.6-3133.14" *)
  wire Sign_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:3134.6-3134.14" *)
  wire Sign_b_D;
  (* src = "FPNewBlackbox.preprocessed.v:3283.6-3283.15" *)
  wire Sign_z_DN;
  (* src = "FPNewBlackbox.preprocessed.v:3115.14-3115.23" *)
  output Sign_z_DO;
  wire Sign_z_DO;
  (* src = "FPNewBlackbox.preprocessed.v:3284.6-3284.15" *)
  reg Sign_z_DP;
  (* src = "FPNewBlackbox.preprocessed.v:3123.14-3123.30" *)
  output Special_case_SBO;
  wire Special_case_SBO;
  (* src = "FPNewBlackbox.preprocessed.v:3124.13-3124.33" *)
  output Special_case_dly_SBO;
  reg Special_case_dly_SBO;
  (* src = "FPNewBlackbox.preprocessed.v:3098.13-3098.26" *)
  input Sqrt_start_SI;
  wire Sqrt_start_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3135.7-3135.14" *)
  wire Start_S;
  (* src = "FPNewBlackbox.preprocessed.v:3107.14-3107.22" *)
  output Start_SO;
  wire Start_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3233.7-3233.16" *)
  wire Zero_a_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3118.14-3118.23" *)
  output Zero_a_SO;
  wire Zero_a_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3234.6-3234.15" *)
  reg Zero_a_SP;
  (* src = "FPNewBlackbox.preprocessed.v:3235.7-3235.16" *)
  wire Zero_b_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3119.14-3119.23" *)
  output Zero_b_SO;
  wire Zero_b_SO;
  (* src = "FPNewBlackbox.preprocessed.v:3236.6-3236.15" *)
  reg Zero_b_SP;
  assign _002_ = _058_ + (* src = "FPNewBlackbox.preprocessed.v:3332.48-3332.98" *) _054_;
  assign _003_ = _059_ + (* src = "FPNewBlackbox.preprocessed.v:3356.48-3356.98" *) _055_;
  (* src = "FPNewBlackbox.preprocessed.v:3304.2-3308.19" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) RM_DP <= 3'h0;
    else if (_022_) RM_DP <= RM_SI;
  (* src = "FPNewBlackbox.preprocessed.v:3292.2-3296.27" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Sign_z_DP <= 1'h0;
    else if (_004_) Sign_z_DP <= Sign_z_DN;
  (* src = "FPNewBlackbox.preprocessed.v:3254.2-3272.6" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) SNaN_SP <= 1'h0;
    else if (_022_) SNaN_SP <= _038_;
  (* src = "FPNewBlackbox.preprocessed.v:3325.2-3329.37" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Mant_a_norm_DP <= 53'h00000000000000;
    else if (_022_) Mant_a_norm_DP <= _056_;
  (* src = "FPNewBlackbox.preprocessed.v:3357.2-3361.35" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Exp_b_norm_DP <= 12'h000;
    else if (_022_) Exp_b_norm_DP <= _003_;
  (* src = "FPNewBlackbox.preprocessed.v:3349.2-3353.37" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Mant_b_norm_DP <= 53'h00000000000000;
    else if (_022_) Mant_b_norm_DP <= _057_;
  (* src = "FPNewBlackbox.preprocessed.v:3333.2-3337.35" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Exp_a_norm_DP <= 12'h000;
    else if (_022_) Exp_a_norm_DP <= _002_;
  assign _004_ = | { _032_, _031_ };
  assign _005_ = | { _048_, _049_ };
  assign _006_ = ! (* src = "FPNewBlackbox.preprocessed.v:3209.29-3209.85" *) Operand_a_DI[22:0];
  assign _007_ = ! (* src = "FPNewBlackbox.preprocessed.v:3210.29-3210.85" *) Operand_b_DI[22:0];
  assign _008_ = Operand_a_DI[30:23] == (* src = "FPNewBlackbox.preprocessed.v:3211.31-3211.113" *) 8'hff;
  assign _009_ = Operand_b_DI[30:23] == (* src = "FPNewBlackbox.preprocessed.v:3212.31-3212.113" *) 8'hff;
  assign _010_ = ! (* src = "FPNewBlackbox.preprocessed.v:3215.29-3215.85" *) Operand_a_DI[51:0];
  assign _011_ = ! (* src = "FPNewBlackbox.preprocessed.v:3216.29-3216.85" *) Operand_b_DI[51:0];
  assign _012_ = Operand_a_DI[62:52] == (* src = "FPNewBlackbox.preprocessed.v:3217.31-3217.113" *) 11'h7ff;
  assign _013_ = Operand_b_DI[62:52] == (* src = "FPNewBlackbox.preprocessed.v:3218.31-3218.113" *) 11'h7ff;
  assign _014_ = ! (* src = "FPNewBlackbox.preprocessed.v:3221.29-3221.84" *) Operand_a_DI[9:0];
  assign _015_ = ! (* src = "FPNewBlackbox.preprocessed.v:3222.29-3222.84" *) Operand_b_DI[9:0];
  assign _016_ = Operand_a_DI[14:10] == (* src = "FPNewBlackbox.preprocessed.v:3223.31-3223.113" *) 5'h1f;
  assign _017_ = Operand_b_DI[14:10] == (* src = "FPNewBlackbox.preprocessed.v:3224.31-3224.113" *) 5'h1f;
  assign _018_ = ! (* src = "FPNewBlackbox.preprocessed.v:3227.29-3227.87" *) Operand_a_DI[6:0];
  assign _019_ = ! (* src = "FPNewBlackbox.preprocessed.v:3228.29-3228.87" *) Operand_b_DI[6:0];
  assign _020_ = Operand_a_DI[14:7] == (* src = "FPNewBlackbox.preprocessed.v:3229.31-3229.119" *) 8'hff;
  assign _021_ = Operand_b_DI[14:7] == (* src = "FPNewBlackbox.preprocessed.v:3230.31-3230.119" *) 8'hff;
  assign Mant_a_prenorm_SNaN_S = _033_ && (* src = "FPNewBlackbox.preprocessed.v:3195.33-3195.75" *) _052_;
  assign Mant_b_prenorm_SNaN_S = _034_ && (* src = "FPNewBlackbox.preprocessed.v:3197.33-3197.75" *) _053_;
  assign _023_ = Exp_a_prenorm_zero_S && (* src = "FPNewBlackbox.preprocessed.v:3247.44-3247.89" *) Mant_a_prenorm_zero_S;
  assign _024_ = Exp_b_prenorm_zero_S && (* src = "FPNewBlackbox.preprocessed.v:3248.44-3248.89" *) Mant_b_prenorm_zero_S;
  assign _025_ = Exp_a_prenorm_Inf_NaN_S && (* src = "FPNewBlackbox.preprocessed.v:3249.43-3249.91" *) Mant_a_prenorm_zero_S;
  assign _026_ = Exp_b_prenorm_Inf_NaN_S && (* src = "FPNewBlackbox.preprocessed.v:3250.43-3250.91" *) Mant_b_prenorm_zero_S;
  assign _027_ = Exp_a_prenorm_Inf_NaN_S && (* src = "FPNewBlackbox.preprocessed.v:3251.43-3251.92" *) _035_;
  assign _028_ = Exp_b_prenorm_Inf_NaN_S && (* src = "FPNewBlackbox.preprocessed.v:3252.43-3252.92" *) _036_;
  assign _029_ = Mant_a_prenorm_SNaN_S && (* src = "FPNewBlackbox.preprocessed.v:3253.43-3253.76" *) NaN_a_SN;
  assign _030_ = Mant_b_prenorm_SNaN_S && (* src = "FPNewBlackbox.preprocessed.v:3253.81-3253.114" *) NaN_b_SN;
  assign Special_case_SBO = _037_ && (* src = "FPNewBlackbox.preprocessed.v:3273.28-3273.195" *) _022_;
  assign _031_ = Div_start_SI && (* src = "FPNewBlackbox.preprocessed.v:3286.7-3286.31" *) Ready_SI;
  assign _032_ = Sqrt_start_SI && (* src = "FPNewBlackbox.preprocessed.v:3288.12-3288.37" *) Ready_SI;
  assign _022_ = Start_S && (* src = "FPNewBlackbox.preprocessed.v:3356.26-3356.45" *) Ready_SI;
  assign Exp_a_prenorm_zero_S = ~ (* src = "FPNewBlackbox.preprocessed.v:3186.32-3186.39" *) Hb_a_D;
  assign Exp_b_prenorm_zero_S = ~ (* src = "FPNewBlackbox.preprocessed.v:3187.32-3187.39" *) Hb_b_D;
  assign _033_ = ~ (* src = "FPNewBlackbox.preprocessed.v:3195.33-3195.51" *) Mant_a_NonH_D[51];
  assign _034_ = ~ (* src = "FPNewBlackbox.preprocessed.v:3197.33-3197.51" *) Mant_b_NonH_D[51];
  assign _035_ = ~ (* src = "FPNewBlackbox.preprocessed.v:3251.70-3251.92" *) Mant_a_prenorm_zero_S;
  assign _036_ = ~ (* src = "FPNewBlackbox.preprocessed.v:3252.70-3252.92" *) Mant_b_prenorm_zero_S;
  assign _037_ = ~ (* src = "FPNewBlackbox.preprocessed.v:3273.28-3273.170" *) _060_;
  assign Start_S = Div_start_SI | (* src = "FPNewBlackbox.preprocessed.v:3181.19-3181.47" *) Sqrt_start_SI;
  assign _038_ = _029_ | (* src = "FPNewBlackbox.preprocessed.v:3253.42-3253.115" *) _030_;
  assign _039_ = Zero_a_SN | (* src = "FPNewBlackbox.preprocessed.v:3273.50-3273.71" *) Zero_b_SN;
  assign _040_ = _039_ | (* src = "FPNewBlackbox.preprocessed.v:3273.49-3273.83" *) Inf_a_SN;
  assign _041_ = _040_ | (* src = "FPNewBlackbox.preprocessed.v:3273.48-3273.95" *) Inf_b_SN;
  assign _042_ = _041_ | (* src = "FPNewBlackbox.preprocessed.v:3273.47-3273.107" *) NaN_a_SN;
  assign _043_ = _042_ | (* src = "FPNewBlackbox.preprocessed.v:3273.46-3273.119" *) NaN_b_SN;
  assign _044_ = Zero_a_SN | (* src = "FPNewBlackbox.preprocessed.v:3273.124-3273.144" *) Inf_a_SN;
  assign _045_ = _044_ | (* src = "FPNewBlackbox.preprocessed.v:3273.123-3273.156" *) NaN_a_SN;
  assign _046_ = _045_ | (* src = "FPNewBlackbox.preprocessed.v:3273.122-3273.168" *) Sign_a_D;
  (* src = "FPNewBlackbox.preprocessed.v:3274.2-3282.34" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Special_case_dly_SBO <= 1'h0;
    else Special_case_dly_SBO <= _000_;
  (* src = "FPNewBlackbox.preprocessed.v:3254.2-3272.6" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Zero_a_SP <= 1'h0;
    else Zero_a_SP <= Zero_a_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3254.2-3272.6" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Zero_b_SP <= 1'h0;
    else Zero_b_SP <= Zero_b_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3254.2-3272.6" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Inf_a_SP <= 1'h0;
    else Inf_a_SP <= Inf_a_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3254.2-3272.6" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) Inf_b_SP <= 1'h0;
    else Inf_b_SP <= Inf_b_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3254.2-3272.6" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) NaN_a_SP <= 1'h0;
    else NaN_a_SP <= NaN_a_SN;
  (* src = "FPNewBlackbox.preprocessed.v:3254.2-3272.6" *)
  always @(posedge Clk_CI, negedge Rst_RBI)
    if (!Rst_RBI) NaN_b_SP <= 1'h0;
    else NaN_b_SP <= NaN_b_SN;
  assign _001_ = _032_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3288.12-3288.37|FPNewBlackbox.preprocessed.v:3288.8-3291.26" *) Sign_a_D : 1'hx;
  assign Sign_z_DN = _031_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3286.7-3286.31|FPNewBlackbox.preprocessed.v:3286.3-3291.26" *) _061_ : _001_;
  assign _047_ = Special_case_dly_SBO ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3279.12-3279.32|FPNewBlackbox.preprocessed.v:3279.8-3282.34" *) 1'h1 : 1'h0;
  assign _000_ = _022_ ? (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:3277.12-3277.31|FPNewBlackbox.preprocessed.v:3277.8-3282.34" *) Special_case_SBO : _047_;
  function [0:0] _131_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3207.3-3232.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _131_ = b[0:0];
      4'b??1?:
        _131_ = b[1:1];
      4'b?1??:
        _131_ = b[2:2];
      4'b1???:
        _131_ = b[3:3];
      default:
        _131_ = a;
    endcase
  endfunction
  assign Exp_b_prenorm_Inf_NaN_S = _131_(1'hx, { _009_, _013_, _017_, _021_ }, { _051_, _050_, _049_, _048_ });
  function [0:0] _132_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3207.3-3232.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _132_ = b[0:0];
      4'b??1?:
        _132_ = b[1:1];
      4'b?1??:
        _132_ = b[2:2];
      4'b1???:
        _132_ = b[3:3];
      default:
        _132_ = a;
    endcase
  endfunction
  assign Exp_a_prenorm_Inf_NaN_S = _132_(1'hx, { _008_, _012_, _016_, _020_ }, { _051_, _050_, _049_, _048_ });
  function [0:0] _133_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3207.3-3232.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _133_ = b[0:0];
      4'b??1?:
        _133_ = b[1:1];
      4'b?1??:
        _133_ = b[2:2];
      4'b1???:
        _133_ = b[3:3];
      default:
        _133_ = a;
    endcase
  endfunction
  assign Mant_b_prenorm_zero_S = _133_(1'hx, { _007_, _011_, _015_, _019_ }, { _051_, _050_, _049_, _048_ });
  function [0:0] _134_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3207.3-3232.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _134_ = b[0:0];
      4'b??1?:
        _134_ = b[1:1];
      4'b?1??:
        _134_ = b[2:2];
      4'b1???:
        _134_ = b[3:3];
      default:
        _134_ = a;
    endcase
  endfunction
  assign Mant_a_prenorm_zero_S = _134_(1'hx, { _006_, _010_, _014_, _018_ }, { _051_, _050_, _049_, _048_ });
  function [51:0] _135_;
    input [51:0] a;
    input [207:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _135_ = b[51:0];
      4'b??1?:
        _135_ = b[103:52];
      4'b?1??:
        _135_ = b[155:104];
      4'b1???:
        _135_ = b[207:156];
      default:
        _135_ = a;
    endcase
  endfunction
  assign Mant_b_NonH_D = _135_(52'hxxxxxxxxxxxxx, { Operand_b_DI[22:0], 29'h00000000, Operand_b_DI[51:0], Operand_b_DI[9:0], 42'h00000000000, Operand_b_DI[6:0], 45'h000000000000 }, { _051_, _050_, _049_, _048_ });
  function [51:0] _136_;
    input [51:0] a;
    input [207:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _136_ = b[51:0];
      4'b??1?:
        _136_ = b[103:52];
      4'b?1??:
        _136_ = b[155:104];
      4'b1???:
        _136_ = b[207:156];
      default:
        _136_ = a;
    endcase
  endfunction
  assign Mant_a_NonH_D = _136_(52'hxxxxxxxxxxxxx, { Operand_a_DI[22:0], 29'h00000000, Operand_a_DI[51:0], Operand_a_DI[9:0], 42'h00000000000, Operand_a_DI[6:0], 45'h000000000000 }, { _051_, _050_, _049_, _048_ });
  function [10:0] _137_;
    input [10:0] a;
    input [43:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _137_ = b[10:0];
      4'b??1?:
        _137_ = b[21:11];
      4'b?1??:
        _137_ = b[32:22];
      4'b1???:
        _137_ = b[43:33];
      default:
        _137_ = a;
    endcase
  endfunction
  assign Exp_b_D = _137_(11'hxxx, { 3'h0, Operand_b_DI[30:23], Operand_b_DI[62:52], 6'h00, Operand_b_DI[14:10], 3'h0, Operand_b_DI[14:7] }, { _051_, _050_, _049_, _048_ });
  function [10:0] _138_;
    input [10:0] a;
    input [43:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _138_ = b[10:0];
      4'b??1?:
        _138_ = b[21:11];
      4'b?1??:
        _138_ = b[32:22];
      4'b1???:
        _138_ = b[43:33];
      default:
        _138_ = a;
    endcase
  endfunction
  assign Exp_a_D = _138_(11'hxxx, { 3'h0, Operand_a_DI[30:23], Operand_a_DI[62:52], 6'h00, Operand_a_DI[14:10], 3'h0, Operand_a_DI[14:7] }, { _051_, _050_, _049_, _048_ });
  function [0:0] _139_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _139_ = b[0:0];
      3'b?1?:
        _139_ = b[1:1];
      3'b1??:
        _139_ = b[2:2];
      default:
        _139_ = a;
    endcase
  endfunction
  assign Sign_b_D = _139_(1'hx, { Operand_b_DI[31], Operand_b_DI[63], Operand_b_DI[15] }, { _051_, _050_, _005_ });
  function [0:0] _140_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    (* full_case = 32'd1 *)
    (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *)
    (* parallel_case *)
    casez (s)
      3'b??1:
        _140_ = b[0:0];
      3'b?1?:
        _140_ = b[1:1];
      3'b1??:
        _140_ = b[2:2];
      default:
        _140_ = a;
    endcase
  endfunction
  assign Sign_a_D = _140_(1'hx, { Operand_a_DI[31], Operand_a_DI[63], Operand_a_DI[15] }, { _051_, _050_, _005_ });
  assign _048_ = Format_sel_SI == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *) 2'h3;
  assign _049_ = Format_sel_SI == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *) 2'h2;
  assign _050_ = Format_sel_SI == (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *) 2'h1;
  assign _051_ = ! (* full_case = 32'd1 *) (* src = "FPNewBlackbox.preprocessed.v:0.0-0.0|FPNewBlackbox.preprocessed.v:3143.3-3176.10" *) Format_sel_SI;
  assign Hb_a_D = | (* src = "FPNewBlackbox.preprocessed.v:3179.18-3179.26" *) Exp_a_D;
  assign Hb_b_D = | (* src = "FPNewBlackbox.preprocessed.v:3180.18-3180.26" *) Exp_b_D;
  assign _052_ = | (* src = "FPNewBlackbox.preprocessed.v:3195.55-3195.75" *) Mant_a_NonH_D[50:0];
  assign _053_ = | (* src = "FPNewBlackbox.preprocessed.v:3197.55-3197.75" *) Mant_b_NonH_D[50:0];
  assign _054_ = | (* src = "FPNewBlackbox.preprocessed.v:3332.80-3332.98" *) Mant_leadingOne_a;
  assign _055_ = | (* src = "FPNewBlackbox.preprocessed.v:3356.80-3356.98" *) Mant_leadingOne_b;
  assign _056_ = { Hb_a_D, Mant_a_NonH_D } << (* src = "FPNewBlackbox.preprocessed.v:3324.49-3324.78" *) Mant_leadingOne_a;
  assign _057_ = { Hb_b_D, Mant_b_NonH_D } << (* src = "FPNewBlackbox.preprocessed.v:3348.49-3348.78" *) Mant_leadingOne_b;
  assign _058_ = Exp_a_D - (* src = "FPNewBlackbox.preprocessed.v:3332.49-3332.76" *) Mant_leadingOne_a;
  assign _059_ = Exp_b_D - (* src = "FPNewBlackbox.preprocessed.v:3356.49-3356.76" *) Mant_leadingOne_b;
  assign Zero_a_SN = _022_ ? (* src = "FPNewBlackbox.preprocessed.v:3247.22-3247.101" *) _023_ : Zero_a_SP;
  assign Zero_b_SN = _022_ ? (* src = "FPNewBlackbox.preprocessed.v:3248.22-3248.101" *) _024_ : Zero_b_SP;
  assign Inf_a_SN = _022_ ? (* src = "FPNewBlackbox.preprocessed.v:3249.21-3249.102" *) _025_ : Inf_a_SP;
  assign Inf_b_SN = _022_ ? (* src = "FPNewBlackbox.preprocessed.v:3250.21-3250.102" *) _026_ : Inf_b_SP;
  assign NaN_a_SN = _022_ ? (* src = "FPNewBlackbox.preprocessed.v:3251.21-3251.103" *) _027_ : NaN_a_SP;
  assign NaN_b_SN = _022_ ? (* src = "FPNewBlackbox.preprocessed.v:3252.21-3252.103" *) _028_ : NaN_b_SP;
  assign _060_ = Div_start_SI ? (* src = "FPNewBlackbox.preprocessed.v:3273.31-3273.168" *) _043_ : _046_;
  assign _061_ = Sign_a_D ^ (* src = "FPNewBlackbox.preprocessed.v:3287.16-3287.35" *) Sign_b_D;
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3317.4-3321.3" *)
  \$paramod$f63662f9b52d30dc01537496e32d795d2895a3c6\lzc  LOD_Ua (
    .cnt_o(Mant_leadingOne_a),
    .empty_o(Mant_zero_S_a),
    .in_i({ Hb_a_D, Mant_a_NonH_D })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "FPNewBlackbox.preprocessed.v:3341.4-3345.3" *)
  \$paramod$f63662f9b52d30dc01537496e32d795d2895a3c6\lzc  LOD_Ub (
    .cnt_o(Mant_leadingOne_b),
    .empty_o(Mant_zero_S_b),
    .in_i({ Hb_b_D, Mant_b_NonH_D })
  );
  assign Exp_a_DO_norm = Exp_a_norm_DP;
  assign Exp_b_DO_norm = Exp_b_norm_DP;
  assign Inf_a_SO = Inf_a_SP;
  assign Inf_b_SO = Inf_b_SP;
  assign Mant_a_D = { Hb_a_D, Mant_a_NonH_D };
  assign Mant_a_DO_norm = Mant_a_norm_DP;
  assign Mant_b_D = { Hb_b_D, Mant_b_NonH_D };
  assign Mant_b_DO_norm = Mant_b_norm_DP;
  assign NaN_a_SO = NaN_a_SP;
  assign NaN_b_SO = NaN_b_SP;
  assign RM_dly_SO = RM_DP;
  assign SNaN_SO = SNaN_SP;
  assign Sign_z_DO = Sign_z_DP;
  assign Start_SO = Start_S;
  assign Zero_a_SO = Zero_a_SP;
  assign Zero_b_SO = Zero_b_SP;
endmodule
